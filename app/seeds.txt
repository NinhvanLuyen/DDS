ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: ninh.luyen.dds.datas.remotes.responses.City getCity()
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman$Node root
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings DEFAULT_SETTINGS
okhttp3.internal.connection.RealCall: okio.AsyncTimeout timeout()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer writer
okhttp3.internal.tls.BasicTrustRootIndex
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: void close()
okhttp3.CertificatePinner$Pin: java.lang.String toString()
okhttp3.internal.http2.StreamResetException
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Response)
okhttp3.ConnectionSpec$Builder: boolean tls
okhttp3.internal.ws.RealWebSocket: java.lang.String access$getName$p(okhttp3.internal.ws.RealWebSocket)
com.google.android.material.datepicker.RangeDateSelector
com.google.gson.stream.JsonReader: boolean isLiteral(char)
okhttp3.Cache$Entry: java.lang.String requestMethod
com.google.gson.stream.JsonReader: int PEEKED_EOF
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Source source(java.io.File)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $cancelable
androidx.appcompat.widget.FitWindowsLinearLayout
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: StandardAndroidSocketAdapter(java.lang.Class,java.lang.Class,java.lang.Class)
okhttp3.HttpUrl$Builder: java.lang.String encodedPassword
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
okhttp3.internal.cache2.Relay: long FILE_HEADER_SIZE
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
okhttp3.MultipartReader$Companion
com.google.gson.stream.JsonReader: void nextNull()
okhttp3.internal.http2.Http2Connection$ReaderRunnable
okhttp3.internal.cache2.Relay: java.lang.Thread upstreamReader
okhttp3.internal.connection.RealConnection: void cancel()
okhttp3.internal.connection.Exchange: okhttp3.Headers trailers()
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
okhttp3.internal.ws.WebSocketReader: boolean noContextTakeover
com.google.gson.stream.JsonReader: int peekKeyword()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.lang.String $name
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.Response: java.util.List challenges()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: java.lang.String $name
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
com.google.gson.FieldNamingPolicy$1: java.lang.String translateName(java.lang.reflect.Field)
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $inFinished$inlined
com.google.gson.LongSerializationPolicy
androidx.multidex.MultiDexApplication
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
androidx.customview.view.AbsSavedState
okhttp3.internal.http.RealInterceptorChain: int getConnectTimeoutMillis$okhttp()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1(java.lang.String,java.lang.String,long,okhttp3.internal.ws.RealWebSocket,java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams,okhttp3.internal.ws.WebSocketExtensions)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
okhttp3.CertificatePinner$Pin: okio.ByteString getHash()
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.google.gson.stream.MalformedJsonException: long serialVersionUID
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,okio.Buffer)
okhttp3.Headers: java.time.Instant getInstant(java.lang.String)
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount()
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform$Companion Companion
okio.Timeout: okio.Timeout clearTimeout()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
okhttp3.EventListener: void cacheConditionalHit(okhttp3.Call,okhttp3.Response)
okhttp3.Cache: java.util.Iterator urls()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT
ninh.luyen.dds.datas.remotes.responses.Coordinator: double getLon()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newUnknownLengthSource()
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.Coordinator: double component1()
okhttp3.logging.LoggingEventListener: void callEnd(okhttp3.Call)
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache getCache$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(java.time.Duration)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
okhttp3.logging.Utf8Kt: boolean isProbablyUtf8(okio.Buffer)
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setAlpnProtocols
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: java.util.List getList()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: TaskQueue$AwaitIdleTask()
okhttp3.Address: java.util.List protocols
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
okhttp3.Headers$Companion: Headers$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: DiskLruCache$cleanupTask$1(okhttp3.internal.cache.DiskLruCache,java.lang.String)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean)
okhttp3.internal.connection.RealConnection: long getIdleAtNs$okhttp()
okhttp3.internal.cache.DiskLruCache: java.io.File directory
okhttp3.internal.platform.Platform$Companion
okhttp3.internal.http.BridgeInterceptor: okhttp3.CookieJar cookieJar
okhttp3.internal.http2.Header: java.lang.String TARGET_PATH_UTF8
okhttp3.OkHttpClient: boolean followRedirects
okhttp3.Cache$Entry: int code
okhttp3.HttpUrl: java.lang.String -deprecated_encodedQuery()
okhttp3.internal.connection.Exchange: void responseHeadersStart()
okhttp3.Cookie$Builder: long expiresAt
okhttp3.internal.cache.DiskLruCache$Entry: DiskLruCache$Entry(okhttp3.internal.cache.DiskLruCache,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
okhttp3.logging.LoggingEventListener$Factory
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.MultipartReader$Companion: okio.Options getAfterBoundaryOptions()
okhttp3.internal.platform.android.Android10SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion()
okhttp3.MediaType: int hashCode()
okhttp3.internal.ws.RealWebSocket$WriterTask: long runOnce()
okhttp3.HttpUrl$Builder: java.lang.String getEncodedUsername$okhttp()
okhttp3.internal.http2.Huffman$Node: Huffman$Node(int,int)
okhttp3.internal.http2.Http2Stream: void cancelStreamIfNecessary$okhttp()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
okhttp3.Cookie: java.lang.String toString$okhttp(boolean)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.gson.stream.JsonReader: int PEEKED_END_ARRAY
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type BASELINE
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getRoutes()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
okhttp3.internal.http2.Hpack$Reader: int dynamicTableByteCount
okhttp3.ConnectionPool: void evictAll()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.Request$Builder: okhttp3.Request$Builder head()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.versionedparcelable.CustomVersionedParcelable
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.BasicCertificateChainCleaner$Companion Companion
okhttp3.internal.platform.android.CloseGuard: boolean warnIfOpen(java.lang.Object)
com.google.android.material.chip.Chip: void setCheckableResource(int)
androidx.constraintlayout.widget.Guideline
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
okhttp3.FormBody: int -deprecated_size()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
ninh.luyen.dds.datas.remotes.responses.City: int component3()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(java.time.Duration)
okhttp3.HttpUrl$Builder: boolean isDotDot(java.lang.String)
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.cache2.Relay: okio.Buffer upstreamBuffer
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.BufferedSource source
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion()
okio.AsyncTimeout: java.lang.Object withTimeout(kotlin.jvm.functions.Function0)
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_CLOSE
com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete
okhttp3.internal.http2.Hpack$Writer
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
okhttp3.internal.cache2.Relay: int SOURCE_FILE
okhttp3.CookieJar$Companion$NoCookies: java.util.List loadForRequest(okhttp3.HttpUrl)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
okio.AsyncTimeout: long timeoutAt
okhttp3.Challenge: java.util.Map authParams
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: ConstraintAnchor$Type(java.lang.String,int)
ninh.luyen.dds.commons.BaseFragment: BaseFragment()
okhttp3.CertificatePinner: java.util.Set pins
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink appendingSink(java.io.File)
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState
okhttp3.internal.platform.android.CloseGuard: okhttp3.internal.platform.android.CloseGuard$Companion Companion
androidx.appcompat.app.AppCompatActivity
okhttp3.internal.connection.RealConnectionPool: void evictAll()
okhttp3.Cache$RealCacheRequest
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
okhttp3.Response$Builder: java.lang.String getMessage$okhttp()
androidx.recyclerview.widget.LinearLayoutManager
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String)
okhttp3.CertificatePinner: okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.internal.http2.Header: java.lang.String toString()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers()
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
okhttp3.MultipartReader: okio.BufferedSource access$getSource$p(okhttp3.MultipartReader)
okhttp3.internal.connection.RealCall: RealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
okhttp3.internal.http2.Http2Writer: Http2Writer(okio.BufferedSink,boolean)
okhttp3.internal.http2.Http2Reader$Companion: int lengthWithoutPadding(int,int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
okhttp3.CipherSuite: java.util.Map access$getINSTANCES$cp()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
okhttp3.internal.cache2.Relay: boolean getComplete()
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector$Selection routeSelection
okhttp3.internal.ws.WebSocketWriter: java.util.Random random
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner taskRunner
okhttp3.Cache: void setWriteAbortCount$okhttp(int)
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall this$0
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: long read(okio.Buffer,long)
okhttp3.CookieJar$Companion: CookieJar$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection: java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String PROXY_CONNECTION
okhttp3.internal.Util$asFactory$1: Util$asFactory$1(okhttp3.EventListener)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
okhttp3.internal.http2.Http2Writer: okio.BufferedSink sink
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy[] values()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
okhttp3.internal.http2.Http2Stream$FramingSource: Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream,long,boolean)
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
okhttp3.internal.cache2.Relay: void setUpstreamPos(long)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
com.google.android.material.badge.BadgeDrawable$SavedState
okhttp3.CertificatePinner$check$1
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink newJournalWriter()
okhttp3.internal.ws.RealWebSocket
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.appcompat.widget.SearchView$SavedState
okhttp3.logging.HttpLoggingInterceptor$Logger: okhttp3.logging.HttpLoggingInterceptor$Logger DEFAULT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.Cache$CacheResponseBody: java.lang.String contentLength
org.koin.androidx.scope.ScopeService
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long $pingIntervalNanos$inlined
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.Challenge: java.lang.String scheme()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder$Companion Companion
okhttp3.Connection: java.net.Socket socket()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okhttp3.internal.connection.RealCall: java.lang.Object callStackTrace
okhttp3.internal.http.CallServerInterceptor
okhttp3.logging.LoggingEventListener: okhttp3.logging.HttpLoggingInterceptor$Logger logger
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString reason
okhttp3.internal.ws.RealWebSocket$connect$1: void onFailure(okhttp3.Call,java.io.IOException)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty0$Getter getGetter()
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connectionToCancel
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onRequest(int,java.util.List)
okhttp3.Request$Builder: void setBody$okhttp(okhttp3.RequestBody)
okhttp3.internal.http2.Http2Stream$FramingSource: boolean closed
okhttp3.internal.http2.ErrorCode$Companion
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
okhttp3.internal.connection.Exchange: void trackFailure(java.io.IOException)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: boolean cacheRequestClosed
okhttp3.internal.cache.CacheRequest
okhttp3.Interceptor: okhttp3.Interceptor$Companion Companion
okhttp3.OkHttpClient$Builder: void setConnectTimeout$okhttp(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1
org.koin.core.error.MissingPropertyException
okhttp3.ConnectionSpec$Builder: boolean getTls$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec: long reportedContentLength(okhttp3.Response)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.String toString()
okhttp3.internal.platform.Jdk9Platform$Companion: boolean isAvailable()
okhttp3.internal.http2.Http2Connection: long intervalPongsReceived
okhttp3.Authenticator$Companion
okhttp3.internal.http.RealResponseBody: long contentLength()
okhttp3.internal.http2.Http2Reader$Handler: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
okhttp3.Cache$CacheResponseBody
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $byteCount$inlined
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
okhttp3.OkHttpClient$Builder: java.net.ProxySelector getProxySelector$okhttp()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
okhttp3.internal.connection.RouteSelector: boolean hasNext()
com.google.gson.LongSerializationPolicy$1
okhttp3.internal.Util: void addIfAbsent(java.util.List,java.lang.Object)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.internal.concurrent.TaskRunner,okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long,okhttp3.internal.ws.WebSocketExtensions,long)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Stream: long getReadBytesTotal()
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: int cnt
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.OkHttpClient: boolean followSslRedirects
okhttp3.Cache: long size()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
okhttp3.HttpUrl: java.util.List -deprecated_encodedPathSegments()
okhttp3.internal.cache.DiskLruCache: void processJournal()
okhttp3.Response: okhttp3.Response priorResponse
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean getUnsupported()
okhttp3.internal.ws.WebSocketProtocol: long CLOSE_MESSAGE_MAX
okhttp3.OkHttpClient: okhttp3.ConnectionPool -deprecated_connectionPool()
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Response$Builder: okhttp3.Response cacheResponse
kotlin.reflect.KVisibility
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
okhttp3.internal.ws.WebSocketReader: okio.Buffer messageFrameBuffer
okhttp3.internal.cache2.Relay: void setFile(java.io.RandomAccessFile)
okhttp3.internal.http2.Http2: int FLAG_END_PUSH_PROMISE
okhttp3.OkHttpClient: int pingIntervalMillis()
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteDatabase routeDatabase
okhttp3.HttpUrl$Companion: void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean)
okhttp3.internal.connection.ExchangeFinder: int connectionShutdownCount
okhttp3.Cache$RealCacheRequest$1: Cache$RealCacheRequest$1(okhttp3.Cache$RealCacheRequest,okio.Sink)
org.koin.androidx.scope.ScopeService: ScopeService()
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void delete(java.io.File)
okhttp3.CertificatePinner$Pin: int hashCode()
com.google.gson.stream.JsonReader: boolean nextBoolean()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported()
okhttp3.logging.LoggingEventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState
okhttp3.HttpUrl: int -deprecated_port()
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
ninh.luyen.dds.datas.remotes.responses.Weather: int getId()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.HttpUrl: java.lang.String -deprecated_fragment()
okhttp3.Dispatcher: java.util.ArrayDeque readyAsyncCalls
okhttp3.OkHttpClient$Builder: void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase)
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace(java.lang.String,int,int)
okhttp3.internal.cache.DiskLruCache: void close()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion()
com.google.android.material.slider.RangeSlider$RangeSliderState
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
okhttp3.CipherSuite: CipherSuite(java.lang.String)
okhttp3.HttpUrl: char[] access$getHEX_DIGITS$cp()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
okhttp3.Dispatcher: void executed$okhttp(okhttp3.internal.connection.RealCall)
okhttp3.internal.HostnamesKt: boolean containsInvalidHostnameAsciiCodes(java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
okhttp3.HttpUrl$Builder: java.util.List getEncodedQueryNamesAndValues$okhttp()
okhttp3.internal.cache.DiskLruCache$Editor: boolean done
okhttp3.EventListener: void callEnd(okhttp3.Call)
okhttp3.Response: okhttp3.Response networkResponse
okhttp3.HttpUrl: java.lang.String encodedPath()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] $VALUES
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Dns$Companion: Dns$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1
okhttp3.internal.cache.FaultHidingSink
kotlinx.coroutines.CompletionHandlerException
okhttp3.Response: okhttp3.Response -deprecated_priorResponse()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.CacheStrategy: okhttp3.Request getNetworkRequest()
okhttp3.internal.http.HttpHeaders: boolean skipCommasAndWhitespace(okio.Buffer)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,kotlin.jvm.internal.Ref$ObjectRef,boolean,okhttp3.internal.http2.Settings,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$ObjectRef)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
ninh.luyen.dds.datas.remotes.responses.Temp: double getDay()
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource getSource()
okhttp3.internal.http2.Http2Stream: java.io.IOException getErrorException$okhttp()
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
okio.ForwardingSource: long read(okio.Buffer,long)
okhttp3.internal.http2.Hpack: int PREFIX_4_BITS
okhttp3.internal.cache2.Relay: int getSourceCount()
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
okhttp3.MultipartReader$Part: okhttp3.Headers headers()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
okhttp3.CertificatePinner: okhttp3.CertificatePinner$Companion Companion
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Request getRequest()
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector DAY
ninh.luyen.dds.datas.remotes.responses.City: ninh.luyen.dds.datas.remotes.responses.City copy$default(ninh.luyen.dds.datas.remotes.responses.City,ninh.luyen.dds.datas.remotes.responses.Coordinator,java.lang.String,int,java.lang.String,int,int,int,java.lang.Object)
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque messageAndCloseQueue
okhttp3.ResponseBody: java.lang.String string()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams$okhttp(okhttp3.internal.connection.Exchange)
ninh.luyen.dds.datas.cache.models.SearchCache: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel searchResponseModel
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
okhttp3.internal.connection.RealConnectionPool: java.util.concurrent.ConcurrentLinkedQueue connections
okhttp3.internal.connection.RealConnection: void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException)
com.google.gson.stream.JsonReader: void endObject()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response stripBody(okhttp3.Response)
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV1
okhttp3.internal.concurrent.TaskQueue: void schedule(java.lang.String,long,kotlin.jvm.functions.Function0)
okhttp3.internal.cache.DiskLruCache$snapshots$1: boolean hasNext()
androidx.customview.view.AbsSavedState$1
okhttp3.internal.ws.RealWebSocket: void checkUpgradeSuccess$okhttp(okhttp3.Response,okhttp3.internal.connection.Exchange)
okhttp3.internal.http2.Http2Connection: long awaitPingsSent
io.reactivex.exceptions.MissingBackpressureException: long serialVersionUID
okhttp3.internal.concurrent.TaskRunner$Companion
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream getStream(int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.recyclerview.widget.StaggeredGridLayoutManager
ninh.luyen.dds.datas.remotes.responses.FeelLike: ninh.luyen.dds.datas.remotes.responses.FeelLike copy(double,double,double,double)
ninh.luyen.dds.datas.remotes.responses.Detail: int getSunset()
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
okhttp3.ResponseBody: void close()
okhttp3.internal.authenticator.JavaNetAuthenticator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.ws.RealWebSocket$Message
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Buffer sendBuffer
okhttp3.Dns: java.util.List lookup(java.lang.String)
okhttp3.Response: okhttp3.Protocol -deprecated_protocol()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate)
okhttp3.internal.Util: okhttp3.Headers EMPTY_HEADERS
okhttp3.internal.platform.android.DeferredSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion()
okhttp3.MultipartReader$Companion: MultipartReader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: java.util.List protocols
okhttp3.internal.cache.DiskLruCache: void access$setInitialized$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion()
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String getConnectionName$okhttp()
ninh.luyen.dds.datas.remotes.responses.BaseModel
okhttp3.internal.ws.WebSocketReader: void readUntilNonControlFrame()
okhttp3.FormBody: okhttp3.MediaType CONTENT_TYPE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.ws.WebSocketWriter: void writeControlFrame(int,okio.ByteString)
kotlin.SynchronizedLazyImpl: java.lang.Object writeReplace()
okhttp3.Handshake: java.security.Principal -deprecated_localPrincipal()
okhttp3.Request: java.util.List headers(java.lang.String)
okhttp3.internal.SuppressSignatureCheck
okhttp3.Request$Builder
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNKNOWN
okhttp3.internal.connection.Exchange: okio.Sink createRequestBody(okhttp3.Request,boolean)
okhttp3.Response: okhttp3.ResponseBody body
okhttp3.internal.ws.RealWebSocket$Streams: boolean getClient()
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Protocol protocol
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory socketFactory
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: Http2Connection$$special$$inlined$schedule$1(java.lang.String,java.lang.String,okhttp3.internal.http2.Http2Connection,long)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink
ninh.luyen.dds.datas.remotes.responses.Weather: int hashCode()
okhttp3.internal.connection.RealConnectionPool$Companion
okhttp3.FormBody: java.lang.String value(int)
okhttp3.Credentials
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: int hashCode()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: BouncyCastleSocketAdapter()
okhttp3.internal.http2.Http2Connection: java.lang.String getConnectionName$okhttp()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
okhttp3.logging.LoggingEventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
okhttp3.HttpUrl$Builder: void setEncodedPassword$okhttp(java.lang.String)
okhttp3.internal.cache2.Relay$Companion: Relay$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
okhttp3.internal.http2.Settings: int getMaxFrameSize(int)
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion()
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
okhttp3.internal.ws.RealWebSocket: okhttp3.Request originalRequest
androidx.appcompat.widget.SearchView: int getMaxWidth()
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine get(okhttp3.Response)
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE
androidx.core.graphics.drawable.IconCompatParcelizer
ninh.luyen.dds.datas.remotes.responses.City: ninh.luyen.dds.datas.remotes.responses.Coordinator coord
okhttp3.HttpUrl: java.lang.String -deprecated_username()
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.FileOperator fileOperator
okhttp3.Address: okhttp3.Authenticator -deprecated_proxyAuthenticator()
okhttp3.internal.concurrent.TaskRunner: int nextQueueName
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
okhttp3.Handshake$Companion$get$1
okhttp3.internal.connection.Exchange: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams()
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache this$0
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector YEAR
okhttp3.internal.http2.Http2Stream: long writeBytesMaximum
okhttp3.Authenticator$Companion$AuthenticatorNone
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion
okhttp3.Cookie$Companion: boolean domainMatch(java.lang.String,java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void close()
androidx.versionedparcelable.ParcelImpl
okhttp3.Handshake$peerCertificates$2: java.util.List invoke()
okhttp3.internal.cache.DiskLruCache: DiskLruCache(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,okhttp3.internal.concurrent.TaskRunner)
com.google.gson.FieldNamingPolicy
okhttp3.internal.http2.Hpack$Writer: void writeInt(int,int,int)
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] RESTRICTED_CIPHER_SUITES
okhttp3.Connection: okhttp3.Handshake handshake()
okhttp3.internal.http2.Settings: int getInitialWindowSize()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$Companion Companion
okhttp3.internal.cache.DiskLruCache$Entry: long[] getLengths$okhttp()
okhttp3.Headers: java.util.Date getDate(java.lang.String)
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Companion Companion
com.google.gson.FieldNamingPolicy: java.lang.String modifyString(char,java.lang.String,int)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
okhttp3.Dns$Companion: Dns$Companion()
okhttp3.HttpUrl$Builder$Companion: int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
okhttp3.CipherSuite: java.lang.String javaName()
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] $VALUES
okhttp3.Protocol$Companion
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: long runOnce()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
okhttp3.Headers$Companion: java.lang.String get(java.lang.String[],java.lang.String)
io.reactivex.exceptions.CompositeException
okhttp3.internal.Internal: okhttp3.Cookie parseCookie(long,okhttp3.HttpUrl,java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
ninh.luyen.dds.datas.cache.models.SearchCache: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel component2()
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: long size(java.io.File)
okhttp3.internal.cache.DiskLruCache: kotlin.text.Regex LEGAL_KEY_PATTERN
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnAttachStateChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnAttachStateChangeListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.google.gson.stream.JsonWriter: int peek()
okhttp3.HttpUrl$Builder: java.lang.String scheme
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl)
okhttp3.EventListener$Companion$NONE$1
okhttp3.internal.http2.Http2Stream$FramingSink: void flush()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] $VALUES
okhttp3.internal.platform.Platform$Companion: java.util.List alpnProtocolNames(java.util.List)
okhttp3.internal.http2.Http2Connection$Builder: void setListener$okhttp(okhttp3.internal.http2.Http2Connection$Listener)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: long runOnce()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion Companion
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.internal.concurrent.TaskQueue: boolean cancelActiveTask
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.AndroidPlatform$Companion Companion
okhttp3.FormBody: java.util.List encodedValues
kotlin.collections.EmptySet: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
okhttp3.OkHttpClient$Builder: void setCache$okhttp(okhttp3.Cache)
okhttp3.internal.http2.Http2Stream: java.util.ArrayDeque headersQueue
com.google.gson.stream.JsonWriter: java.lang.String indent
okhttp3.Headers: java.lang.String name(int)
okhttp3.OkHttpClient$Builder: void setEventListenerFactory$okhttp(okhttp3.EventListener$Factory)
okhttp3.Request$Builder: okhttp3.HttpUrl url
okhttp3.Interceptor$Companion$invoke$1: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3
okhttp3.internal.connection.RouteSelector: okhttp3.Address access$getAddress$p(okhttp3.internal.connection.RouteSelector)
okhttp3.internal.http2.Http2Stream: void setReadBytesAcknowledged$okhttp(long)
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READING_RESPONSE_BODY
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry getEntry$okhttp()
okhttp3.RequestBody$Companion$toRequestBody$1: okio.ByteString $this_toRequestBody
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
okhttp3.internal.concurrent.TaskRunner: void cancelAll()
com.google.android.material.chip.Chip: float getChipCornerRadius()
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1
okhttp3.CacheControl: int -deprecated_maxAgeSeconds()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
okhttp3.internal.http2.Http2Stream: void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode)
okhttp3.OkHttpClient$Builder: int getCallTimeout$okhttp()
okhttp3.internal.connection.RealConnectionPool: RealConnectionPool(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Reader: void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.internal.cache.DiskLruCache$Entry: void setCurrentEditor$okhttp(okhttp3.internal.cache.DiskLruCache$Editor)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
ninh.luyen.dds.commons.BaseActivity: BaseActivity()
okhttp3.internal.http2.Http2Connection: void updateConnectionFlowControl$okhttp(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
kotlin.coroutines.CombinedContext: java.lang.Object writeReplace()
com.google.gson.stream.JsonReader: int NUMBER_CHAR_NONE
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String selected
okhttp3.HttpUrl: java.lang.String -deprecated_encodedUsername()
okhttp3.Response$Builder: okhttp3.ResponseBody getBody$okhttp()
com.google.android.material.textfield.TextInputLayout: int getErrorTextCurrentColor()
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion()
okhttp3.HttpUrl$Builder: java.util.List encodedPathSegments
okhttp3.internal.http2.Settings: int set
okhttp3.internal.http2.Http2Writer: void windowUpdate(int,long)
okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)
com.google.gson.stream.JsonWriter: void writeDeferredName()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
ninh.luyen.dds.datas.remotes.responses.Temp: ninh.luyen.dds.datas.remotes.responses.Temp copy(double,double,double,double,double,double)
com.google.gson.stream.JsonReader: int nextInt()
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: java.lang.String $name
okhttp3.internal.concurrent.TaskQueue$schedule$2: TaskQueue$schedule$2(kotlin.jvm.functions.Function0,java.lang.String,java.lang.String)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
okhttp3.internal.connection.RouteSelector: void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy)
com.google.gson.stream.JsonReader: java.lang.String locationString()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
okhttp3.internal.platform.OpenJSSEPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
okhttp3.HttpUrl$Builder: java.lang.String getEncodedPassword$okhttp()
okhttp3.internal.platform.Platform
okhttp3.internal.concurrent.TaskRunner
okhttp3.internal.http2.ConnectionShutdownException
okhttp3.internal.http2.Http2Connection: long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection)
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType contentType()
okhttp3.Response$Builder: Response$Builder(okhttp3.Response)
okhttp3.logging.LoggingEventListener: void cacheMiss(okhttp3.Call)
okhttp3.OkHttpClient: java.util.List protocols()
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
okhttp3.internal.http2.Http2Connection: void writePing()
okhttp3.internal.concurrent.TaskQueue: boolean shutdown
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.atomic.AtomicBoolean listRead
com.google.gson.stream.JsonReader: int PEEKED_TRUE
androidx.appcompat.widget.ActionBarContextView
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
okhttp3.MediaType: java.util.regex.Pattern TYPE_SUBTYPE
androidx.activity.ComponentActivity$4
okhttp3.internal.connection.RealConnection: java.lang.String NPE_THROW_WITH_NULL
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: java.lang.String component3()
ninh.luyen.dds.datas.remotes.responses.Temp: double component1()
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
okhttp3.MultipartReader: long currentPartBytesRemaining(long)
okhttp3.internal.tls.TrustRootIndex
okhttp3.Response$Builder: void checkSupportResponse(java.lang.String,okhttp3.Response)
com.google.gson.stream.JsonReader: int PEEKED_BEGIN_ARRAY
androidx.viewpager2.adapter.FragmentStateAdapter$2
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
okhttp3.OkHttpClient: int -deprecated_writeTimeoutMillis()
okhttp3.internal.platform.OpenJSSEPlatform$Companion: okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class)
okhttp3.internal.platform.Jdk9Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object)
okhttp3.internal.platform.android.AndroidLog: void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable)
okhttp3.internal.connection.RealConnection: boolean routeMatchesAny(java.util.List)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.gson.stream.JsonReader: void endArray()
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Huffman
okhttp3.MultipartReader: void close()
okhttp3.internal.cache.DiskLruCache: boolean access$journalRebuildRequired(okhttp3.internal.cache.DiskLruCache)
androidx.activity.ComponentActivity
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean,okhttp3.internal.concurrent.TaskRunner)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
okhttp3.internal.ws.WebSocketWriter: void writeMessageFrame(int,okio.ByteString)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
okhttp3.internal.cache2.Relay: long bufferMaxSize
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: java.lang.String $name
com.google.android.material.button.MaterialButton$SavedState
okhttp3.internal.http2.Http2Reader: void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
okhttp3.Request$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec: void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int)
okhttp3.Protocol: okhttp3.Protocol SPDY_3
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue getQueue$okhttp()
okhttp3.internal.concurrent.TaskQueue$execute$1: java.lang.String $name
okhttp3.Cookie$Builder: java.lang.String path
okhttp3.internal.Util$threadFactory$1: boolean $daemon
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
okhttp3.internal.connection.Exchange$ResponseBodySource
okhttp3.HttpUrl: java.lang.String password()
android.support.v4.app.RemoteActionCompatParcelizer
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.util.Date)
okhttp3.internal.platform.Jdk9Platform
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
okhttp3.MultipartReader: okio.ByteString dashDashBoundary
okhttp3.internal.http2.Settings: int getMaxConcurrentStreams()
okhttp3.Request: java.lang.String toString()
okhttp3.Response: Response(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange)
androidx.fragment.app.Fragment$InstantiationException
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
com.google.gson.stream.JsonReader: void skipQuotedValue(char)
com.google.gson.stream.JsonReader: char[] NON_EXECUTE_PREFIX
okhttp3.Call: boolean isCanceled()
android.support.v4.os.ResultReceiver
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
okhttp3.Address: java.util.List -deprecated_protocols()
okhttp3.internal.http2.Http2Stream$FramingSource: void receive$okhttp(okio.BufferedSource,long)
okhttp3.Cache: int writeAbortCount()
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object)
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String icon
okhttp3.internal.ws.RealWebSocket: java.util.List ONLY_HTTP1
okhttp3.internal.platform.BouncyCastlePlatform: boolean access$isSupported$cp()
okhttp3.internal.connection.RealCall: okhttp3.Response execute()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String key
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour
okio.ForwardingSink: okio.Timeout timeout()
androidx.versionedparcelable.VersionedParcel$ParcelException
okhttp3.internal.connection.RealCall: boolean responseBodyOpen
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
okhttp3.OkHttpClient: int pingIntervalMillis
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
okhttp3.HttpUrl: java.lang.String -deprecated_scheme()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
okhttp3.internal.ws.RealWebSocket$Message: int formatOpcode
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.Address: java.net.Proxy -deprecated_proxy()
okhttp3.EventListener: void callStart(okhttp3.Call)
okhttp3.MediaType$Companion: okhttp3.MediaType parse(java.lang.String)
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_REENCODE_SET
okhttp3.internal.ws.WebSocketReader: void processNextFrame()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
okhttp3.internal.cache.DiskLruCache: java.lang.String READ
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
okhttp3.internal.cache.DiskLruCache$Entry: void setSequenceNumber$okhttp(long)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.time.Instant)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
okhttp3.internal.ws.WebSocketExtensions: java.lang.String toString()
okhttp3.logging.HttpLoggingInterceptor$Logger
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
okhttp3.internal.connection.RealCall: java.io.IOException noMoreExchanges$okhttp(java.io.IOException)
com.google.gson.FieldNamingPolicy$3: FieldNamingPolicy$3(java.lang.String,int)
okhttp3.Headers: java.lang.String value(int)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
com.google.gson.FieldNamingPolicy$5: java.lang.String translateName(java.lang.reflect.Field)
okhttp3.RequestBody$Companion$asRequestBody$1: void writeTo(okio.BufferedSink)
org.koin.core.logger.Level: org.koin.core.logger.Level valueOf(java.lang.String)
okhttp3.Handshake$peerCertificates$2: kotlin.jvm.functions.Function0 $peerCertificatesFn
okhttp3.Call
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
okhttp3.internal.cache.FaultHidingSink: void close()
okhttp3.internal.http1.Http1ExchangeCodec: void skipConnectBody(okhttp3.Response)
okhttp3.MediaType: java.lang.String type
okhttp3.internal.http2.Http2Connection: void start()
okhttp3.internal.http2.Hpack$Reader: java.util.List headerList
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getFlags()
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task getActiveTask$okhttp()
ninh.luyen.dds.datas.cache.models.SearchCache: ninh.luyen.dds.datas.cache.models.SearchCache copy(java.lang.String,ninh.luyen.dds.datas.remotes.responses.SearchResponseModel)
okhttp3.internal.http2.Settings: int getMaxHeaderListSize(int)
okhttp3.Cookie: long expiresAt
okhttp3.CertificatePinner$check$1: java.util.List invoke()
ninh.luyen.dds.datas.remotes.responses.City: java.lang.String toString()
okhttp3.OkHttpClient$Builder: java.util.List getProtocols$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.Timeout timeout()
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1
okhttp3.HttpUrl: int -deprecated_querySize()
okhttp3.internal.http2.ErrorCode: int httpCode
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.net.Proxy $proxy
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger
okhttp3.internal.http2.Http2Connection$Builder: int pingIntervalMillis
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink sink
okhttp3.internal.cache.DiskLruCache: long nextSequenceNumber
okhttp3.internal.ws.MessageDeflater: void deflate(okio.Buffer)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
okhttp3.Interceptor$Chain: okhttp3.Request request()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: DependencyNode$Type(java.lang.String,int)
ninh.luyen.dds.datas.remotes.responses.Coordinator: double lat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion()
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
okhttp3.OkHttpClient$Builder: boolean getFollowRedirects$okhttp()
okhttp3.internal.connection.Exchange: boolean isDuplex
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion()
okhttp3.OkHttpClient$Builder: int writeTimeout
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
okhttp3.Credentials: java.lang.String basic$default(java.lang.String,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSource $source
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion Companion
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType INT_TYPE
androidx.transition.ChangeBounds$7: androidx.transition.ChangeBounds$ViewBounds mViewBounds
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
okhttp3.Response$Builder: void setReceivedResponseAtMillis$okhttp(long)
okhttp3.Cookie$Companion: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void setClosed(boolean)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Reader: void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
okhttp3.MultipartBody: okhttp3.MediaType MIXED
okhttp3.internal.http2.Settings$Companion
com.google.gson.stream.JsonReader: int PEEKED_BUFFERED
kotlin.jvm.internal.CallableReference: boolean isTopLevel
ninh.luyen.dds.datas.remotes.responses.Detail: Detail(int,int,int,ninh.luyen.dds.datas.remotes.responses.Temp,ninh.luyen.dds.datas.remotes.responses.FeelLike,java.util.List,int,int)
okhttp3.OkHttpClient$Builder: void setRetryOnConnectionFailure$okhttp(boolean)
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.DiskLruCache: boolean removeEntry$okhttp(okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downTo(androidx.lifecycle.Lifecycle$State)
okhttp3.internal.connection.Exchange: Exchange(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec)
okhttp3.OkHttpClient: javax.net.SocketFactory -deprecated_socketFactory()
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: Http2Connection$pushRequestLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List)
okio.ByteString: byte[] data
okhttp3.internal.platform.Platform: int WARN
okhttp3.internal.http2.Http2Connection$Companion
okhttp3.internal.Util: void notify(java.lang.Object)
okhttp3.internal.Util: boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl)
okhttp3.Dispatcher: java.util.List queuedCalls()
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
com.google.gson.stream.JsonScope: int NONEMPTY_DOCUMENT
okhttp3.internal.platform.BouncyCastlePlatform: java.security.Provider provider
okhttp3.ResponseBody$BomAwareReader: java.io.Reader delegate
okhttp3.Address: javax.net.SocketFactory socketFactory()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
okhttp3.internal.http.ExchangeCodec: long reportedContentLength(okhttp3.Response)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType COLOR_TYPE
okhttp3.internal.platform.Platform: java.util.logging.Logger logger
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType $contentType
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: RecyclerView$Adapter$StateRestorationPolicy(java.lang.String,int)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: double getMessage()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.internal.connection.RealConnection
okhttp3.internal.platform.android.AndroidLog
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
okhttp3.Cookie: boolean hostOnly()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
org.koin.core.error.DefinitionOverrideException
okhttp3.internal.http2.Http2Connection: int DEGRADED_PING
okhttp3.internal.ws.WebSocketReader: boolean perMessageDeflate
okhttp3.Response: okhttp3.Protocol protocol()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
kotlinx.coroutines.CancelledContinuation: int _resumed
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheListUninterruptibly()
okhttp3.internal.ws.RealWebSocket: long pingIntervalMillis
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.internal.ParcelableSparseArray: android.os.Parcelable$Creator CREATOR
ninh.luyen.dds.datas.cache.models.SearchCache: java.lang.String getQuery()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
okhttp3.OkHttpClient: int callTimeoutMillis
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.http2.Huffman$Node: int getSymbol()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type ERROR
okhttp3.EventListener: void satisfactionFailure(okhttp3.Call,okhttp3.Response)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.ResponseBody: okio.BufferedSource source()
okhttp3.TlsVersion$Companion: TlsVersion$Companion()
okhttp3.OkHttpClient: java.lang.Object clone()
okhttp3.internal.cache2.Relay: okhttp3.internal.cache2.Relay$Companion Companion
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: boolean closed
okhttp3.internal.platform.android.Android10SocketAdapter: boolean isSupported()
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: RealConnection$newWebSocketStreams$1(okhttp3.internal.connection.Exchange,okio.BufferedSource,okio.BufferedSink,boolean,okio.BufferedSource,okio.BufferedSink)
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
okhttp3.MultipartReader: boolean noMoreParts
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.Temp component4()
ninh.luyen.dds.datas.remotes.responses.Temp: double eve
okhttp3.Response: okhttp3.Request -deprecated_request()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request getRequest$okhttp()
okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
androidx.core.widget.NestedScrollView: int getScrollRange()
okhttp3.MultipartBody: byte[] DASHDASH
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
okhttp3.Cookie$Builder
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.internal.connection.RouteSelector this$0
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.util.List $headerBlock$inlined
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getDirtyFiles$okhttp()
okhttp3.internal.ws.WebSocketWriter: okio.Buffer messageBuffer
okhttp3.RequestBody: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: okio.Buffer $buffer$inlined
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase getRouteDatabase()
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.platform.AndroidPlatform: java.lang.Object getStackTraceForCloseable(java.lang.String)
okhttp3.Request: java.lang.Object tag(java.lang.Class)
okhttp3.internal.ws.WebSocketReader: WebSocketReader(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback,boolean,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
okhttp3.Dns$Companion: okhttp3.Dns$Companion $$INSTANCE
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.internal.connection.RealCall: java.lang.String toLoggableString()
okhttp3.internal.connection.ConnectInterceptor: okhttp3.internal.connection.ConnectInterceptor INSTANCE
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher
okhttp3.HttpUrl$Builder: void pop()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
okhttp3.OkHttpClient$Builder: boolean retryOnConnectionFailure
okhttp3.CertificatePinner$Companion: CertificatePinner$Companion()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_parse(java.lang.String)
com.google.gson.FieldNamingPolicy$6
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: MaterialCalendar$CalendarSelector(java.lang.String,int)
okhttp3.internal.connection.RealConnection: okhttp3.internal.http2.Http2Connection http2Connection
okhttp3.RequestBody
okhttp3.FormBody$Builder: java.nio.charset.Charset charset
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: OkHttpClient$Builder$addNetworkInterceptor$2(kotlin.jvm.functions.Function1)
okhttp3.CacheControl: boolean -deprecated_noStore()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okhttp3.internal.connection.Exchange $exchange
okhttp3.Handshake$Companion$get$1: java.util.List $peerCertificatesCopy
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: int component2()
okhttp3.internal.Util: int toNonNegativeInt(java.lang.String,int)
okhttp3.Route: okhttp3.Address address()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion
okhttp3.CacheControl: boolean mustRevalidate()
okhttp3.internal.connection.RealConnection: long IDLE_CONNECTION_HEALTHY_NS
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout getTimeout()
okhttp3.CacheControl: boolean isPrivate()
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_REQUEST_BODY
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
com.google.gson.stream.JsonReader: JsonReader(java.io.Reader)
okhttp3.Headers: java.util.Set names()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date expires
okhttp3.internal.platform.Platform$Companion: Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
okhttp3.Headers$Companion: void checkValue(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void readContinuationHeader()
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector
kotlin.io.NoSuchFileException
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString EMPTY_DEFLATE_BLOCK
okhttp3.CipherSuite: okhttp3.CipherSuite$Companion Companion
okhttp3.Handshake: okhttp3.Handshake$Companion Companion
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)
androidx.fragment.app.DialogFragment
okhttp3.internal.concurrent.TaskQueue: void cancelAll()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.android.material.datepicker.Month
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReadBuffer()
okhttp3.logging.LoggingEventListener: void callStart(okhttp3.Call)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: long runOnce()
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date lastModified
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy DROP
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
okhttp3.internal.connection.RealConnection: void setNoNewExchanges(boolean)
okhttp3.Cache$CacheResponseBody$1: okhttp3.Cache$CacheResponseBody this$0
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType STRING_TYPE
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
okhttp3.internal.connection.RealConnection: okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection)
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: long runOnce()
com.google.gson.stream.JsonScope: int DANGLING_NAME
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString,int)
okhttp3.internal.ws.MessageDeflater: boolean noContextTakeover
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: boolean matchesSocketFactory(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
okhttp3.Cache: okhttp3.internal.cache.CacheRequest put$okhttp(okhttp3.Response)
okhttp3.internal.platform.android.SocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
ninh.luyen.dds.datas.remotes.responses.Detail: int humidity
okhttp3.Cache: java.io.File directory()
com.google.gson.stream.JsonScope
okhttp3.Protocol: okhttp3.Protocol QUIC
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.http.RequestLine
okhttp3.ResponseBody: java.io.Reader charStream()
okhttp3.logging.LoggingEventListener: void canceled(okhttp3.Call)
okhttp3.internal.cache.DiskLruCache: java.lang.String REMOVE
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
okhttp3.internal.ws.RealWebSocket$Close
okhttp3.Address: java.util.List -deprecated_connectionSpecs()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part$Companion Companion
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem$Companion Companion
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager x509TrustManagerOrNull
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.Headers trailers()
okhttp3.internal.cache.DiskLruCache: long size()
okhttp3.OkHttpClient: okhttp3.Cache -deprecated_cache()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
androidx.appcompat.widget.SearchView
okhttp3.ConnectionSpec$Builder: void setTls$okhttp(boolean)
ninh.luyen.dds.datas.remotes.responses.Temp: ninh.luyen.dds.datas.remotes.responses.Temp copy$default(ninh.luyen.dds.datas.remotes.responses.Temp,double,double,double,double,double,double,int,java.lang.Object)
okhttp3.internal.platform.ConscryptPlatform$Companion: okhttp3.internal.platform.ConscryptPlatform buildIfSupported()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: Http1ExchangeCodec$FixedLengthSource(okhttp3.internal.http1.Http1ExchangeCodec,long)
okhttp3.EventListener: void responseFailed(okhttp3.Call,java.io.IOException)
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
okhttp3.internal.http2.Settings: int INITIAL_WINDOW_SIZE
okhttp3.internal.http2.Http2ExchangeCodec$Companion: okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol)
okhttp3.MultipartBody: okhttp3.MediaType contentType()
okhttp3.HttpUrl: char[] HEX_DIGITS
okhttp3.logging.LoggingEventListener: void requestFailed(okhttp3.Call,java.io.IOException)
okhttp3.internal.connection.RealConnection$connectTls$2
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
com.google.android.material.textfield.TextInputLayout$SavedState
okhttp3.MediaType$Companion
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Handshake $unverifiedHandshake
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
okhttp3.internal.http2.Hpack$Reader: boolean isStaticHeader(int)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: Http2Connection$writeWindowUpdateLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long)
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode: androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode[] $VALUES
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
okhttp3.Response$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
okhttp3.internal.ws.MessageInflater: void inflate(okio.Buffer)
com.google.gson.JsonParseException: long serialVersionUID
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy ALLOW
okhttp3.internal.connection.RouteDatabase
okhttp3.internal.http2.Http2Stream$FramingSink: boolean closed
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings$Companion Companion
okhttp3.internal.ws.MessageDeflaterKt: okio.ByteString access$getEMPTY_DEFLATE_BLOCK$p()
okhttp3.Request$Builder: void setUrl$okhttp(okhttp3.HttpUrl)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout$Behavior
okhttp3.internal.http1.HeadersReader: long headerLimit
okhttp3.internal.proxy.NullProxySelector
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
okhttp3.Request: okhttp3.HttpUrl -deprecated_url()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
com.google.gson.FieldNamingPolicy$1
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.logging.Utf8Kt
okhttp3.internal.http.HttpHeaders: void readChallengeHeader(okio.Buffer,java.util.List)
okhttp3.HttpUrl: int querySize()
okhttp3.internal.connection.RealConnection: void setIdleAtNs$okhttp(long)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
okhttp3.internal.platform.Platform$Companion: boolean isOpenJSSEPreferred()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(double)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
okhttp3.HttpUrl: java.lang.String -deprecated_host()
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: void set(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: void trimToSize()
okhttp3.logging.LoggingEventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
okhttp3.internal.http.DatesKt
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: CacheInterceptor$cacheWritingResponse$cacheWritingSource$1(okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
okhttp3.internal.cache.DiskLruCache: void rebuildJournal$okhttp()
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
okhttp3.internal.cache.DiskLruCache$Editor: DiskLruCache$Editor(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry)
okhttp3.Response: long receivedResponseAtMillis
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnLayoutChangeListener(com.google.android.material.snackbar.BaseTransientBottomBar$OnLayoutChangeListener)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot$okhttp()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: Jdk8WithJettyBootPlatform$AlpnProvider(java.util.List)
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: int hashCode()
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS
androidx.recyclerview.widget.RecyclerView: int getScrollState()
okhttp3.CertificatePinner$Companion: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
com.google.android.material.datepicker.CalendarConstraints
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
okhttp3.internal.Util: boolean canParseAsIpAddress(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.City: int getTimezone()
kotlin.io.AccessDeniedException
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.WebSocketWriter: void writePing(okio.ByteString)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findPlatform()
ninh.luyen.dds.datas.remotes.responses.City: boolean equals(java.lang.Object)
okhttp3.internal.ws.RealWebSocket: boolean access$isValid(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
ninh.luyen.dds.datas.remotes.responses.Temp: Temp(double,double,double,double,double,double)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Http2: java.lang.String[] BINARY
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
com.google.gson.stream.JsonWriter: java.io.Writer out
okhttp3.internal.http2.Http2: int TYPE_CONTINUATION
okhttp3.internal.ws.WebSocketWriter: boolean perMessageDeflate
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall clone()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType
okhttp3.CacheControl: int maxStaleSeconds()
okhttp3.OkHttpClient$Builder: void setProtocols$okhttp(java.util.List)
okhttp3.RequestBody: boolean isOneShot()
okhttp3.Response$Builder: void setMessage$okhttp(java.lang.String)
okhttp3.internal.ws.RealWebSocket: boolean enqueuedClose
okhttp3.internal.http.BridgeInterceptor
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType NONE
okhttp3.Dns$Companion$DnsSystem: java.util.List lookup(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions extensions
okhttp3.Headers$Builder: java.util.List namesAndValues
okhttp3.RequestBody$Companion$asRequestBody$1
okhttp3.internal.ws.WebSocketReader: boolean isClient
okhttp3.internal.http2.Hpack$Reader
okhttp3.internal.http2.Settings: int getHeaderTableSize()
okhttp3.logging.LoggingEventListener: void responseBodyEnd(okhttp3.Call,long)
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String component4()
okhttp3.internal.platform.android.Android10SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.connection.RealCall: boolean isExecuted()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode PUBLICATION
ninh.luyen.dds.datas.cache.models.SearchCache: java.lang.String query
androidx.coordinatorlayout.widget.CoordinatorLayout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.OkHttpClient client
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger access$getLogger$cp()
com.google.gson.stream.JsonReader: int NUMBER_CHAR_DECIMAL
okhttp3.internal.Util$threadFactory$1
okhttp3.internal.cache2.Relay: boolean isClosed()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FRAME_SIZE_ERROR
okhttp3.internal.http2.Http2Connection: boolean isHealthy(long)
kotlinx.coroutines.channels.ClosedSendChannelException
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] $VALUES
okhttp3.ConnectionSpec$Builder: void setCipherSuites$okhttp(java.lang.String[])
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion: HttpLoggingInterceptor$Logger$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLeft()
okhttp3.internal.http2.Http2Connection: boolean client
okhttp3.internal.connection.RealCall$AsyncCall: void run()
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
okhttp3.Callback
okhttp3.internal.connection.RouteSelector$resetNextProxy$1
com.google.gson.stream.JsonWriter: void replaceTop(int)
okhttp3.EventListener: void requestFailed(okhttp3.Call,java.io.IOException)
okhttp3.internal.ws.RealWebSocket: void awaitTermination(long,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
okhttp3.internal.tls.OkHostnameVerifier: int ALT_IPA_NAME
okhttp3.Cache$Companion: boolean hasVaryAll(okhttp3.Response)
okhttp3.Cache: long maxSize()
org.koin.core.definition.Kind: org.koin.core.definition.Kind Factory
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String,java.lang.Throwable)
com.google.android.material.timepicker.TimePickerView
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: void onReset(int,okhttp3.internal.http2.ErrorCode)
okhttp3.internal.connection.Exchange: java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1
okhttp3.Response: okhttp3.CacheControl -deprecated_cacheControl()
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion()
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(int,boolean,okio.Buffer)
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
okhttp3.internal.http2.Huffman: okhttp3.internal.http2.Huffman INSTANCE
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
okhttp3.HttpUrl: java.lang.String username
okhttp3.internal.http.ExchangeCodec$Companion: ExchangeCodec$Companion()
kotlin.TypeCastException: TypeCastException()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.cache.DiskLruCache: boolean getClosed$okhttp()
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
okhttp3.WebSocket$Factory
okhttp3.ResponseBody: byte[] bytes()
androidx.core.app.RemoteActionCompatParcelizer
com.google.android.material.internal.BaselineLayout
okhttp3.internal.connection.RouteSelector$Companion: java.lang.String getSocketHost(java.net.InetSocketAddress)
okhttp3.internal.concurrent.TaskQueue$schedule$2
okhttp3.internal.cache.DiskLruCache: boolean hasJournalErrors
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_8_SHA256
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()
okhttp3.internal.http2.Http2Connection$Builder: void setSink$okhttp(okio.BufferedSink)
okhttp3.internal.connection.RealCall: okhttp3.EventListener eventListener
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type BOTTOM
okhttp3.Response: long -deprecated_sentRequestAtMillis()
okhttp3.internal.concurrent.TaskRunner$runnable$1
okhttp3.internal.cache2.FileOperator: void write(long,okio.Buffer,long)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
okhttp3.internal.http2.Hpack$Reader: int readInt(int,int)
ninh.luyen.dds.ui.homes.HomeFragment: HomeFragment()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
okhttp3.Cache$Entry: java.lang.String message
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String)
com.google.gson.stream.JsonWriter: void setSerializeNulls(boolean)
okhttp3.internal.http2.Http2Connection: void setNextStreamId$okhttp(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket$default(okhttp3.internal.http2.Http2Connection$Builder,java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink,int,java.lang.Object)
okhttp3.ConnectionSpec: ConnectionSpec(boolean,boolean,java.lang.String[],java.lang.String[])
okhttp3.MultipartBody$Part: okhttp3.RequestBody body
okhttp3.HttpUrl: java.lang.String password
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource getSource$okhttp()
okhttp3.internal.http2.Hpack$Writer: okio.Buffer out
ninh.luyen.dds.datas.remotes.responses.City
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findJvmPlatform()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
okhttp3.ResponseBody: java.io.Reader reader
okhttp3.internal.cache.DiskLruCache: void checkNotClosed()
okhttp3.internal.cache2.Relay$RelaySource
okhttp3.internal.http.HttpMethod
okhttp3.internal.concurrent.TaskQueue: void schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object)
androidx.appcompat.app.AlertController$RecycleListView
okhttp3.Request: okhttp3.Headers headers
okhttp3.CacheControl: java.lang.String toString()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
okhttp3.Cookie$Companion: long parseExpires(java.lang.String,int,int)
okhttp3.internal.http2.Header: int hashCode()
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
okhttp3.HttpUrl$Builder: java.lang.String getScheme$okhttp()
org.koin.core.logger.Level: Level(java.lang.String,int)
okhttp3.Response$Builder: okhttp3.Response build()
okhttp3.internal.concurrent.TaskRunner: java.lang.Runnable runnable
okhttp3.internal.http2.Http2Stream$FramingSink: void setTrailers(okhttp3.Headers)
okhttp3.Headers
okhttp3.Route: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap getLruEntries$okhttp()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)
okhttp3.internal.cache.DiskLruCache$Entry: int getLockingSourceCount$okhttp()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion()
okhttp3.RequestBody: long contentLength()
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: Http2Connection$pushHeadersLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean)
com.google.gson.stream.JsonReader: int PEEKED_NUMBER
okhttp3.internal.ws.RealWebSocket: long MAX_QUEUE_SIZE
okhttp3.HttpUrl: int -deprecated_pathSize()
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion(int,int,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
okhttp3.Cache: int writeAbortCount
okhttp3.OkHttpClient$Builder: void setConnectionSpecs$okhttp(java.util.List)
okhttp3.CertificatePinner$Builder
com.google.android.material.chip.Chip: void setChipIconResource(int)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean getClosed()
ninh.luyen.dds.datas.remotes.responses.City: ninh.luyen.dds.datas.remotes.responses.Coordinator component1()
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns)
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
okhttp3.internal.connection.RealConnection$connectTls$1: RealConnection$connectTls$1(okhttp3.CertificatePinner,okhttp3.Handshake,okhttp3.Address)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
okhttp3.internal.Util: java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object)
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.Cookie$Companion: long parseMaxAge(java.lang.String)
okhttp3.internal.platform.android.AndroidSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
okhttp3.MultipartBody: okio.ByteString boundaryByteString
com.google.gson.stream.JsonReader: void setLenient(boolean)
ninh.luyen.dds.datas.remotes.responses.Detail: int getDt()
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
okhttp3.internal.cache.DiskLruCache: void setClosed$okhttp(boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.fragment.app.FragmentActivity: FragmentActivity()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: long runOnce()
androidx.recyclerview.widget.RecyclerView
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver pushObserver
ninh.luyen.dds.datas.remotes.responses.FeelLike: double getNight()
ninh.luyen.dds.datas.remotes.responses.FeelLike: double component3()
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getPadding()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: PublicSuffixDatabase$findMatchingRule$1(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
okhttp3.Request: okhttp3.RequestBody -deprecated_body()
okhttp3.internal.http2.Http2ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] $VALUES
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
okhttp3.internal.connection.RealConnection: void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener)
androidx.lifecycle.LifecycleCoroutineScopeImpl
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.internal.connection.RealConnectionPool: int connectionCount()
okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
okhttp3.RequestBody$Companion$toRequestBody$2: int $offset
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: Http2Connection$pushResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
okhttp3.internal.http1.Http1ExchangeCodec: void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.Response: okhttp3.Protocol protocol
kotlin.NoWhenBranchMatchedException
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.FeelLike component5()
okhttp3.Headers: java.util.Iterator iterator()
okhttp3.internal.cache.DiskLruCache$Entry: boolean getReadable$okhttp()
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isEndToEnd(java.lang.String)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
okhttp3.internal.platform.ConscryptPlatform
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy[] $VALUES
okhttp3.internal.ws.WebSocketExtensions$Companion: WebSocketExtensions$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void access$setPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase,byte[])
okhttp3.FormBody$Builder: FormBody$Builder()
okhttp3.TlsVersion: TlsVersion(java.lang.String,int,java.lang.String)
okhttp3.Response: okhttp3.internal.connection.Exchange exchange
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode: ConcatAdapter$Config$StableIdMode(java.lang.String,int)
com.google.gson.FieldNamingPolicy$4: java.lang.String translateName(java.lang.reflect.Field)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type TOP
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
org.koin.core.error.NoScopeDefFoundException
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: boolean isSupported()
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion: okhttp3.logging.HttpLoggingInterceptor$Logger$Companion $$INSTANCE
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.internal.http.HttpHeaders: okio.ByteString QUOTED_STRING_DELIMITERS
okhttp3.internal.connection.ExchangeFinder: okhttp3.EventListener eventListener
okhttp3.internal.http2.Hpack: java.util.Map NAME_TO_FIRST_INDEX
okhttp3.internal.http2.Http2Connection: void flush()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
okhttp3.MultipartBody: java.lang.String -deprecated_boundary()
okhttp3.internal.platform.OpenJSSEPlatform$Companion
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.ResponseBody$Companion$asResponseBody$1
okhttp3.Cache$urls$1: boolean canRemove
androidx.core.os.OperationCanceledException: OperationCanceledException()
okhttp3.internal.connection.ConnectionSpecSelector
okhttp3.Headers$Companion: java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String)
okhttp3.internal.ws.RealWebSocket: java.lang.String name
okhttp3.internal.concurrent.TaskQueue$schedule$2: kotlin.jvm.functions.Function0 $block
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_IDLE
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: long serialVersionUID
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
kotlin.jvm.internal.CallableReference: java.lang.String name
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int left
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.JobCancellationException
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cache$CacheResponseBody$1: okio.Source $source
ninh.luyen.dds.datas.remotes.responses.City: java.lang.String getName()
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase routeDatabase
okhttp3.internal.connection.Exchange: void noNewExchangesOnConnection()
okhttp3.MediaType: java.lang.String mediaType
okhttp3.internal.connection.Exchange$RequestBodySink: Exchange$RequestBodySink(okhttp3.internal.connection.Exchange,okio.Sink,long)
okhttp3.Response: java.util.List headers(java.lang.String)
okhttp3.internal.http.DatesKt: long MAX_DATE
okhttp3.Response: java.lang.String message()
okhttp3.FormBody: java.lang.String encodedName(int)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
kotlin.text.Regex: java.lang.Object writeReplace()
okhttp3.OkHttpClient$Builder: javax.net.SocketFactory getSocketFactory$okhttp()
okhttp3.Headers$Companion: void access$checkName(okhttp3.Headers$Companion,java.lang.String)
okhttp3.internal.Util: java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)
okhttp3.Cache$Entry: void writeCertList(okio.BufferedSink,java.util.List)
androidx.recyclerview.widget.LinearLayoutManager$SavedState
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: float getChipIconSize()
okhttp3.internal.http2.Http2Stream$FramingSource: void close()
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentTrimFailed$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Headers: java.util.Map toMultimap()
okhttp3.internal.platform.Android10Platform: boolean isSupported
com.google.android.material.chip.Chip: float getIconStartPadding()
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
okhttp3.internal.http2.Http2Connection: void sendDegradedPingLater$okhttp()
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
okhttp3.internal.http2.Settings: void merge(okhttp3.internal.http2.Settings)
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion()
com.google.android.material.datepicker.MaterialCalendar
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
okhttp3.internal.ws.WebSocketWriter: okio.Buffer sinkBuffer
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method findByIssuerAndSignatureMethod
okhttp3.CacheControl: boolean noCache()
okhttp3.internal.http2.Http2Connection: int openStreamCount()
okhttp3.internal.http1.Http1ExchangeCodec: int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector
okio.AsyncTimeout: boolean inQueue
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV3
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.io.File,okhttp3.MediaType,int,java.lang.Object)
okhttp3.MultipartReader$PartSource: long read(okio.Buffer,long)
com.google.android.material.datepicker.MaterialDatePicker
ninh.luyen.dds.commons.BaseFragment
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $newStream$inlined
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
okhttp3.internal.platform.android.CloseGuard$Companion: okhttp3.internal.platform.android.CloseGuard get()
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
okhttp3.Request$Builder: okhttp3.HttpUrl getUrl$okhttp()
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
ninh.luyen.dds.datas.remotes.responses.BaseModel: BaseModel()
okhttp3.Handshake: okhttp3.CipherSuite -deprecated_cipherSuite()
org.koin.core.error.InstanceCreationException
ninh.luyen.dds.datas.remotes.responses.FeelLike: double getDay()
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: void invoke(java.io.IOException)
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.ConscryptPlatform$Companion Companion
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http.RetryAndFollowUpInterceptor: int MAX_FOLLOW_UPS
okio.Timeout: long timeoutNanos
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method removeMethod
okhttp3.internal.http2.Huffman$Node: Huffman$Node()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM
ninh.luyen.dds.datas.remotes.responses.Detail: int getPressure()
okhttp3.internal.cache.DiskLruCache: boolean access$getCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
okhttp3.internal.concurrent.TaskRunner$Backend: void execute(java.lang.Runnable)
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level BASIC
okhttp3.internal.http2.Http2: int TYPE_HEADERS
com.google.gson.LongSerializationPolicy$2
okhttp3.internal.http2.Http2Connection: long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.http2.Hpack$Writer: void writeByteString(okio.ByteString)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
okhttp3.internal.ws.WebSocketProtocol: void validateCloseCode(int)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState
okhttp3.Protocol: java.lang.String toString()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1
okhttp3.internal.http2.Http2Reader: boolean client
okhttp3.internal.platform.ConscryptPlatform$Companion: ConscryptPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.WebSocketProtocol: java.lang.String closeCodeExceptionMessage(int)
okhttp3.Protocol
okhttp3.internal.ws.WebSocketReader: void close()
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
okhttp3.internal.Util: int indexOfNonWhitespace(java.lang.String,int)
okhttp3.CacheControl: boolean noTransform
com.google.gson.JsonSyntaxException
okhttp3.Cache$urls$1: java.lang.Object next()
okhttp3.Cache$Entry: okhttp3.Cache$Entry$Companion Companion
ninh.luyen.dds.datas.remotes.responses.Detail: int sunset
okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
okhttp3.internal.http2.Http2Stream: long getWriteBytesMaximum()
okhttp3.internal.connection.RealCall: okio.Timeout timeout()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Stream,okhttp3.internal.http2.Http2Connection$ReaderRunnable,okhttp3.internal.http2.Http2Stream,int,java.util.List,boolean)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
okhttp3.internal.http2.Http2: int TYPE_RST_STREAM
okhttp3.internal.ws.WebSocketReader: int opcode
okhttp3.internal.Util: void assertThreadHoldsLock(java.lang.Object)
com.google.gson.FieldNamingPolicy$6: java.lang.String translateName(java.lang.reflect.Field)
okhttp3.Response: okhttp3.Response priorResponse()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
okhttp3.Response: long sentRequestAtMillis
ninh.luyen.dds.datas.remotes.responses.Temp: double day
okio.AsyncTimeout: okio.AsyncTimeout next
okhttp3.OkHttpClient: int -deprecated_pingIntervalMillis()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy IDENTITY
okhttp3.Handshake: java.security.Principal -deprecated_peerPrincipal()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp()
okhttp3.OkHttpClient: java.util.List protocols
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.google.gson.stream.JsonReader: int[] stack
okhttp3.Response: okhttp3.Headers trailers()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_X
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
okhttp3.internal.platform.android.CloseGuard: java.lang.Object createAndOpen(java.lang.String)
okhttp3.Dispatcher: void finished(java.util.Deque,java.lang.Object)
okhttp3.internal.platform.BouncyCastlePlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.connection.RealCall: java.net.Socket releaseConnectionNoEvents$okhttp()
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory
okhttp3.TlsVersion: java.lang.String javaName
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSource source
okhttp3.HttpUrl: int port()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Hpack$Reader: int headerTableSizeSetting
com.google.gson.stream.JsonReader: int lineNumber
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_DIGIT
okhttp3.internal.http2.Http2Connection: long getReadBytesTotal()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.CacheControl: boolean isPublic()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void readChunkSize()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType CENTER
okhttp3.RequestBody$Companion$toRequestBody$2: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
io.reactivex.exceptions.CompositeException$CompositeExceptionCausalChain: long serialVersionUID
okhttp3.Authenticator$Companion$AuthenticatorNone: Authenticator$Companion$AuthenticatorNone()
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory getEventListenerFactory$okhttp()
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_GCM_SHA256
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: void close()
ninh.luyen.dds.datas.remotes.responses.Coordinator: double component2()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.internal.platform.OpenJSSEPlatform: okhttp3.internal.platform.OpenJSSEPlatform$Companion Companion
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
com.google.gson.stream.JsonWriter: void newline()
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
okhttp3.internal.platform.ConscryptPlatform: boolean isSupported
okhttp3.internal.http2.Hpack$Writer: boolean useCompression
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
okhttp3.internal.http2.Http2Reader: void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion
okhttp3.internal.ws.WebSocketProtocol: java.lang.String ACCEPT_MAGIC
okhttp3.internal.cache2.Relay: void setUpstream(okio.Source)
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger: HttpLoggingInterceptor$Logger$Companion$DefaultLogger()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
okhttp3.Cookie
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2ExchangeCodec$Companion Companion
io.reactivex.BackpressureStrategy
com.google.android.material.chip.Chip: void setMinLines(int)
com.google.android.material.slider.BaseSlider$SliderState
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.HttpUrl$Builder: java.util.List getEncodedPathSegments$okhttp()
ninh.luyen.dds.datas.remotes.responses.Coordinator: Coordinator(double,double)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
okhttp3.logging.HttpLoggingInterceptor: boolean bodyHasUnknownEncoding(okhttp3.Headers)
okhttp3.internal.http2.Http2Connection: long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection)
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
okhttp3.internal.concurrent.TaskQueue: void shutdown()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
okhttp3.Address: int hashCode()
okhttp3.internal.connection.RouteSelector: okhttp3.Call call
okhttp3.WebSocket: boolean close(int,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar$Behavior
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: boolean inputExhausted
okhttp3.Cookie: java.lang.String path
okhttp3.Cache$Companion: Cache$Companion()
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool connectionPool
okhttp3.Cache: int hitCount
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.ForwardingTimeout timeout
okhttp3.MultipartReader$Part: void close()
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
okhttp3.internal.ws.WebSocketReader: void readMessage()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
okhttp3.internal.connection.Exchange$ResponseBodySource: java.io.IOException complete(java.io.IOException)
okhttp3.internal.http2.Http2Writer: void goAway(int,okhttp3.internal.http2.ErrorCode,byte[])
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.time.Instant)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $VALUES
okhttp3.TlsVersion$Companion: okhttp3.TlsVersion forJavaName(java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion()
okhttp3.Response$Builder: void checkPriorResponse(okhttp3.Response)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void readTheList()
okio.ForwardingSink: okio.Sink -deprecated_delegate()
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion()
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_SHORT_MAX
okhttp3.internal.concurrent.TaskLoggerKt: void taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: int $streamId$inlined
okhttp3.CacheControl$Builder: boolean onlyIfCached
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.android.material.theme.MaterialComponentsViewInflater
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType START
okhttp3.Cookie: okhttp3.Cookie$Companion Companion
okhttp3.internal.http2.Settings
com.google.android.material.button.MaterialButton: void setElevation(float)
okhttp3.Challenge: java.nio.charset.Charset charset()
okhttp3.internal.ws.WebSocketReader: boolean isControlFrame
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.TaskRunner taskRunner
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 onException
com.google.android.material.timepicker.ClockFaceView
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener getListener$okhttp()
okhttp3.MultipartReader: okio.BufferedSource source
com.google.gson.stream.JsonReader: int limit
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: long runOnce()
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)
androidx.core.app.JobIntentService
okhttp3.ConnectionSpec$Builder: void setSupportsTlsExtensions$okhttp(boolean)
okhttp3.Dispatcher: java.util.ArrayDeque runningSyncCalls
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
okhttp3.internal.connection.RealConnection: void noNewExchanges$okhttp()
okhttp3.internal.concurrent.TaskQueue: void setCancelActiveTask$okhttp(boolean)
okhttp3.internal.connection.RealConnection: boolean noNewExchanges
ninh.luyen.dds.commons.BaseViewModel
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode SYNCHRONIZED
okhttp3.internal.cache2.Relay: okio.Buffer getUpstreamBuffer()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
okhttp3.internal.platform.Android10Platform: java.util.List socketAdapters
okhttp3.internal.platform.android.AndroidLog: void enable()
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers getTrailers()
okhttp3.internal.cache.DiskLruCache: java.io.File journalFile
com.google.android.material.internal.ParcelableSparseBooleanArray: android.os.Parcelable$Creator CREATOR
ninh.luyen.dds.datas.remotes.responses.City: java.lang.String component4()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketWriter,okio.ByteString,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef)
com.google.gson.stream.JsonReader: boolean lenient
okhttp3.internal.Util: java.util.List filterList(java.lang.Iterable,kotlin.jvm.functions.Function1)
com.google.android.material.datepicker.SingleDateSelector: android.os.Parcelable$Creator CREATOR
com.google.gson.stream.JsonReader: java.lang.String[] pathNames
okhttp3.Cookie: java.lang.String -deprecated_domain()
okhttp3.internal.platform.android.Android10SocketAdapter
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.util.Iterator delegate
okhttp3.internal.concurrent.Task: Task(java.lang.String,boolean)
androidx.core.graphics.drawable.IconCompat: IconCompat()
okhttp3.MultipartReader: java.lang.String boundary()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
okhttp3.internal.http2.Hpack$Reader: void insertIntoDynamicTable(int,okhttp3.internal.http2.Header)
okhttp3.Route: okhttp3.Address address
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
okio.Timeout: long timeoutNanos()
okhttp3.Request: okhttp3.HttpUrl url()
okhttp3.internal.Util: long and(int,long)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void windowUpdate(int,long)
okhttp3.internal.connection.ConnectionSpecSelector: int nextModeIndex
okhttp3.internal.ws.WebSocketReader: void readMessageFrame()
com.google.gson.stream.JsonWriter: boolean isLenient()
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: java.lang.String toString()
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long read(okio.Buffer,long)
okhttp3.CertificatePinner$Pin: boolean matchesHostname(java.lang.String)
okhttp3.internal.http2.Settings: int ENABLE_PUSH
okhttp3.OkHttpClient$Builder: void setCallTimeout$okhttp(int)
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address getAddress$okhttp()
org.koin.core.definition.Kind: org.koin.core.definition.Kind Single
okhttp3.internal.ws.MessageDeflater: boolean endsWith(okio.Buffer,okio.ByteString)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.Util: boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator)
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder reencodeForUri$okhttp()
ninh.luyen.dds.datas.remotes.responses.FeelLike: double night
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
okhttp3.HttpUrl$Builder: void setEncodedQueryNamesAndValues$okhttp(java.util.List)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
kotlinx.coroutines.android.AndroidExceptionPreHandler: kotlin.Lazy preHandler$delegate
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
okhttp3.internal.ws.RealWebSocket$connect$1: RealWebSocket$connect$1(okhttp3.internal.ws.RealWebSocket,okhttp3.Request)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long runOnce()
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnectionPool connectionPool
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache getCache$okhttp()
okhttp3.HttpUrl$Builder: java.lang.String getEncodedFragment$okhttp()
com.google.gson.stream.JsonWriter: boolean serializeNulls
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot snapshot
okhttp3.Cookie: boolean -deprecated_httpOnly()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
okhttp3.internal.platform.android.CloseGuard
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
okhttp3.Address: okhttp3.HttpUrl url()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
okhttp3.Challenge: int hashCode()
org.koin.core.logger.Level: org.koin.core.logger.Level[] values()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
ninh.luyen.dds.datas.remotes.responses.Temp: double max
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty0$Setter getSetter()
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
okhttp3.Cache$Entry$Companion
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager
okhttp3.internal.http2.Http2Reader: Http2Reader(okio.BufferedSource,boolean)
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
okhttp3.OkHttpClient$Builder$addInterceptor$2: OkHttpClient$Builder$addInterceptor$2(kotlin.jvm.functions.Function1)
okhttp3.internal.concurrent.TaskLoggerKt
okhttp3.MultipartReader$Part: okio.BufferedSource body
okhttp3.logging.HttpLoggingInterceptor: void level(okhttp3.logging.HttpLoggingInterceptor$Level)
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
okhttp3.internal.connection.Exchange$RequestBodySink: long contentLength
okhttp3.internal.http2.Http2Stream: okhttp3.Headers trailers()
okhttp3.Address: java.lang.String toString()
okhttp3.CertificatePinner$check$1: java.lang.Object invoke()
okhttp3.OkHttpClient$Builder: okhttp3.Cache cache
okhttp3.internal.http2.Http2ExchangeCodec: boolean canceled
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
okhttp3.internal.Util: java.lang.String toHexString(int)
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int)
okhttp3.internal.http.ExchangeCodec: void finishRequest()
okhttp3.Cookie: java.lang.String value()
okhttp3.internal.connection.RealCall: java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException)
okhttp3.internal.http2.Http2Stream: long readBytesAcknowledged
androidx.constraintlayout.solver.SolverVariable$Type: SolverVariable$Type(java.lang.String,int)
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
okhttp3.internal.http1.Http1ExchangeCodec: Http1ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink)
androidx.lifecycle.LiveData$LifecycleBoundObserver
okhttp3.internal.cache.FaultHidingSink: FaultHidingSink(okio.Sink,kotlin.jvm.functions.Function1)
org.koin.androidx.scope.ScopeActivity
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1
okhttp3.EventListener$Companion: EventListener$Companion()
okhttp3.OkHttpClient$Builder
ninh.luyen.dds.datas.remotes.responses.HttpErrorCode: HttpErrorCode()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem getFileSystem$okhttp()
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
com.google.gson.FieldNamingPolicy$4: FieldNamingPolicy$4(java.lang.String,int)
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
ninh.luyen.dds.datas.remotes.responses.Weather: int component3()
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.FeelLike feelLike
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
kotlin.jvm.internal.CallableReference: java.lang.Class owner
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.internal.cache.DiskLruCache$snapshots$1: java.lang.Object next()
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
okhttp3.RequestBody$Companion$toRequestBody$2: void writeTo(okio.BufferedSink)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Http2Connection: void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException)
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion()
okhttp3.HttpUrl$Companion: HttpUrl$Companion()
com.google.gson.stream.JsonReader: void beginArray()
okhttp3.internal.platform.android.AndroidLogHandler: void close()
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode: androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode NO_STABLE_IDS
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
okhttp3.Cookie$Companion: Cookie$Companion()
okhttp3.MultipartBody$Builder: okio.ByteString boundary
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode$okhttp()
okhttp3.Dispatcher: Dispatcher()
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ViewStubCompat
okhttp3.Authenticator
okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)
okhttp3.internal.ws.MessageInflater: MessageInflater(boolean)
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
okhttp3.internal.platform.android.Android10SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.ByteString,okhttp3.MediaType)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
okhttp3.Request$Builder: java.lang.String method
ninh.luyen.dds.datas.remotes.responses.Temp: double component3()
okhttp3.CacheControl: CacheControl(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String)
okhttp3.internal.http2.Http2: int FLAG_END_HEADERS
ninh.luyen.dds.datas.remotes.api.WeatherService
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: java.util.List connectionSpecs
okhttp3.Request: okhttp3.CacheControl -deprecated_cacheControl()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1
okhttp3.internal.connection.Exchange$RequestBodySink: boolean completed
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.MessageInflater: void close()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: ConscryptPlatform$DisabledHostnameVerifier()
ninh.luyen.dds.datas.remotes.responses.FeelLike: double getMorn()
okhttp3.internal.Util: boolean isHealthy(java.net.Socket,okio.BufferedSource)
okhttp3.internal.Util: java.util.List toHeaderList(okhttp3.Headers)
okhttp3.OkHttpClient$Builder: void setSocketFactory$okhttp(javax.net.SocketFactory)
okhttp3.Cookie: boolean persistent
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class serverProviderClass
okhttp3.internal.connection.RealConnectionPool: long keepAliveDurationNs
okhttp3.Cache$Entry: long sentRequestMillis
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Dns defaultDns
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
okhttp3.OkHttpClient$Builder: okhttp3.Dns getDns$okhttp()
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers trailers
okhttp3.internal.http2.Http2Connection$ReaderRunnable: Http2Connection$ReaderRunnable(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader)
okhttp3.CacheControl$Companion: CacheControl$Companion()
okhttp3.Request$Builder: Request$Builder(okhttp3.Request)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
okhttp3.Dns$Companion$DnsSystem
okhttp3.internal.http2.Http2: int FLAG_COMPRESSED
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_Y
okhttp3.internal.http2.Hpack$Writer: int evictToRecoverBytes(int)
okhttp3.internal.cache2.Relay: okio.Buffer getBuffer()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
ninh.luyen.dds.datas.remotes.responses.Coordinator: boolean equals(java.lang.Object)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
okhttp3.internal.connection.RealCall$CallReference: RealCall$CallReference(okhttp3.internal.connection.RealCall,java.lang.Object)
okhttp3.internal.ws.RealWebSocket$Close: RealWebSocket$Close(int,okio.ByteString,long)
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion()
okhttp3.internal.platform.BouncyCastlePlatform: okhttp3.internal.platform.BouncyCastlePlatform$Companion Companion
okhttp3.internal.http2.Http2Reader$Handler: void pushPromise(int,int,java.util.List)
okhttp3.MultipartReader: MultipartReader(okio.BufferedSource,java.lang.String)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: java.lang.String $name
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
okhttp3.internal.platform.AndroidPlatform: okhttp3.internal.platform.android.CloseGuard closeGuard
androidx.core.app.ComponentActivity
okhttp3.Response: okhttp3.Response cacheResponse
okhttp3.CacheControl$Companion: CacheControl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2ExchangeCodec: void finishRequest()
okhttp3.internal.ws.WebSocketExtensions$Companion: okhttp3.internal.ws.WebSocketExtensions parse(okhttp3.Headers)
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
okhttp3.internal.http.HttpMethod: HttpMethod()
okhttp3.internal.connection.RealCall
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
okhttp3.internal.platform.Android10Platform$Companion: Android10Platform$Companion()
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink sink
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool connectionPool
okhttp3.internal.connection.RealCall$timeout$1: void timedOut()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
okhttp3.internal.cache2.FileOperator: void read(long,okio.Buffer,long)
okhttp3.internal.ws.MessageInflater: boolean noContextTakeover
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.Class clientProviderClass
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer clientMaxWindowBits
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.android.material.chip.Chip: void setLines(int)
okhttp3.Response: boolean isRedirect()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean finished
okhttp3.Cache$CacheResponseBody$1: void close()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.OkHttpClient$Builder$addInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
okhttp3.internal.http2.Http2Reader: java.util.List readHeaderBlock(int,int,int,int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)
com.google.gson.FieldNamingPolicy: java.lang.String upperCaseFirstLetter(java.lang.String)
okhttp3.Challenge
okhttp3.internal.Util: int skipAll(okio.Buffer,byte)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
okhttp3.Cookie: boolean -deprecated_secure()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object invoke()
ninh.luyen.dds.commons.BaseActivity
okhttp3.Cookie$Builder: Cookie$Builder()
okhttp3.CertificatePinner$Builder: java.util.List getPins()
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: void close()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
okhttp3.internal.cache.DiskLruCache: void evictAll()
okhttp3.internal.concurrent.TaskQueue: okhttp3.internal.concurrent.Task activeTask
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
okhttp3.internal.cache.DiskLruCache: long ANY_SEQUENCE_NUMBER
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
okhttp3.internal.platform.Jdk9Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: boolean $cancelable
okhttp3.Response$Builder: okhttp3.Response getNetworkResponse$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: Http1ExchangeCodec$KnownLengthSink(okhttp3.internal.http1.Http1ExchangeCodec)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.google.android.material.appbar.MaterialToolbar
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite
okhttp3.RequestBody$Companion$toRequestBody$1: void writeTo(okio.BufferedSink)
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: kotlin.jvm.functions.Function1 $block
okhttp3.internal.platform.android.AndroidLogHandler: AndroidLogHandler()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
okhttp3.ConnectionSpec: java.util.List -deprecated_tlsVersions()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource
okhttp3.internal.cache.CacheStrategy$Factory: long nowMillis
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator
okhttp3.internal.http2.Http2Connection$Builder: void setSource$okhttp(okio.BufferedSource)
okhttp3.OkHttpClient$Builder: void setHostnameVerifier$okhttp(javax.net.ssl.HostnameVerifier)
okhttp3.internal.http2.Http2ExchangeCodec: void cancel()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
okhttp3.internal.connection.RealConnection: long idleAtNs
okhttp3.internal.platform.android.BouncyCastleSocketAdapter
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.ws.MessageDeflater
androidx.constraintlayout.widget.Barrier: void setMargin(int)
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.google.gson.FieldNamingPolicy$3: java.lang.String translateName(java.lang.reflect.Field)
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$Companion Companion
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder getFinder$okhttp()
okhttp3.internal.http2.Http2Connection: java.net.Socket getSocket$okhttp()
okhttp3.internal.connection.RealConnectionPool: boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection)
okhttp3.Response$Builder: okhttp3.Response getCacheResponse$okhttp()
okhttp3.internal.tls.OkHostnameVerifier
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: okio.Sink sink(java.io.File)
okio.Timeout: void throwIfReached()
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource source()
com.google.android.material.transformation.FabTransformationSheetBehavior
okhttp3.internal.ws.WebSocketProtocol: int B1_MASK_LENGTH
okhttp3.internal.ws.RealWebSocket: int receivedPingCount()
okhttp3.internal.connection.Exchange: okhttp3.internal.http.ExchangeCodec codec
okhttp3.internal.connection.Exchange$ResponseBodySource: Exchange$ResponseBodySource(okhttp3.internal.connection.Exchange,okio.Source,long)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
okhttp3.internal.ws.WebSocketWriter: void writeClose(int,okio.ByteString)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp()
okhttp3.Handshake$Companion$get$1: Handshake$Companion$get$1(java.util.List)
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method getMethod
okhttp3.internal.proxy.NullProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
okhttp3.internal.http2.Http2Stream: okhttp3.Headers takeHeaders()
com.google.android.material.datepicker.MaterialCalendarGridView
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
okhttp3.Headers$Companion: void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
okhttp3.ConnectionSpec: void apply$okhttp(javax.net.ssl.SSLSocket,boolean)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
okhttp3.internal.connection.RealCall: boolean expectMoreExchanges
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
com.google.gson.stream.JsonWriter
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] $VALUES
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource)
com.google.gson.stream.JsonWriter: void flush()
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.RequestBody$Companion: RequestBody$Companion()
okhttp3.internal.http2.Hpack: okio.ByteString checkLowercase(okio.ByteString)
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor editor
okhttp3.internal.http2.Http2: java.lang.String[] FLAGS
okhttp3.internal.publicsuffix.PublicSuffixDatabase: void setListBytes(byte[],byte[])
okhttp3.internal.http2.Http2Connection$Listener$Companion: Http2Connection$Listener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Request$Builder: okhttp3.Headers$Builder headers
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
okhttp3.ConnectionSpec$Builder: java.lang.String[] tlsVersions
okhttp3.internal.http2.Hpack$Reader: int dynamicTableIndex(int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
okhttp3.Address: java.net.ProxySelector proxySelector
okhttp3.Cookie: java.util.regex.Pattern DAY_OF_MONTH_PATTERN
okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.concurrent.TaskQueue$schedule$2: long runOnce()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
org.koin.core.definition.Kind
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
okhttp3.RequestBody$Companion$toRequestBody$2: int $byteCount
okhttp3.internal.http.HttpHeaders: java.lang.String readQuotedString(okio.Buffer)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: float getChipStrokeWidth()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.String formatDuration(long)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
okhttp3.Call: void enqueue(okhttp3.Callback)
okhttp3.CertificatePinner$Companion: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
okhttp3.logging.LoggingEventListener: LoggingEventListener(okhttp3.logging.HttpLoggingInterceptor$Logger)
okhttp3.internal.connection.RouteSelector$Companion: RouteSelector$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Stream$FramingSink
okhttp3.internal.connection.RouteException: java.io.IOException firstConnectException
okhttp3.ResponseBody: okio.ByteString byteString()
okhttp3.logging.LoggingEventListener
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.ws.WebSocketExtensions$Companion
com.google.android.material.chip.Chip: void setChipEndPadding(float)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: java.util.List list
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.android.CloseGuard: CloseGuard(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
okhttp3.internal.connection.RealConnection: void incrementSuccessCount$okhttp()
okhttp3.Address: java.net.ProxySelector proxySelector()
okhttp3.internal.http2.Http2: int TYPE_PING
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.cache.CacheStrategy$Factory: long sentRequestMillis
okhttp3.Cache$urls$1: void remove()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener listener
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
okhttp3.MultipartBody: int -deprecated_size()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner taskRunner
okhttp3.internal.http2.Hpack$Writer: void writeHeaders(java.util.List)
okhttp3.ResponseBody$BomAwareReader: ResponseBody$BomAwareReader(okio.BufferedSource,java.nio.charset.Charset)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
okhttp3.HttpUrl: java.lang.String encodedPassword()
okhttp3.internal.http2.Http2Connection: long writeBytesTotal
com.google.gson.stream.JsonScope: int EMPTY_DOCUMENT
okhttp3.Response$Builder: Response$Builder()
okhttp3.logging.LoggingEventListener: void callFailed(okhttp3.Call,java.io.IOException)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
okhttp3.ConnectionPool
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource getSource()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String,boolean)
kotlin.KotlinNothingValueException
ninh.luyen.dds.datas.remotes.responses.HttpErrorCode: int NOT_FOUND
okhttp3.internal.http2.Hpack$Writer: int dynamicTableByteCount
okhttp3.internal.http.DatesKt: java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object)
kotlinx.coroutines.CoroutineStart: boolean isLazy()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
okhttp3.CacheControl$Companion
okhttp3.OkHttpClient$Builder: void setProxyAuthenticator$okhttp(okhttp3.Authenticator)
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Stream stream
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method openMethod
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.FeelLike: ninh.luyen.dds.datas.remotes.responses.FeelLike copy$default(ninh.luyen.dds.datas.remotes.responses.FeelLike,double,double,double,double,int,java.lang.Object)
okhttp3.logging.LoggingEventListener$Factory: LoggingEventListener$Factory()
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
okhttp3.Cookie$Builder: boolean httpOnly
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: FileSystem$Companion$SystemFileSystem()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
okhttp3.OkHttpClient: boolean followSslRedirects()
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
okhttp3.internal.Util: int parseHexDigit(char)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method putMethod
com.google.android.material.chip.Chip: float getChipStartPadding()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$cleanupTask$1 cleanupTask
okhttp3.internal.http2.Http2Stream$FramingSource
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
okhttp3.internal.http2.Http2Connection: int INTERVAL_PING
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl$Builder$Companion: int portColonOffset(java.lang.String,int,int)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
okhttp3.internal.concurrent.Task: java.lang.String getName()
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request
okhttp3.internal.http2.Http2Writer: void close()
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: long runOnce()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,okhttp3.internal.http2.ErrorCode)
okhttp3.Dispatcher: void cancelAll()
okhttp3.internal.concurrent.TaskRunner$runnable$1: TaskRunner$runnable$1(okhttp3.internal.concurrent.TaskRunner)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
org.koin.core.definition.Kind: org.koin.core.definition.Kind valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setOnCheckedChangeListenerInternal(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
okhttp3.ConnectionSpec: java.lang.String[] tlsVersionsAsString
com.google.gson.LongSerializationPolicy: LongSerializationPolicy(java.lang.String,int,com.google.gson.LongSerializationPolicy$1)
kotlin.KotlinNullPointerException: KotlinNullPointerException()
okio.ForwardingSink: java.lang.String toString()
okhttp3.internal.platform.BouncyCastlePlatform: boolean isSupported
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
okhttp3.internal.platform.BouncyCastlePlatform$Companion: BouncyCastlePlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Cache: void delete()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: int $streamId$inlined
okhttp3.Cookie$Builder: java.lang.String name
okhttp3.internal.http2.Http2Stream$FramingSource: void setTrailers(okhttp3.Headers)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer receiveBuffer
okhttp3.internal.http2.Hpack$Reader: int headerCount
okhttp3.internal.platform.AndroidPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
okhttp3.internal.tls.BasicTrustRootIndex: java.util.Map subjectToCaCerts
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.internal.http2.Http2Stream this$0
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
okhttp3.logging.LoggingEventListener: void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
okhttp3.OkHttpClient$Builder: void setCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.appcompat.widget.ActionBarContainer
okhttp3.HttpUrl$Builder: java.util.List encodedQueryNamesAndValues
okhttp3.CertificatePinner$Companion: java.lang.String pin(java.security.cert.Certificate)
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
okhttp3.HttpUrl: java.lang.String PATH_SEGMENT_ENCODE_SET_URI
okhttp3.MultipartBody$Builder: java.util.List parts
com.google.android.material.button.MaterialButton: int getIconGravity()
okhttp3.internal.http1.HeadersReader: okhttp3.Headers readHeaders()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.Request: java.lang.String -deprecated_method()
okhttp3.internal.concurrent.TaskQueue$execute$1: kotlin.jvm.functions.Function0 $block
okhttp3.internal.connection.RealCall$AsyncCall: void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall)
okhttp3.internal.http2.ErrorCode: ErrorCode(java.lang.String,int,int)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.lang.Object invoke()
okhttp3.MultipartBody: okhttp3.MediaType type()
ninh.luyen.dds.datas.remotes.responses.City: int getId()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
okhttp3.Response: okhttp3.Response networkResponse()
com.google.android.material.button.MaterialButton: int getTextHeight()
okhttp3.internal.http2.Http2Reader$ContinuationSource: int padding
okhttp3.Cookie: java.lang.String name
okhttp3.internal.http2.Http2Stream: void setReadBytesTotal$okhttp(long)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void invoke()
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot next()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_SHORT
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString data
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
okhttp3.internal.platform.Platform$Companion: void resetForTests(okhttp3.internal.platform.Platform)
okhttp3.internal.platform.Platform$Companion: boolean isConscryptPreferred()
okhttp3.EventListener: void cacheMiss(okhttp3.Call)
okhttp3.MultipartReader$Part: okhttp3.Headers headers
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.ResponseBody: okhttp3.ResponseBody create(byte[],okhttp3.MediaType)
okhttp3.internal.http2.Http2: java.lang.String frameLog(boolean,int,int,int,int)
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.Detail copy(int,int,int,ninh.luyen.dds.datas.remotes.responses.Temp,ninh.luyen.dds.datas.remotes.responses.FeelLike,java.util.List,int,int)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
okhttp3.internal.cache.CacheInterceptor
okhttp3.internal.platform.android.SocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
okhttp3.internal.http2.Hpack$Reader: void readIndexedHeader(int)
okhttp3.MultipartReader: okio.Options afterBoundaryOptions
okhttp3.internal.Util: int indexOfNonWhitespace$default(java.lang.String,int,int,java.lang.Object)
okhttp3.Cache: int ENTRY_BODY
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
okhttp3.internal.http2.Http2Reader: void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.OkHttpClient: okhttp3.CertificatePinner -deprecated_certificatePinner()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
org.koin.core.error.NoParameterFoundException
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
okhttp3.internal.http2.Http2Connection: void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long)
okhttp3.Headers: long byteCount()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_128_CCM_SHA256
com.google.gson.stream.JsonReader: java.lang.String toString()
com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS
okhttp3.internal.http1.HeadersReader: okhttp3.internal.http1.HeadersReader$Companion Companion
okhttp3.EventListener$Companion$NONE$1: EventListener$Companion$NONE$1()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
okhttp3.CookieJar$Companion
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.material.datepicker.MaterialTextInputPicker
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Companion Companion
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE
okhttp3.Headers: int hashCode()
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.Address $address
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
okhttp3.internal.connection.RealConnection: java.net.Socket access$getSocket$p(okhttp3.internal.connection.RealConnection)
okhttp3.CipherSuite: java.util.Map INSTANCES
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
androidx.appcompat.widget.DialogTitle
okhttp3.internal.platform.Platform$Companion: boolean isBouncyCastlePreferred()
okhttp3.internal.platform.android.SocketAdapter
okhttp3.internal.ws.RealWebSocket$Close: int code
okhttp3.internal.platform.Platform: java.lang.String toString()
androidx.viewpager2.adapter.FragmentStateAdapter$5
okhttp3.internal.HostnamesKt
okhttp3.ResponseBody: java.lang.Object consumeSource(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
okhttp3.Response: okhttp3.Handshake handshake()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
okhttp3.internal.http2.Http2Connection$Listener
okhttp3.Address: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
okhttp3.internal.cache.DiskLruCache$Editor: void detach$okhttp()
okhttp3.internal.http2.Http2Writer: void headers(boolean,int,java.util.List)
okhttp3.internal.platform.android.ConscryptSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$ContinuationSource continuation
okhttp3.OkHttpClient: boolean retryOnConnectionFailure
okhttp3.CacheControl$Builder: CacheControl$Builder()
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] children
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: void responseBodyComplete()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: boolean verify(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession)
okhttp3.internal.http2.Http2Connection$Builder
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: java.util.List component5()
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(java.time.Duration)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue settingsListenerQueue
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
okhttp3.Call: okhttp3.Request request()
okhttp3.Response: int code
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
okhttp3.CacheControl$Builder: boolean noTransform
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
androidx.lifecycle.Lifecycling$1
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,java.lang.String)
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache$Entry entry
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.drawerlayout.widget.DrawerLayout$SavedState
okhttp3.internal.ws.MessageDeflater: okio.Buffer deflatedBytes
okhttp3.HttpUrl$Builder: java.lang.String INVALID_HOST
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
okhttp3.Dispatcher
ninh.luyen.dds.datas.remotes.responses.Weather: ninh.luyen.dds.datas.remotes.responses.Weather copy$default(ninh.luyen.dds.datas.remotes.responses.Weather,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.Object)
okhttp3.internal.cache2.Relay: okio.Buffer buffer
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String)
kotlin.io.FileAlreadyExistsException
okhttp3.internal.http2.Http2: Http2()
okhttp3.Handshake: java.util.List -deprecated_localCertificates()
com.google.gson.FieldNamingPolicy$2: FieldNamingPolicy$2(java.lang.String,int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
okhttp3.internal.http1.Http1ExchangeCodec: void detachTimeout(okio.ForwardingTimeout)
okhttp3.internal.connection.RouteSelector$Selection: java.util.List routes
okhttp3.Challenge: java.lang.String -deprecated_realm()
okhttp3.internal.http2.Http2Writer: void data(boolean,int,okio.Buffer,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
okhttp3.Cache$RealCacheRequest: okio.Sink body()
okhttp3.Cookie: boolean secure()
okhttp3.Route: java.net.Proxy proxy
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
okhttp3.Headers$Builder
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange getExchange$okhttp()
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
okhttp3.internal.http2.Http2Connection: long readBytesTotal
okhttp3.internal.ws.MessageDeflater: void close()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
okhttp3.internal.cache.CacheInterceptor$Companion: boolean isContentSpecificHeader(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec)
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel component2()
okhttp3.Cache: okhttp3.Response get$okhttp(okhttp3.Request)
com.google.gson.FieldNamingPolicy$1: FieldNamingPolicy$1(java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okio.ByteString,okhttp3.MediaType,int,java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner certificatePinner
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,okio.BufferedSource,okhttp3.MediaType,long,int,java.lang.Object)
okhttp3.internal.cache.DiskLruCache: void access$setRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache,int)
okio.SegmentedByteString: java.lang.Object writeReplace()
okhttp3.OkHttpClient: okhttp3.Dispatcher -deprecated_dispatcher()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
okhttp3.WebSocket: boolean send(okio.ByteString)
okhttp3.EventListener: okhttp3.EventListener$Companion Companion
ninh.luyen.dds.datas.remotes.responses.Detail: int component2()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
com.google.android.material.datepicker.DateValidatorPointForward
okhttp3.internal.http2.Http2Connection: void awaitPong()
okhttp3.ResponseBody$Companion: ResponseBody$Companion()
okhttp3.internal.connection.RealConnection: boolean noCoalescedConnections
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
okhttp3.internal.cache2.Relay: void writeHeader(okio.ByteString,long,long)
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RouteSelector routeSelector
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
okhttp3.internal.http2.Http2: int TYPE_GOAWAY
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Response)
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Level getLevel()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
okhttp3.OkHttpClient$Builder: java.util.List getInterceptors$okhttp()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
androidx.fragment.app.FragmentManagerState
okhttp3.internal.http2.Http2Connection: void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
okhttp3.MediaType: java.lang.String type()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
okhttp3.Response: okhttp3.CacheControl cacheControl()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: java.lang.String $name
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.Callback responseCallback
com.google.android.material.button.MaterialButton: void setPressed(boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
okhttp3.HttpUrl$Builder: java.lang.String host
okhttp3.HttpUrl: int hashCode()
okhttp3.internal.concurrent.TaskQueue: java.lang.String toString()
okhttp3.ConnectionSpec$Builder: java.lang.String[] getTlsVersions$okhttp()
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink getSink$okhttp()
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_E
ninh.luyen.dds.datas.remotes.responses.City: java.lang.String name
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot
io.reactivex.exceptions.CompositeException: long serialVersionUID
okhttp3.OkHttpClient$Builder: java.net.Proxy getProxy$okhttp()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addAll(okhttp3.Headers)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.ConnectionSpec$Builder: java.lang.String[] getCipherSuites$okhttp()
okhttp3.internal.HostnamesKt: java.lang.String inet6AddressToAscii(byte[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: void close()
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PING
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getAuthenticator$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
androidx.legacy.content.WakefulBroadcastReceiver
okhttp3.internal.io.FileSystem$Companion
okhttp3.OkHttpClient: java.util.List -deprecated_networkInterceptors()
okhttp3.internal.connection.RealConnection: java.util.List calls
okhttp3.Address: javax.net.SocketFactory -deprecated_socketFactory()
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.google.android.material.chip.Chip: float getTextStartPadding()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
okhttp3.internal.http2.Http2Writer: void pushPromise(int,int,java.util.List)
okhttp3.TlsVersion$Companion
okhttp3.CacheControl: int -deprecated_maxStaleSeconds()
okhttp3.internal.connection.RouteSelector$Selection
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier
okhttp3.internal.connection.RealConnection: java.net.Socket rawSocket
okhttp3.internal.http1.Http1ExchangeCodec: int state
okhttp3.Dispatcher: boolean promoteAndExecute()
com.google.gson.FieldNamingPolicy$5: FieldNamingPolicy$5(java.lang.String,int)
okhttp3.internal.connection.Exchange: okhttp3.EventListener eventListener
okhttp3.internal.tls.OkHostnameVerifier: int ALT_DNS_NAME
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall call
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Companion Companion
okhttp3.Challenge: java.util.Map -deprecated_authParams()
ninh.luyen.dds.datas.remotes.responses.City: int hashCode()
okhttp3.Cache: void setWriteSuccessCount$okhttp(int)
okhttp3.internal.http2.Http2Reader: okio.BufferedSource source
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method invoke()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink sink
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_NO_STATUS_CODE
okhttp3.internal.platform.android.DeferredSocketAdapter: DeferredSocketAdapter(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
okhttp3.Cookie$Builder: boolean hostOnly
androidx.constraintlayout.widget.Barrier
okhttp3.internal.http2.Header: java.lang.String TARGET_AUTHORITY_UTF8
okhttp3.internal.http2.Http2Connection: long intervalPingsSent
okhttp3.MultipartReader: okio.ByteString crlfDashDashBoundary
okhttp3.CipherSuite: java.util.Comparator access$getORDER_BY_NAME$cp()
okhttp3.Address: java.util.List connectionSpecs()
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
ninh.luyen.dds.datas.remotes.responses.Weather: int id
okhttp3.internal.platform.Android10Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.HttpUrl$Builder$Companion
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_proxyAuthenticator()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level[] values()
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
okhttp3.Interceptor$Companion$invoke$1: Interceptor$Companion$invoke$1(kotlin.jvm.functions.Function1)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component2()
okhttp3.HttpUrl: java.lang.String url
androidx.fragment.app.FragmentActivity
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
okhttp3.Handshake$Companion$handshake$1: java.lang.Object invoke()
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
okhttp3.ConnectionSpec: java.util.List tlsVersions()
okhttp3.MultipartBody$Part$Companion
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.reflect.Method getMethod
okhttp3.Cookie: java.util.regex.Pattern access$getMONTH_PATTERN$cp()
okhttp3.internal.concurrent.TaskLoggerKt: java.lang.Object logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0)
okio.AsyncTimeout: void enter()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
com.google.gson.LongSerializationPolicy$2: LongSerializationPolicy$2(java.lang.String,int)
okhttp3.internal.Util: void notifyAll(java.lang.Object)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion: BasicCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: ninh.luyen.dds.datas.remotes.responses.SearchCacheModel copy$default(ninh.luyen.dds.datas.remotes.responses.SearchCacheModel,java.lang.String,ninh.luyen.dds.datas.remotes.responses.SearchResponseModel,int,java.lang.Object)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.ExchangeFinder finder
okhttp3.internal.http2.Header: okio.ByteString name
okhttp3.internal.ws.RealWebSocket: long DEFAULT_MINIMUM_DEFLATE_SIZE
okhttp3.Challenge: Challenge(java.lang.String,java.util.Map)
okhttp3.HttpUrl: java.lang.String host
okhttp3.CipherSuite: java.lang.String javaName
okhttp3.internal.Util: java.lang.String okHttpName
okhttp3.Cookie: java.lang.String -deprecated_name()
okhttp3.Request$Builder: java.util.Map tags
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection connection
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
androidx.appcompat.view.menu.ExpandedMenuView
okhttp3.Cookie: java.util.regex.Pattern access$getYEAR_PATTERN$cp()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
okhttp3.FormBody$Companion: FormBody$Companion()
com.google.android.material.textview.MaterialTextView
okhttp3.Headers$Companion: okhttp3.Headers of(java.lang.String[])
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TE
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp()
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform findAndroidPlatform()
okhttp3.Cache$RealCacheRequest: okio.Sink body
okhttp3.internal.http2.Http2Connection: java.util.Map streams
okhttp3.internal.http2.PushObserver$Companion: PushObserver$Companion()
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.gson.FieldNamingPolicy$4
okhttp3.HttpUrl$Companion: boolean isPercentEncoded(java.lang.String,int,int)
okhttp3.Cookie: java.lang.String value
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
okhttp3.internal.cache2.Relay: void setSourceCount(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload2$inlined
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.lang.String)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion: HttpLoggingInterceptor$Logger$Companion()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: ninh.luyen.dds.datas.remotes.responses.SearchCacheModel copy(java.lang.String,ninh.luyen.dds.datas.remotes.responses.SearchResponseModel)
com.google.gson.stream.JsonReader: int stackSize
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
okhttp3.Headers: int size()
okhttp3.Cookie$Companion: okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String)
okhttp3.Cache$Companion
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
okhttp3.MediaType: java.nio.charset.Charset charset()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection connection
okhttp3.OkHttpClient: int -deprecated_callTimeoutMillis()
okhttp3.internal.http.StatusLine: java.lang.String message
okhttp3.Call: boolean isExecuted()
okhttp3.HttpUrl$Builder: void setEncodedFragment$okhttp(java.lang.String)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
okhttp3.internal.platform.Platform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
okhttp3.Handshake: boolean equals(java.lang.Object)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type LEFT
androidx.appcompat.view.menu.ListMenuItemView
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp()
okhttp3.internal.http2.Settings: Settings()
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
okhttp3.internal.http2.Http2ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
okhttp3.OkHttpClient$Builder: boolean getRetryOnConnectionFailure$okhttp()
com.google.android.material.navigation.NavigationView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http1.Http1ExchangeCodec: void flushRequest()
ninh.luyen.dds.datas.remotes.responses.Coordinator: double lon
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.cache2.Relay: void setUpstreamReader(java.lang.Thread)
okhttp3.CacheControl
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String KEEP_ALIVE
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String TRANSFER_ENCODING
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
okhttp3.internal.connection.RealCall: void callStart()
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
okhttp3.internal.Util$asFactory$1
okhttp3.internal.ws.RealWebSocket: java.util.Random random
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.Temp: double getMorn()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
okhttp3.Cache$Companion: java.util.Set varyFields(okhttp3.Headers)
okhttp3.MediaType: java.lang.String QUOTED
okhttp3.RequestBody: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
okhttp3.internal.http2.Http2Connection: void writeHeaders$okhttp(int,boolean,java.util.List)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
okhttp3.internal.http2.Http2: int FLAG_PRIORITY
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean)
okhttp3.internal.platform.android.ConscryptSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
okhttp3.internal.cache.DiskLruCache: boolean access$getMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.ws.WebSocketExtensions: boolean noContextTakeover(boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request getRequest$okhttp()
com.google.android.material.button.MaterialButton: void setIconSize(int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
ninh.luyen.dds.datas.remotes.responses.City: int component6()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.gson.stream.JsonReader: int PEEKED_NULL
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool delegate
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskQueue newQueue()
okhttp3.internal.http2.Http2Connection: void failConnection(java.io.IOException)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream: void setErrorException$okhttp(java.io.IOException)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: java.util.List http2HeadersList(okhttp3.Request)
okhttp3.internal.http2.Http2Connection: long getWriteBytesTotal()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object)
okhttp3.Cache$Companion: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.Request
okhttp3.internal.connection.RealCall: okhttp3.Call clone()
ninh.luyen.dds.datas.remotes.responses.FeelLike: java.lang.String toString()
com.google.gson.stream.JsonReader: int PEEKED_LONG
okhttp3.HttpUrl$Builder$Companion: int parsePort(java.lang.String,int,int)
okhttp3.ConnectionSpec$Builder: java.lang.String[] cipherSuites
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newChunkedSink()
okhttp3.internal.http2.Settings: int[] values
okhttp3.HttpUrl$Builder: void setHost$okhttp(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
okhttp3.internal.http.HttpHeaders: okio.ByteString TOKEN_DELIMITERS
okio.AsyncTimeout: okio.Source source(okio.Source)
okhttp3.internal.ws.RealWebSocket: boolean awaitingPong
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
org.koin.core.error.NoPropertyFileFoundException
okhttp3.internal.connection.RouteSelector: java.net.Proxy nextProxy()
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int,int)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
okhttp3.OkHttpClient$Builder: boolean followRedirects
okhttp3.internal.ws.WebSocketReader: void readControlFrame()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.platform.android.AndroidLog: void enableLogging(java.lang.String,java.lang.String)
okhttp3.logging.HttpLoggingInterceptor: HttpLoggingInterceptor()
okhttp3.internal.publicsuffix.PublicSuffixDatabase
androidx.core.app.JobIntentService: JobIntentService()
androidx.constraintlayout.widget.ConstraintLayout
ninh.luyen.dds.datas.remotes.responses.Temp: double night
androidx.activity.result.ActivityResultRegistry$2
okhttp3.internal.cache.FaultHidingSink: kotlin.jvm.functions.Function1 getOnException()
com.google.gson.stream.JsonReader: java.lang.String nextName()
okhttp3.internal.http2.Hpack
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
okhttp3.internal.ws.RealWebSocket$Message: int getFormatOpcode()
okhttp3.MultipartBody
okhttp3.Headers: boolean equals(java.lang.Object)
okhttp3.HttpUrl: java.net.URI -deprecated_uri()
okhttp3.internal.concurrent.TaskQueue$execute$1
okhttp3.logging.HttpLoggingInterceptor$Logger: okhttp3.logging.HttpLoggingInterceptor$Logger$Companion Companion
okhttp3.Dispatcher: okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
okhttp3.internal.ws.WebSocketWriter: byte[] maskKey
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: boolean equals(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
okhttp3.internal.http2.Http2Reader$Handler
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
kotlin.text.Regex$Serialized: long serialVersionUID
androidx.customview.widget.ExploreByTouchHelper: int mHoveredVirtualViewId
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
ninh.luyen.dds.datas.remotes.responses.Temp: double component4()
okhttp3.MultipartReader$PartSource: okhttp3.MultipartReader this$0
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
okhttp3.internal.connection.RealCall: okhttp3.Request originalRequest
okhttp3.internal.ws.RealWebSocket: int sentPingCount()
okhttp3.ResponseBody$BomAwareReader: boolean closed
okhttp3.internal.platform.AndroidPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type
okhttp3.MultipartBody$Companion: MultipartBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.cache.CacheStrategy$Factory
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
okio.ForwardingSource: okio.Source delegate()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
okhttp3.OkHttpClient: okhttp3.Cache cache()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
okhttp3.internal.Util: java.lang.String peerName(java.net.Socket)
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)
okhttp3.internal.connection.Exchange: void responseHeadersEnd(okhttp3.Response)
okhttp3.Interceptor$Companion$invoke$1
okhttp3.CacheControl: boolean noStore()
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.http.RequestLine: boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
okhttp3.MultipartBody$Companion: MultipartBody$Companion()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.lang.reflect.Method component2()
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean atLeastVersion$default(okhttp3.internal.platform.ConscryptPlatform$Companion,int,int,int,int,java.lang.Object)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okhttp3.internal.http1.Http1ExchangeCodec this$0
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
okhttp3.internal.cache.CacheInterceptor$Companion: CacheInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.ComponentActivity: ComponentActivity()
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTROL_PONG
okhttp3.internal.platform.Jdk8WithJettyBootPlatform
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Stream: java.io.IOException errorException
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(java.lang.String,okhttp3.MediaType)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: int getCnt()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
okhttp3.CacheControl: boolean noCache
com.google.gson.stream.JsonReader: int peekNumber()
okhttp3.internal.http2.Huffman: int[] CODES
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
okhttp3.internal.concurrent.TaskRunner: java.util.List busyQueues
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long)
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
okhttp3.Dispatcher: java.util.List runningCalls()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.Response$Builder: java.lang.String message
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
okhttp3.internal.http.DatesKt: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS
kotlinx.coroutines.flow.internal.ChildCancelledException: ChildCancelledException()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] access$getPublicSuffixListBytes$p(okhttp3.internal.publicsuffix.PublicSuffixDatabase)
okhttp3.internal.http2.Header$Companion: Header$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
okhttp3.Cache$Entry: okhttp3.Headers responseHeaders
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange interceptorScopedExchange
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue pushQueue
okhttp3.Cookie$Companion: boolean access$pathMatch(okhttp3.Cookie$Companion,okhttp3.HttpUrl,java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
okhttp3.internal.http2.Hpack$Writer: void resizeHeaderTable(int)
okhttp3.internal.connection.RealCall$AsyncCall: RealCall$AsyncCall(okhttp3.internal.connection.RealCall,okhttp3.Callback)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
okhttp3.internal.http2.Http2Connection: int getLastGoodStreamId$okhttp()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.lang.String)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
com.google.android.material.behavior.SwipeDismissBehavior
okhttp3.OkHttpClient: java.util.List connectionSpecs()
okhttp3.internal.cache.DiskLruCache: boolean mostRecentRebuildFailed
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
okhttp3.internal.http.HttpMethod: okhttp3.internal.http.HttpMethod INSTANCE
okio.ForwardingSource: okio.Source -deprecated_delegate()
okhttp3.WebSocket: void cancel()
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
kotlin.collections.EmptyMap: long serialVersionUID
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion()
okhttp3.FormBody: FormBody(java.util.List,java.util.List)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String)
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.cache.DiskLruCache: void readJournal()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType BOOLEAN_TYPE
okhttp3.internal.connection.RealConnection$connectTls$1: java.util.List invoke()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED
org.koin.core.error.ClosedScopeException
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: boolean isSupported()
com.google.gson.stream.JsonReader$1: JsonReader$1()
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType contentType()
okhttp3.Cookie$Companion: java.lang.String parseDomain(java.lang.String)
okhttp3.internal.Util: int and(short,int)
okhttp3.internal.connection.Exchange$RequestBodySink: java.io.IOException complete(java.io.IOException)
androidx.appcompat.view.menu.ActionMenuItemView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
okhttp3.internal.connection.ExchangeFinder: okhttp3.Address address
okhttp3.internal.concurrent.TaskRunner: void beforeRun(okhttp3.internal.concurrent.Task)
okhttp3.Protocol: okhttp3.Protocol[] values()
com.google.gson.stream.JsonWriter: boolean getSerializeNulls()
org.koin.core.logger.Level: org.koin.core.logger.Level DEBUG
okhttp3.internal.http2.Http2Writer: boolean client
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
okhttp3.Cookie$Builder: java.lang.String value
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion Companion
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory sslSocketFactoryOrNull
okhttp3.internal.connection.Exchange: okhttp3.EventListener getEventListener$okhttp()
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: void invoke(java.io.IOException)
okhttp3.internal.http2.Http2ExchangeCodec
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
okhttp3.Cache: Cache(java.io.File,long,okhttp3.internal.io.FileSystem)
okhttp3.internal.http2.Hpack$Reader: void readHeaders()
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
okhttp3.internal.connection.Exchange: void finishRequest()
okhttp3.internal.http2.Hpack$Writer: int headerCount
androidx.appcompat.widget.AppCompatSpinner$SavedState
okhttp3.internal.http2.Http2Connection: long awaitPongsReceived
okhttp3.internal.ws.RealWebSocket: boolean pong(okio.ByteString)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
okhttp3.internal.http2.Hpack: okhttp3.internal.http2.Hpack INSTANCE
okhttp3.internal.cache.DiskLruCache$snapshots$1: DiskLruCache$snapshots$1(okhttp3.internal.cache.DiskLruCache)
okhttp3.Handshake: java.util.List peerCertificates()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)
okhttp3.Response: int -deprecated_code()
okhttp3.internal.connection.RouteSelector: java.util.List proxies
com.google.android.material.datepicker.RangeDateSelector: android.os.Parcelable$Creator CREATOR
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
ninh.luyen.dds.datas.remotes.responses.Coordinator
okhttp3.internal.platform.BouncyCastlePlatform$Companion
okhttp3.Route: boolean requiresTunnel()
okhttp3.Connection: okhttp3.Protocol protocol()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.HttpUrl: java.lang.String fragment
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: Http2Connection$ReaderRunnable$settings$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings)
okhttp3.internal.http2.Http2Stream$StreamTimeout: java.io.IOException newTimeoutException(java.io.IOException)
ninh.luyen.dds.datas.remotes.responses.FeelLike: int hashCode()
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
androidx.core.graphics.drawable.IconCompat
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.TaskQueue taskQueue
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
ninh.luyen.dds.datas.remotes.responses.Detail: int hashCode()
okhttp3.EventListener
okhttp3.internal.platform.Android10Platform
com.google.gson.FieldNamingPolicy$2: java.lang.String translateName(java.lang.reflect.Field)
okhttp3.internal.connection.RealCall: void setConnectionToCancel(okhttp3.internal.connection.RealConnection)
okhttp3.OkHttpClient$Builder: java.util.List getConnectionSpecs$okhttp()
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
okhttp3.FormBody$Builder: java.util.List values
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setSelected(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.Coordinator: double getLat()
okhttp3.logging.LoggingEventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
okhttp3.internal.concurrent.TaskRunner$Backend
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onHeaders(int,java.util.List,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.platform.android.AndroidLogHandler: okhttp3.internal.platform.android.AndroidLogHandler INSTANCE
okhttp3.internal.connection.RealCall: java.io.IOException callDone(java.io.IOException)
okhttp3.Response: okhttp3.ResponseBody body()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
okhttp3.internal.platform.android.AndroidLog: int MAX_LOG_LENGTH
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
okhttp3.internal.platform.android.Android10SocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.HttpUrl: java.util.Set queryParameterNames()
okhttp3.internal.platform.android.ConscryptSocketAdapter: boolean isSupported()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Class,java.lang.Object)
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 cleanupTask
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer component4()
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
okhttp3.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS
com.google.android.material.chip.Chip: void setTextAppearance(int)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $messageOrClose$inlined
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient getClient()
okhttp3.internal.http2.Http2ExchangeCodec: void flushRequest()
okhttp3.OkHttpClient$Builder: boolean followSslRedirects
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
okhttp3.Interceptor
okhttp3.internal.http2.Http2Writer: void dataFrame(int,int,okio.Buffer,int)
okhttp3.Dispatcher: void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
androidx.lifecycle.Lifecycle$State
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
okhttp3.ResponseBody
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
okhttp3.MultipartReader: boolean closed
okhttp3.Cookie: java.lang.String -deprecated_value()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_SIGN
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
okhttp3.CertificatePinner$Builder: java.util.List pins
okhttp3.internal.connection.RealConnection$newWebSocketStreams$1: okio.BufferedSink $sink
okio.ForwardingSource: okio.Source delegate
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode STREAM_CLOSED
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
okhttp3.MultipartReader: java.lang.String boundary
okhttp3.internal.cache.DiskLruCache: int access$getRedundantOpCount$p(okhttp3.internal.cache.DiskLruCache)
androidx.constraintlayout.widget.Barrier: int getMargin()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlin.jvm.internal.PropertyReference: int hashCode()
okhttp3.internal.cache2.Relay: void commit(long)
okhttp3.RequestBody$Companion$toRequestBody$2
okhttp3.OkHttpClient$Builder: void setX509TrustManagerOrNull$okhttp(javax.net.ssl.X509TrustManager)
okhttp3.internal.Util: int indexOf(java.lang.String[],java.lang.String,java.util.Comparator)
kotlinx.coroutines.channels.ClosedReceiveChannelException
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
okhttp3.ConnectionSpec$Builder: boolean getSupportsTlsExtensions$okhttp()
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorServiceOrNull
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener $this_asFactory
androidx.activity.result.IntentSenderRequest
okhttp3.Response$Builder: okhttp3.Request request
okhttp3.internal.Util: long toLongOrDefault(java.lang.String,long)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: boolean $cancelable
okhttp3.OkHttpClient$Companion
com.google.android.material.textfield.TextInputLayout: void setHint(int)
okhttp3.internal.platform.Android10Platform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
okhttp3.Cookie: java.lang.String -deprecated_path()
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: DatesKt$STANDARD_DATE_FORMAT$1()
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: java.lang.String query
okhttp3.internal.cache.DiskLruCache: int valueCount
okhttp3.internal.connection.RealConnection$Companion: RealConnection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.io.FileSystem: long size(java.io.File)
okhttp3.CacheControl$Builder: int maxStaleSeconds
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okhttp3.internal.cache.DiskLruCache$Entry this$0
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.RealWebSocket: long queueSize
okhttp3.logging.HttpLoggingInterceptor: java.util.Set headersToRedact
okhttp3.internal.connection.RealConnection: void noCoalescedConnections$okhttp()
okhttp3.CacheControl: boolean mustRevalidate
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Timeout timeout()
okhttp3.internal.http2.Huffman: void addCode(int,int,int)
okhttp3.internal.cache.DiskLruCache$snapshots$1
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar getCookieJar$okhttp()
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long)
okhttp3.Cookie$Builder: boolean persistent
okhttp3.Handshake$Companion: okhttp3.Handshake get(javax.net.ssl.SSLSession)
okhttp3.Cache$RealCacheRequest: okhttp3.internal.cache.DiskLruCache$Editor access$getEditor$p(okhttp3.Cache$RealCacheRequest)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level BODY
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain)
okhttp3.internal.platform.Platform$Companion: void resetForTests$default(okhttp3.internal.platform.Platform$Companion,okhttp3.internal.platform.Platform,int,java.lang.Object)
okhttp3.MultipartReader$Part: okio.BufferedSource body()
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.android.material.button.MaterialButton
okhttp3.ResponseBody$Companion$asResponseBody$1: okio.BufferedSource $this_asResponseBody
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: int $streamId$inlined
retrofit2.HttpException
ninh.luyen.dds.datas.remotes.responses.FeelLike: FeelLike(double,double,double,double)
okhttp3.logging.LoggingEventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
okhttp3.Response: void close()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Companion Companion
okhttp3.Cache: int requestCount()
okhttp3.Handshake$Companion: Handshake$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CacheControl: boolean noStore
okhttp3.logging.LoggingEventListener: void secureConnectStart(okhttp3.Call)
okhttp3.HttpUrl$Companion: void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.Request: okhttp3.HttpUrl url
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.Request $request
okhttp3.Address: javax.net.SocketFactory socketFactory
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
okhttp3.TlsVersion$Companion: TlsVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
ninh.luyen.dds.datas.remotes.responses.Detail: int getSunrise()
okhttp3.Call: okhttp3.Response execute()
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.google.gson.stream.JsonReader: int peeked
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings okHttpSettings
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection getConnection$okhttp()
okhttp3.internal.http2.Huffman$Node: okhttp3.internal.http2.Huffman$Node[] getChildren()
okhttp3.OkHttp: OkHttp()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
okhttp3.OkHttpClient: boolean -deprecated_followSslRedirects()
kotlinx.coroutines.flow.internal.AbortFlowException
okhttp3.OkHttpClient$Builder: okhttp3.Dns dns
okhttp3.CacheControl$Companion: okhttp3.CacheControl parse(okhttp3.Headers)
okhttp3.CacheControl: int sMaxAgeSeconds()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager trustManager
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Response cacheResponse
okhttp3.Dispatcher: int queuedCallsCount()
okhttp3.internal.ws.RealWebSocket: okhttp3.Call call
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend getBackend()
okhttp3.Request: okhttp3.Headers -deprecated_headers()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
okhttp3.FormBody: java.util.List encodedNames
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel copy(ninh.luyen.dds.datas.remotes.responses.City,int,java.lang.String,double,java.util.List)
okhttp3.OkHttpClient$Builder: void setDispatcher$okhttp(okhttp3.Dispatcher)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
okhttp3.internal.cache.CacheStrategy$Factory: long computeFreshnessLifetime()
okhttp3.internal.http2.Huffman: int encodedLength(okio.ByteString)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.OkHttpClient$Builder: okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp()
okhttp3.ResponseBody$BomAwareReader: okio.BufferedSource source
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.MediaType: java.lang.String subtype()
okhttp3.internal.platform.Android10Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: PublicSuffixDatabase$Companion()
okhttp3.CacheControl$Builder: boolean noCache
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.platform.AndroidPlatform: java.util.List socketAdapters
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket this$0
okhttp3.Response$Builder: okhttp3.Response getPriorResponse$okhttp()
okhttp3.internal.http2.Http2Stream: void setWriteBytesTotal$okhttp(long)
okhttp3.OkHttpClient: java.util.List interceptors
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
okhttp3.logging.HttpLoggingInterceptor: HttpLoggingInterceptor(okhttp3.logging.HttpLoggingInterceptor$Logger,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CertificatePinner$Pin: boolean equals(java.lang.Object)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$IntRef $receivedCloseCode$inlined
okhttp3.Cookie: java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$DefaultLogger: void log(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
okhttp3.ConnectionSpec: java.lang.String toString()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: AndroidSocketAdapter$Companion$factory$1(java.lang.String)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch latch
okhttp3.Credentials: Credentials()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.Address: java.util.List protocols()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
okhttp3.internal.ws.RealWebSocket: java.lang.String key
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnectionPool connectionPool
okhttp3.internal.http2.Http2Connection: boolean getClient$okhttp()
okhttp3.RequestBody$Companion$asRequestBody$1: long contentLength()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
okhttp3.internal.connection.RealCall: boolean retryAfterFailure()
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: java.lang.Object invoke(java.lang.Object)
okio.ByteString: void readObject(java.io.ObjectInputStream)
okhttp3.internal.http2.Http2Stream$FramingSink: okhttp3.Headers getTrailers()
okhttp3.CacheControl: boolean immutable
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
okhttp3.OkHttpClient$Builder: long minWebSocketMessageToCompress
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
com.google.gson.FieldNamingPolicy$6: FieldNamingPolicy$6(java.lang.String,int)
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener$Companion Companion
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
okhttp3.internal.cache.DiskLruCache$snapshots$1: okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot
okhttp3.Handshake$peerCertificates$2: java.lang.Object invoke()
okhttp3.internal.http1.HeadersReader$Companion: HeadersReader$Companion()
okhttp3.Address: okhttp3.CertificatePinner -deprecated_certificatePinner()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1
okhttp3.Response: java.lang.String message
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls: javax.net.ssl.X509TrustManager trustManager(okhttp3.internal.platform.android.SocketAdapter,javax.net.ssl.SSLSocketFactory)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED
okhttp3.Cookie: java.util.regex.Pattern access$getTIME_PATTERN$cp()
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getFinished()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.RealConnection: void setRouteFailureCount$okhttp(int)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: java.lang.String component1()
okhttp3.Cache: boolean isClosed()
okhttp3.internal.concurrent.TaskRunner: void runTask(okhttp3.internal.concurrent.Task)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
ninh.luyen.dds.datas.cache.models.SearchCache: ninh.luyen.dds.datas.cache.models.SearchCache copy$default(ninh.luyen.dds.datas.cache.models.SearchCache,java.lang.String,ninh.luyen.dds.datas.remotes.responses.SearchResponseModel,int,java.lang.Object)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
okhttp3.Cookie: int hashCode()
okhttp3.RequestBody: RequestBody()
okhttp3.internal.connection.RealConnection$WhenMappings: int[] $EnumSwitchMapping$0
com.google.android.material.transformation.ExpandableTransformationBehavior
okhttp3.internal.ws.RealWebSocket$Companion
okhttp3.HttpUrl: java.lang.String username()
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
okhttp3.OkHttpClient$Builder$addInterceptor$2
okhttp3.internal.http2.Http2Writer: void flush()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean requestIsOneShot(java.io.IOException,okhttp3.Request)
ninh.luyen.dds.datas.remotes.responses.Detail: int component3()
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String,long)
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KProperty$Getter getGetter()
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Http2Writer$Companion Companion
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: int $index$inlined
okhttp3.internal.http2.Http2Stream$Companion: Http2Stream$Companion()
okhttp3.logging.LoggingEventListener: void satisfactionFailure(okhttp3.Call,okhttp3.Response)
okhttp3.internal.http2.Http2Stream: void receiveHeaders(okhttp3.Headers,boolean)
okhttp3.OkHttpClient$Builder: int getReadTimeout$okhttp()
okhttp3.OkHttpClient: okhttp3.Dns dns
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Hpack$Reader hpackReader
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.Void invalidLengths(java.util.List)
okhttp3.internal.http2.Http2Connection: boolean pushedStream$okhttp(int)
okhttp3.internal.platform.android.AndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
okhttp3.OkHttpClient$Builder: void setProxy$okhttp(java.net.Proxy)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.Headers trailers
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: int $streamId$inlined
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
okhttp3.ConnectionSpec: boolean -deprecated_supportsTlsExtensions()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
com.google.gson.stream.JsonWriter: void setHtmlSafe(boolean)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.concurrent.Task: boolean cancelable
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int)
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long bytesRemaining
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion()
okhttp3.internal.Util: void wait(java.lang.Object)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
com.google.gson.stream.JsonWriter: void setLenient(boolean)
okhttp3.internal.platform.android.CloseGuard$Companion: CloseGuard$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.RequestBody$Companion$asRequestBody$1: RequestBody$Companion$asRequestBody$1(java.io.File,okhttp3.MediaType)
androidx.constraintlayout.solver.SolverVariable$Type
okhttp3.Headers: Headers(java.lang.String[])
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
okhttp3.Headers: java.lang.String[] namesAndValues
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
okhttp3.internal.concurrent.Task: boolean getCancelable()
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.Cache)
com.google.gson.JsonParseException
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
okhttp3.internal.http2.Http2Writer: void settings(okhttp3.internal.http2.Settings)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
okhttp3.internal.http2.Http2
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.google.gson.stream.JsonWriter: void push(int)
okhttp3.internal.http2.Http2Connection$Builder: okio.BufferedSink sink
okhttp3.internal.platform.AndroidPlatform: boolean isSupported
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine$Companion Companion
androidx.appcompat.widget.ActionMenuView
okhttp3.internal.ws.WebSocketWriter: okio.Buffer$UnsafeCursor maskCursor
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.AndroidSocketAdapter$Companion Companion
okhttp3.HttpUrl$Builder
okhttp3.internal.http2.Http2Stream: boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException)
com.google.android.material.datepicker.CompositeDateValidator
okhttp3.MediaType: java.util.regex.Pattern access$getPARAMETER$cp()
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: RealConnectionPool$cleanupTask$1(okhttp3.internal.connection.RealConnectionPool,java.lang.String)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit$default(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,int,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
kotlinx.coroutines.TimeoutCancellationException
okhttp3.Cache: void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.OkHttpClient$Builder: javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp()
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] written
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_BACKUP
okhttp3.internal.ws.MessageDeflaterKt
okio.AsyncTimeout: java.io.IOException access$newTimeoutException(java.io.IOException)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Backend backend
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void rename(java.io.File,java.io.File)
okhttp3.internal.cache2.Relay
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
okhttp3.internal.ws.WebSocketProtocol: long PAYLOAD_BYTE_MAX
com.google.android.material.chip.Chip: void setElevation(float)
com.google.gson.stream.JsonScope: JsonScope()
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
okhttp3.HttpUrl$Builder: int port
okhttp3.internal.platform.android.SocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.Cache$CacheResponseBody: Cache$CacheResponseBody(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String)
okhttp3.EventListener: void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
okhttp3.Cache$RealCacheRequest: void setDone(boolean)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: AndroidCertificateChainCleaner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MediaType: java.lang.String -deprecated_type()
androidx.appcompat.widget.Toolbar$SavedState
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconToUpdateDummyDrawable()
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1
okhttp3.Response: okhttp3.Response$Builder newBuilder()
okhttp3.Headers$Builder: okhttp3.Headers$Builder addLenient$okhttp(java.lang.String)
kotlin.UnsafeLazyImpl: java.lang.Object writeReplace()
okhttp3.FormBody: okhttp3.MediaType contentType()
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: long serialVersionUID
okhttp3.internal.ws.RealWebSocket: void access$setName$p(okhttp3.internal.ws.RealWebSocket,java.lang.String)
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
ninh.luyen.dds.datas.cache.models.SearchCache: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel getSearchResponseModel()
okhttp3.MediaType: java.util.regex.Pattern PARAMETER
okhttp3.Cookie$Companion: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
okhttp3.internal.http2.Http2: int FLAG_ACK
com.google.gson.stream.JsonReader: java.lang.String getPath()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: Jdk8WithJettyBootPlatform$Companion()
ninh.luyen.dds.datas.remotes.responses.HttpErrorCode
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
okhttp3.internal.Util: java.util.List toImmutableList(java.util.List)
okhttp3.internal.platform.AndroidPlatform: boolean access$isSupported$cp()
okhttp3.Cookie: long -deprecated_expiresAt()
okhttp3.internal.http.CallServerInterceptor: boolean forWebSocket
okhttp3.internal.cache2.Relay: okio.Source getUpstream()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
okhttp3.Response$Builder: long sentRequestAtMillis
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
okhttp3.internal.cache.DiskLruCache$Entry: boolean readable
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.Request request
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy BUFFER
okhttp3.internal.http2.Http2ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
kotlin.jvm.internal.CallableReference: boolean isFinal()
okhttp3.Cache: void trackResponse$okhttp(okhttp3.internal.cache.CacheStrategy)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.concurrent.TaskQueue: java.lang.String getName$okhttp()
okhttp3.internal.ws.WebSocketReader: long frameLength
okhttp3.internal.platform.Platform: Platform()
okhttp3.CookieJar$Companion$NoCookies: CookieJar$Companion$NoCookies()
okhttp3.Headers: Headers(java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.content.FileProvider: FileProvider()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void shutdown()
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
okhttp3.Handshake$Companion
okhttp3.Address: okhttp3.CertificatePinner certificatePinner
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
okhttp3.CacheControl: boolean isPublic
okhttp3.internal.http2.Http2Stream$StreamTimeout: okhttp3.internal.http2.Http2Stream this$0
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
okhttp3.HttpUrl: java.util.List encodedPathSegments()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.google.gson.stream.JsonWriter: boolean isHtmlSafe()
okhttp3.MultipartBody: okhttp3.MediaType type
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.internal.ParcelableSparseBooleanArray
okhttp3.ResponseBody$Companion$asResponseBody$1: ResponseBody$Companion$asResponseBody$1(okio.BufferedSource,okhttp3.MediaType,long)
okhttp3.OkHttpClient$Builder: java.util.List getNetworkInterceptors$okhttp()
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.RealWebSocket$Streams streams
okhttp3.internal.ws.RealWebSocket$Close: okio.ByteString getReason()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getOkHttpSettings()
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger callsPerHost
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
okhttp3.OkHttpClient$Builder: void setAuthenticator$okhttp(okhttp3.Authenticator)
okhttp3.internal.cache.CacheStrategy: okhttp3.internal.cache.CacheStrategy$Companion Companion
androidx.savedstate.SavedStateRegistry$1
okhttp3.Headers$Builder: Headers$Builder()
okhttp3.Response: okhttp3.Handshake -deprecated_handshake()
okhttp3.Cache$Entry: okhttp3.Protocol protocol
okhttp3.internal.cache.DiskLruCache$Entry: boolean zombie
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
okhttp3.Cache$RealCacheRequest: boolean getDone()
com.google.gson.stream.JsonReader: int PEEKED_BEGIN_OBJECT
okhttp3.Authenticator: okhttp3.Authenticator JAVA_NET_AUTHENTICATOR
okhttp3.internal.cache.CacheStrategy$Companion
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: java.lang.String cod
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType COLOR_DRAWABLE_TYPE
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.concurrent.Task: java.lang.String toString()
okhttp3.internal.ws.WebSocketExtensions: boolean component3()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
okhttp3.internal.concurrent.TaskQueue: void execute(java.lang.String,long,boolean,kotlin.jvm.functions.Function0)
ninh.luyen.dds.datas.remotes.responses.FeelLike: double component1()
okhttp3.HttpUrl$Builder: java.lang.String encodedUsername
com.google.gson.FieldNamingPolicy$5
okhttp3.internal.http2.Http2Connection: void setLastGoodStreamId$okhttp(int)
okhttp3.internal.platform.Jdk9Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.internal.http2.Hpack$Writer: void adjustDynamicTableByteCount()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter
okhttp3.internal.connection.RealConnection$Companion: okhttp3.internal.connection.RealConnection newTestConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route,java.net.Socket,long)
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isRecoverable(java.io.IOException,boolean)
okhttp3.CipherSuite$Companion
ninh.luyen.dds.datas.remotes.responses.Detail: int pressure
okhttp3.internal.Internal: java.lang.String cookieToString(okhttp3.Cookie,boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
okhttp3.CookieJar$Companion: CookieJar$Companion()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
ninh.luyen.dds.datas.remotes.responses.FeelLike: double component4()
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List getCleanFiles$okhttp()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.cache2.Relay: int SOURCE_UPSTREAM
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
okhttp3.OkHttpClient$Builder: void setMinWebSocketMessageToCompress$okhttp(long)
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange getExchange$okhttp()
okhttp3.Authenticator$Companion: okhttp3.Authenticator$Companion $$INSTANCE
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setFlags(int)
okhttp3.Handshake: Handshake(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
okhttp3.internal.http.RealInterceptorChain: int getReadTimeoutMillis$okhttp()
okhttp3.OkHttpClient: OkHttpClient(okhttp3.OkHttpClient$Builder)
okhttp3.internal.ws.RealWebSocket$connect$1: void onResponse(okhttp3.Call,okhttp3.Response)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route retryRoute()
okhttp3.Cache$CacheResponseBody$1
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
okhttp3.internal.ws.WebSocketExtensions: int hashCode()
okhttp3.OkHttpClient
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: java.lang.Object invoke(java.lang.Object)
okhttp3.internal.ws.WebSocketReader: byte[] maskKey
okhttp3.MultipartBody$Part: okhttp3.RequestBody -deprecated_body()
okhttp3.internal.cache.DiskLruCache$Entry: void writeLengths$okhttp(okio.BufferedSink)
okhttp3.internal.Util
okhttp3.FormBody$Builder
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
okhttp3.Challenge: java.lang.String -deprecated_scheme()
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.ConnectionSpec: boolean supportsTlsExtensions
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
okhttp3.internal.connection.RealConnectionPool: boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
okhttp3.Response: okhttp3.Request request()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okhttp3.internal.ws.WebSocketWriter: WebSocketWriter(boolean,okio.BufferedSink,java.util.Random,boolean,boolean,long)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSink $cacheBody
com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.Util: java.util.TimeZone UTC
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
okhttp3.FormBody$Builder: java.util.List names
ninh.luyen.dds.datas.remotes.responses.Temp: double component6()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
okhttp3.internal.concurrent.TaskQueue$execute$1: boolean $cancelable
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
okhttp3.logging.LoggingEventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
com.google.android.material.internal.NavigationMenuItemView
okhttp3.Response: okhttp3.Handshake handshake
okhttp3.EventListener: okhttp3.EventListener NONE
androidx.core.content.FileProvider
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
okhttp3.Cache: int getWriteSuccessCount$okhttp()
okhttp3.internal.ws.WebSocketWriter: boolean noContextTakeover
com.google.gson.stream.JsonReader: char[] buffer
ninh.luyen.dds.datas.remotes.responses.City: int id
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: okio.Source $fileSource
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_AES_256_GCM_SHA384
okhttp3.internal.cache.DiskLruCache: boolean mostRecentTrimFailed
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.EndIconDelegate getEndIconDelegate()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.cache.DiskLruCache$snapshots$1: void remove()
okio.AsyncTimeout: okio.AsyncTimeout$Companion Companion
okhttp3.internal.platform.android.AndroidLogKt: int access$getAndroidLevel$p(java.util.logging.LogRecord)
okhttp3.Cache$Entry: okhttp3.Headers varyHeaders
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1(okhttp3.internal.cache.DiskLruCache$Editor,int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
okhttp3.internal.http2.Http2: int TYPE_SETTINGS
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.android.material.chip.Chip: float getIconEndPadding()
okhttp3.Cache$RealCacheRequest: void abort()
okhttp3.Response$Builder: void setCacheResponse$okhttp(okhttp3.Response)
com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_RSV2
androidx.lifecycle.LifecycleController$observer$1
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: ConscryptSocketAdapter$Companion$factory$1()
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
okhttp3.Response$Builder: void initExchange$okhttp(okhttp3.internal.connection.Exchange)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
okhttp3.internal.cache.DiskLruCache$Editor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.Temp temp
okhttp3.internal.http2.Http2Connection: long getReadBytesAcknowledged()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector
okhttp3.internal.ws.WebSocketProtocol: int B1_FLAG_MASK
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String ENCODING
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
okhttp3.internal.platform.android.SocketAdapter$DefaultImpls
okhttp3.logging.LoggingEventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
okhttp3.Response: okhttp3.ResponseBody -deprecated_body()
okhttp3.OkHttp: okhttp3.OkHttp INSTANCE
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
okhttp3.internal.http2.Http2Reader: void close()
okhttp3.internal.cache.DiskLruCache: boolean journalRebuildRequired()
okhttp3.internal.ws.WebSocketReader$FrameCallback
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
okhttp3.internal.http2.Http2Writer: void connectionPreface()
okhttp3.internal.http1.HeadersReader: java.lang.String readLine()
okhttp3.Handshake$Companion$handshake$1: Handshake$Companion$handshake$1(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
okhttp3.Request$Builder: okhttp3.RequestBody getBody$okhttp()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES
okhttp3.internal.http2.Http2Reader: void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool getConnectionPool$okhttp()
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] $VALUES
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $receivedCloseReason$inlined
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable
ninh.luyen.dds.datas.remotes.responses.Detail: int component7()
ninh.luyen.dds.ui.homes.HomeFragment
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Stream: long getWriteBytesTotal()
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String)
okhttp3.Challenge: java.nio.charset.Charset -deprecated_charset()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
okhttp3.internal.http2.Http2Stream$FramingSink: void setFinished(boolean)
okhttp3.internal.connection.RealCall: java.lang.Object clone()
okhttp3.internal.cache.DiskLruCache: long size
okhttp3.internal.ws.RealWebSocket: int sentPingCount
okhttp3.OkHttpClient: java.util.List networkInterceptors()
okhttp3.internal.http2.Http2Connection: void pushHeadersLater$okhttp(int,java.util.List,boolean)
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher dispatcher
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
okhttp3.OkHttpClient$Builder: int connectTimeout
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
okhttp3.Response$Builder: void setCode$okhttp(int)
okhttp3.internal.io.FileSystem: void delete(java.io.File)
okhttp3.MultipartBody$Part$Companion: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
okhttp3.Handshake: int hashCode()
okhttp3.internal.http2.Hpack$Reader: int readByte()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
okhttp3.Route: java.lang.String toString()
okhttp3.Response$Builder: int code
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
okhttp3.Cookie: boolean secure
ninh.luyen.dds.datas.remotes.responses.Weather
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()
okhttp3.internal.cache.DiskLruCache$Entry: void setLockingSourceCount$okhttp(int)
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
okhttp3.internal.connection.Exchange$RequestBodySink
okhttp3.internal.http.StatusLine: java.lang.String toString()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
okhttp3.internal.http2.Http2Stream$FramingSink: void close()
okhttp3.internal.connection.RealCall: java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
ninh.luyen.dds.datas.remotes.responses.FeelLike
okhttp3.internal.http2.Http2Connection
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: boolean equals(java.lang.Object)
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
okhttp3.internal.cache.DiskLruCache: void access$setMostRecentRebuildFailed$p(okhttp3.internal.cache.DiskLruCache,boolean)
com.google.gson.stream.JsonReader: java.lang.String nextUnquotedValue()
okhttp3.internal.ws.RealWebSocket: int receivedPongCount()
okhttp3.Response$Builder: void setProtocol$okhttp(okhttp3.Protocol)
okhttp3.Response: okhttp3.Request request
com.google.gson.stream.JsonWriter: boolean lenient
androidx.fragment.app.DialogFragment: DialogFragment()
okhttp3.internal.Util: java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object)
okhttp3.internal.http2.Http2Connection: long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
okhttp3.internal.cache.DiskLruCache: void access$setJournalWriter$p(okhttp3.internal.cache.DiskLruCache,okio.BufferedSink)
okhttp3.internal.http2.Http2Connection$Builder: java.lang.String connectionName
okhttp3.internal.authenticator.JavaNetAuthenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okio.Timeout: void waitUntilNotified(java.lang.Object)
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_CONNECTION_SPECS$cp()
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_DIRTY
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.util.Map)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
okhttp3.MultipartBody: java.util.List parts()
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: ConstraintAttribute$AttributeType(java.lang.String,int)
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.MessageInflater messageInflater
okio.ForwardingSink: void write(okio.Buffer,long)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $newPeerSettings$inlined
com.google.android.material.chip.Chip: void setChipTextResource(int)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
okhttp3.internal.http2.Http2Connection$Builder: boolean client
okhttp3.HttpUrl: java.lang.String scheme
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket)
okhttp3.Cache$RealCacheRequest: okio.Sink cacheOut
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: boolean closed
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.connection.Exchange$RequestBodySink: long bytesReceived
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors
okhttp3.logging.HttpLoggingInterceptor: void logHeader(okhttp3.Headers,int)
okhttp3.Handshake: java.util.List localCertificates()
okhttp3.CertificatePinner$check$1: CertificatePinner$check$1(okhttp3.CertificatePinner,java.util.List,java.lang.String)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLength(int)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
kotlin.coroutines.EmptyCoroutineContext: long serialVersionUID
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy compute()
okhttp3.Cookie: java.lang.String path()
kotlinx.coroutines.CoroutineStart: void isLazy$annotations()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
okhttp3.Request$Builder: Request$Builder()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.Util: long headersContentLength(okhttp3.Response)
ninh.luyen.dds.datas.remotes.responses.City: int timezone
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.http.StatusLine: int HTTP_MISDIRECTED_REQUEST
okhttp3.internal.Util: boolean assertionsEnabled
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
okhttp3.internal.connection.RealCall: boolean isCanceled()
okhttp3.Handshake
okhttp3.Authenticator: okhttp3.Authenticator$Companion Companion
okhttp3.HttpUrl$Builder: java.lang.String encodedFragment
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
okhttp3.ConnectionSpec: java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec)
okhttp3.CacheControl: boolean -deprecated_noCache()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: java.lang.Object invoke()
okhttp3.internal.concurrent.TaskQueue: boolean cancelAllAndDecide$okhttp()
okhttp3.TlsVersion: okhttp3.TlsVersion$Companion Companion
okhttp3.internal.platform.Jdk9Platform: boolean access$isAvailable$cp()
okhttp3.internal.http2.Settings: int MAX_HEADER_LIST_SIZE
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion Companion
okhttp3.internal.http2.Hpack$Writer: boolean emitDynamicTableSizeUpdate
okhttp3.Authenticator$Companion: Authenticator$Companion()
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
okhttp3.internal.http2.Hpack: int PREFIX_5_BITS
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: SearchResponseModel(ninh.luyen.dds.datas.remotes.responses.City,int,java.lang.String,double,java.util.List)
okhttp3.internal.ws.RealWebSocket: void tearDown()
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URL)
okhttp3.internal.Util: kotlin.text.Regex VERIFY_AS_IP_ADDRESS
com.google.gson.stream.JsonReader: java.lang.String nextQuotedValue(char)
okhttp3.internal.http2.PushObserver$Companion: okhttp3.internal.http2.PushObserver$Companion $$INSTANCE
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: WidgetRun$RunType(java.lang.String,int)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2Stream: boolean hasResponseHeaders
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type SLACK
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String getMain()
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response)
okhttp3.CacheControl: boolean -deprecated_noTransform()
okhttp3.internal.platform.android.AndroidLog: AndroidLog()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.gson.stream.MalformedJsonException
okhttp3.HttpUrl: java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile file
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(java.time.Duration)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okhttp3.Response: long receivedResponseAtMillis()
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.http.ExchangeCodec$Companion Companion
okhttp3.internal.Util: int and(byte,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
okhttp3.internal.cache.DiskLruCache$Entry: void setReadable$okhttp(boolean)
okhttp3.internal.http2.Http2Connection: int getNextStreamId$okhttp()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
okhttp3.internal.http.HttpHeaders: java.lang.String readToken(okio.Buffer)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.ExchangeFinder exchangeFinder
com.google.gson.stream.JsonReader$1
okhttp3.internal.ws.RealWebSocket: long CANCEL_AFTER_CLOSE_MILLIS
okhttp3.Response: okhttp3.Response cacheResponse()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
okhttp3.HttpUrl: java.util.List -deprecated_pathSegments()
androidx.appcompat.widget.ButtonBarLayout
com.google.gson.stream.JsonWriter: java.lang.String separator
okhttp3.internal.ws.WebSocketProtocol: int CLOSE_CLIENT_GOING_AWAY
okhttp3.CacheControl$Companion: int indexOfElement(java.lang.String,java.lang.String,int)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
okhttp3.internal.ws.RealWebSocket: int receivedPingCount
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver$Companion Companion
ninh.luyen.dds.datas.remotes.responses.Temp: double min
okhttp3.internal.connection.RealCall$AsyncCall: okhttp3.internal.connection.RealCall getCall()
okhttp3.HttpUrl: java.lang.String -deprecated_query()
okhttp3.internal.platform.AndroidPlatform
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
ninh.luyen.dds.datas.remotes.responses.Detail: java.lang.String toString()
kotlin.KotlinNullPointerException
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
okhttp3.CertificatePinner: void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0)
okhttp3.internal.http1.Http1ExchangeCodec: boolean isClosed()
okhttp3.HttpUrl: java.lang.String QUERY_ENCODE_SET
okhttp3.Cache$Entry: boolean isHttps()
okhttp3.internal.connection.RealCall$AsyncCall: java.util.concurrent.atomic.AtomicInteger getCallsPerHost()
okhttp3.internal.platform.Android10Platform: Android10Platform()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.PushObserver getPushObserver$okhttp()
okhttp3.internal.platform.Android10Platform: okhttp3.internal.platform.Android10Platform$Companion Companion
ninh.luyen.dds.datas.remotes.responses.City: City(ninh.luyen.dds.datas.remotes.responses.Coordinator,java.lang.String,int,java.lang.String,int,int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
com.google.gson.LongSerializationPolicy$1: com.google.gson.JsonElement serialize(java.lang.Long)
okhttp3.internal.connection.RealConnection: void startHttp2(int)
ninh.luyen.dds.datas.remotes.responses.Detail: int component8()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
okhttp3.internal.cache.DiskLruCache: java.lang.String MAGIC
okhttp3.CipherSuite$Companion: CipherSuite$Companion()
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int)
com.google.android.material.internal.ParcelableSparseIntArray: android.os.Parcelable$Creator CREATOR
androidx.activity.result.ActivityResultRegistry$1
okhttp3.Address: java.net.Proxy proxy()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder minWebSocketMessageToCompress(long)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
okhttp3.Request$Builder: java.util.Map getTags$okhttp()
okhttp3.Cache$CacheResponseBody: okio.BufferedSource bodySource
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.google.android.material.internal.NavigationMenuView
okhttp3.internal.ws.WebSocketReader: okio.BufferedSource source
okhttp3.internal.http2.Http2Writer: void rstStream(int,okhttp3.internal.http2.ErrorCode)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object)
okhttp3.OkHttpClient$Builder: void setWriteTimeout$okhttp(int)
okhttp3.internal.tls.CertificateChainCleaner$Companion: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
okhttp3.internal.ws.WebSocketProtocol: int PAYLOAD_LONG
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: boolean unsupported
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
okio.Timeout: okio.Timeout deadlineNanoTime(long)
okio.AsyncTimeout: okio.AsyncTimeout head
okhttp3.Dispatcher: int getMaxRequests()
okhttp3.ConnectionPool: int connectionCount()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: double message
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithoutIndexingNewName()
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: java.lang.String getQuery()
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.FeelLike getFeelLike()
okhttp3.internal.connection.RealCall: okhttp3.EventListener getEventListener$okhttp()
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: java.lang.String $name
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
okhttp3.internal.cache.DiskLruCache$Entry: long[] lengths
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
okhttp3.Cookie: boolean -deprecated_hostOnly()
com.google.android.material.internal.CheckableImageButton
okhttp3.internal.http2.Http2Connection$Builder: void setConnectionName$okhttp(java.lang.String)
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.SocketAdapter delegate
okhttp3.Address: okhttp3.Dns dns()
okhttp3.WebSocket: long queueSize()
okhttp3.logging.LoggingEventListener: LoggingEventListener(okhttp3.logging.HttpLoggingInterceptor$Logger,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.WebSocketWriter: boolean writerClosed
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.MultipartBody$Companion
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_get(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
okhttp3.EventListener: void cacheHit(okhttp3.Call,okhttp3.Response)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: boolean equals(java.lang.Object)
com.google.gson.stream.JsonReader: int PEEKED_FALSE
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
okhttp3.CacheControl$Builder: boolean immutable
okhttp3.Dns: okhttp3.Dns$Companion Companion
okhttp3.OkHttpClient$Builder: int getWriteTimeout$okhttp()
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: SearchCacheModel(java.lang.String,ninh.luyen.dds.datas.remotes.responses.SearchResponseModel)
okhttp3.internal.http2.Http2Writer: void frameHeader(int,int,int,int)
com.google.gson.stream.JsonReader: int PEEKED_UNQUOTED
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
okhttp3.Response$Builder
androidx.core.app.CoreComponentFactory
okhttp3.logging.HttpLoggingInterceptor: void redactHeader(java.lang.String)
com.google.gson.stream.JsonReader: int NUMBER_CHAR_SIGN
okhttp3.internal.connection.Exchange$ResponseBodySource: void close()
okhttp3.Response: okhttp3.Headers -deprecated_headers()
okhttp3.Address: okhttp3.Dns -deprecated_dns()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer getReceiveBuffer()
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean)
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: java.lang.String $name
okhttp3.internal.http2.Header: okio.ByteString component1()
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory -deprecated_sslSocketFactory()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
okhttp3.MediaType
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp()
okhttp3.internal.http.DatesKt: java.lang.String toHttpDateString(java.util.Date)
okhttp3.CertificatePinner: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.internal.http2.Http2Reader: void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: int getInsetTop()
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getLength()
okhttp3.internal.ws.MessageDeflaterKt: int LAST_OCTETS_COUNT_TO_REMOVE_AFTER_DEFLATION
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
okhttp3.internal.cache.DiskLruCache$Entry: okio.Source newSource(int)
okhttp3.Headers$Builder: java.util.List getNamesAndValues$okhttp()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
okhttp3.internal.http1.Http1ExchangeCodec: void finishRequest()
com.google.android.material.datepicker.DateValidatorPointBackward
okhttp3.internal.Util: okio.Options UNICODE_BOMS
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
ninh.luyen.dds.datas.remotes.responses.Weather: boolean equals(java.lang.Object)
okhttp3.Cache$CacheResponseBody: okhttp3.internal.cache.DiskLruCache$Snapshot getSnapshot()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
okhttp3.ConnectionSpec
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.lang.String)
okhttp3.Headers: java.lang.String toString()
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setUseSessionTickets
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean closed
okhttp3.internal.platform.Android10Platform: boolean access$isSupported$cp()
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy(okio.ByteString,okio.ByteString)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.InvokeOnCancelling: int _invoked
okhttp3.MediaType: java.lang.String parameter(java.lang.String)
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name
okhttp3.internal.http2.Hpack$Reader: okio.BufferedSource source
okhttp3.internal.http2.Http2: int FLAG_PADDED
okhttp3.Handshake$peerCertificates$2
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.MultipartBody$Builder: okhttp3.MediaType type
com.google.android.material.snackbar.Snackbar$SnackbarLayout
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
okhttp3.internal.ws.WebSocketReader: boolean isFinalFrame
androidx.lifecycle.SavedStateHandleController$OnRecreation
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
okio.Timeout: long deadlineNanoTime
androidx.appcompat.widget.ActionMenuPresenter$SavedState
okio.ForwardingSource: java.lang.String toString()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
okhttp3.Cache$Entry: okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot)
okhttp3.MediaType: okhttp3.MediaType get(java.lang.String)
okhttp3.internal.Internal: okhttp3.Headers$Builder addHeaderLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
okhttp3.internal.cache.DiskLruCache$Snapshot: long sequenceNumber
okio.Timeout: boolean hasDeadline()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean invokeStartEvent
org.koin.core.definition.Kind: org.koin.core.definition.Kind[] values()
okhttp3.internal.cache2.Relay: okio.ByteString metadata()
okhttp3.CertificatePinner$Pin: okio.ByteString hash
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URI)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar
okhttp3.MultipartBody: long contentLength
okhttp3.internal.http1.Http1ExchangeCodec: void cancel()
okio.ForwardingSink: okio.Sink delegate()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Writer getWriter()
okhttp3.internal.http2.Http2Connection$Builder: boolean getClient$okhttp()
okhttp3.internal.cache2.Relay: okio.ByteString PREFIX_CLEAN
okhttp3.internal.http.ExchangeCodec: void writeRequestHeaders(okhttp3.Request)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] $VALUES
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
ninh.luyen.dds.datas.remotes.responses.Temp
kotlin.coroutines.CombinedContext$Serialized: long serialVersionUID
okhttp3.internal.connection.RealConnection: okio.BufferedSource source
okhttp3.Request$Builder: okhttp3.Request build()
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
okhttp3.Cache$urls$1
okhttp3.internal.ws.WebSocketWriter: java.util.Random getRandom()
okhttp3.internal.cache2.Relay$RelaySource: long sourcePos
okhttp3.internal.platform.AndroidPlatform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
okhttp3.CipherSuite: java.lang.String -deprecated_javaName()
okhttp3.internal.http2.Http2Reader$Companion: java.util.logging.Logger getLogger()
com.google.gson.stream.JsonScope: int EMPTY_OBJECT
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$ReaderRunnable getReaderRunnable()
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.RequestBody$Companion$toRequestBody$2: long contentLength()
okhttp3.internal.connection.Exchange$RequestBodySink: boolean closed
okhttp3.internal.ws.WebSocketExtensions: boolean component1()
okhttp3.OkHttpClient$Builder: java.net.Proxy proxy
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.BufferedSource $source
okhttp3.Cache: okhttp3.internal.cache.DiskLruCache cache
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode,java.io.IOException)
okhttp3.OkHttpClient: long minWebSocketMessageToCompress
androidx.core.app.ComponentActivity: ComponentActivity()
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
okhttp3.internal.cache2.Relay$RelaySource: void close()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
okhttp3.Request: java.lang.String method
okhttp3.OkHttpClient: int -deprecated_connectTimeoutMillis()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite init(java.lang.String,int)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall getCall$okhttp()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)
okhttp3.RequestBody$Companion
okhttp3.Cache$urls$1: java.util.Iterator delegate
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.OkHttpClient: java.util.List connectionSpecs
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
okhttp3.internal.http2.Http2Connection: java.lang.String connectionName
okhttp3.internal.ws.RealWebSocket$connect$1
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
ninh.luyen.dds.datas.cache.models.SearchCache: java.lang.String toString()
okhttp3.internal.platform.Platform: void access$setPlatform$cp(okhttp3.internal.platform.Platform)
okhttp3.internal.Util: void writeMedium(okio.BufferedSink,int)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion
okhttp3.OkHttpClient$Builder: boolean getFollowSslRedirects$okhttp()
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner$Companion Companion
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
okhttp3.HttpUrl$Companion: void toPathString$okhttp(java.util.List,java.lang.StringBuilder)
ninh.luyen.dds.datas.cache.models.SearchCache: java.lang.String component1()
okhttp3.Response: java.lang.String toString()
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallback
okhttp3.Dns
okhttp3.internal.platform.android.AndroidLog: java.lang.String loggerTag(java.lang.String)
okio.ForwardingSource: okio.Timeout timeout()
com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()
com.google.android.material.chip.Chip: void setChecked(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
ninh.luyen.dds.datas.remotes.responses.City: ninh.luyen.dds.datas.remotes.responses.City copy(ninh.luyen.dds.datas.remotes.responses.Coordinator,java.lang.String,int,java.lang.String,int,int)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory access$getSslSocketFactoryOrNull$p(okhttp3.OkHttpClient)
okhttp3.internal.connection.RealCall: java.lang.String redactedUrl$okhttp()
okhttp3.Request: java.lang.String method()
okhttp3.internal.ws.RealWebSocket: void cancel()
okhttp3.internal.ws.WebSocketExtensions: boolean clientNoContextTakeover
com.google.android.material.stateful.ExtendableSavedState
okhttp3.MultipartBody$Companion: void appendQuotedString$okhttp(java.lang.StringBuilder,java.lang.String)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.String getSelected()
okhttp3.Cache: void trackConditionalCacheHit$okhttp()
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
okhttp3.Response$Builder: okhttp3.Response networkResponse
okhttp3.MultipartBody$Part: okhttp3.Headers headers
okhttp3.internal.cache.CacheStrategy$Factory: long receivedResponseMillis
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
okhttp3.EventListener$Companion
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
okhttp3.internal.http2.Http2Stream: long readBytesTotal
okhttp3.internal.cache.DiskLruCache$Entry
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible(javax.net.ssl.SSLSocket)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
okhttp3.internal.http2.Settings: boolean isSet(int)
okhttp3.FormBody$Companion
okhttp3.CertificatePinner$Pin: java.lang.String pattern
com.google.gson.internal.LinkedTreeMap: java.lang.Object writeReplace()
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
okhttp3.internal.connection.RealConnection: void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException)
okhttp3.internal.cache2.Relay: void access$writeHeader(okhttp3.internal.cache2.Relay,okio.ByteString,long,long)
okhttp3.internal.http2.Http2: okhttp3.internal.http2.Http2 INSTANCE
com.google.android.material.timepicker.ChipTextInputComboView
okhttp3.CacheControl: boolean -deprecated_onlyIfCached()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.Lambda: int getArity()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getClosed$okhttp()
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.platform.AndroidPlatform$Companion
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1
okhttp3.internal.connection.RealCall$timeout$1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.platform.AndroidPlatform$Companion: boolean isSupported()
okhttp3.internal.connection.ExchangeFinder: boolean sameHostAndPort(okhttp3.HttpUrl)
ninh.luyen.dds.datas.remotes.responses.Temp: double morn
okhttp3.RequestBody$Companion$toRequestBody$1: RequestBody$Companion$toRequestBody$1(okio.ByteString,okhttp3.MediaType)
okhttp3.internal.http2.Http2Writer$Companion
ninh.luyen.dds.datas.remotes.responses.FeelLike: double getEve()
okhttp3.internal.ws.RealWebSocket: boolean failed
okhttp3.internal.platform.android.DeferredSocketAdapter
okhttp3.HttpUrl: boolean isHttps
okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,okhttp3.internal.http2.Settings)
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$LongRef $delta$inlined
okhttp3.internal.http.ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
okhttp3.internal.connection.ConnectionSpecSelector: boolean isFallbackPossible
okhttp3.Cookie$Companion
okhttp3.Challenge: java.lang.String scheme
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory
okhttp3.ConnectionSpec: boolean isTls
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
okhttp3.Handshake: java.util.List localCertificates
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider
okhttp3.logging.LoggingEventListener: void requestHeadersStart(okhttp3.Call)
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
okhttp3.CacheControl$Builder: int minFreshSeconds
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
okhttp3.internal.platform.OpenJSSEPlatform: boolean access$isSupported$cp()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
okhttp3.internal.http2.Header: java.lang.String TARGET_METHOD_UTF8
okhttp3.internal.cache.DiskLruCache: boolean closed
okhttp3.Response$Builder: void setSentRequestAtMillis$okhttp(long)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner INSTANCE
okhttp3.internal.connection.Exchange
okhttp3.internal.http2.Http2ExchangeCodec$Companion
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
ninh.luyen.dds.datas.remotes.responses.City: int population
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okhttp3.internal.cache.CacheRequest $cacheRequest
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl get(java.net.URI)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: okhttp3.internal.http2.Settings $settings$inlined
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.gson.stream.JsonReader: void skipToEndOfLine()
okhttp3.Response$Builder: okhttp3.Headers$Builder headers
okhttp3.internal.ws.MessageDeflater: MessageDeflater(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
okhttp3.MultipartReader$Companion: MultipartReader$Companion()
okhttp3.internal.connection.RealCall: boolean requestBodyOpen
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setStreamId(int)
okhttp3.internal.connection.Exchange$RequestBodySink: void flush()
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_WRITING_REQUEST_BODY
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers)
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.ws.WebSocketWriter: okhttp3.internal.ws.MessageDeflater messageDeflater
okhttp3.internal.http2.ErrorCode
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.google.gson.stream.JsonReader: boolean isLenient()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)
okhttp3.internal.platform.android.AndroidSocketAdapter: AndroidSocketAdapter(java.lang.Class)
androidx.lifecycle.SavedStateHandleController
okhttp3.MultipartBody: java.lang.String boundary()
okhttp3.internal.connection.RealCall: java.util.concurrent.atomic.AtomicBoolean executed
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: long runOnce()
com.google.android.material.transformation.FabTransformationBehavior
okhttp3.internal.Util: java.lang.String toHostHeader(okhttp3.HttpUrl,boolean)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)
androidx.activity.ImmLeaksCleaner
okhttp3.Cache: void initialize()
okhttp3.ConnectionPool: okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
okhttp3.CacheControl: boolean immutable()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketReader reader
okhttp3.ResponseBody$Companion: ResponseBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Response: okhttp3.Response -deprecated_cacheResponse()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.gson.stream.JsonReader: double nextDouble()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
okhttp3.Cache$Companion: java.lang.String key(okhttp3.HttpUrl)
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion: java.lang.String binarySearch(byte[],byte[][],int)
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
okhttp3.internal.http2.Hpack: Hpack()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newChunkedSource(okhttp3.HttpUrl)
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory playProviderFactory
com.google.gson.stream.JsonReader: void close()
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger logger
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long)
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: java.lang.String $name
okhttp3.internal.concurrent.TaskRunner$RealBackend
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
okhttp3.internal.concurrent.Task: long getNextExecuteNanoTime$okhttp()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
ninh.luyen.dds.datas.remotes.responses.FeelLike: double eve
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSource source
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
ninh.luyen.dds.datas.remotes.responses.Temp: double getMin()
okhttp3.Cookie$Companion: boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
okhttp3.Cache: void update$okhttp(okhttp3.Response,okhttp3.Response)
okhttp3.internal.cache.DiskLruCache$cleanupTask$1
okhttp3.internal.platform.OpenJSSEPlatform$Companion: boolean isSupported()
okhttp3.internal.http.RealResponseBody: long contentLength
okhttp3.internal.concurrent.Task: okhttp3.internal.concurrent.TaskQueue queue
okhttp3.internal.ws.MessageInflaterKt
androidx.core.widget.NestedScrollView$SavedState
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2
okhttp3.internal.http.StatusLine$Companion: StatusLine$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.MediaType: java.lang.String[] parameterNamesAndValues
androidx.core.app.RemoteActionCompat
okhttp3.internal.http2.Http2Connection: long readBytesAcknowledged
okhttp3.internal.ws.WebSocketExtensions: boolean serverNoContextTakeover
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator authenticator
okhttp3.HttpUrl: java.util.List pathSegments
okhttp3.internal.connection.Exchange$RequestBodySink: void close()
okhttp3.Challenge: java.util.Map authParams()
okhttp3.internal.http2.Hpack: int PREFIX_6_BITS
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.Exchange exchange
com.google.android.material.datepicker.DateSelector
okhttp3.OkHttpClient: int readTimeoutMillis()
okhttp3.Headers: okhttp3.Headers$Companion Companion
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
okhttp3.internal.http2.Settings: int size()
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
okhttp3.Interceptor$Chain: int readTimeoutMillis()
okhttp3.MultipartReader$PartSource: okio.Timeout timeout()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
okhttp3.internal.http.ExchangeCodec$Companion: int DISCARD_STREAM_TIMEOUT_MILLIS
okhttp3.internal.cache.DiskLruCache: void readJournalLine(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.Temp: java.lang.String getAvg()
okhttp3.RequestBody$Companion: RequestBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Hpack$Reader: int maxDynamicTableByteCount
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
kotlin.collections.EmptyList: long serialVersionUID
okhttp3.internal.tls.CertificateChainCleaner$Companion: CertificateChainCleaner$Companion()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
okhttp3.internal.connection.RouteSelector: okhttp3.EventListener eventListener
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
okhttp3.internal.cache2.Relay: int sourceCount
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
okhttp3.internal.http2.Huffman$Node: int terminalBitCount
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.chip.Chip: float getCloseIconSize()
okhttp3.RequestBody$Companion$toRequestBody$1
okhttp3.OkHttpClient$Builder: java.util.List interceptors
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
okhttp3.HttpUrl: java.lang.String USERNAME_ENCODE_SET
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.OkHttpClient: boolean -deprecated_retryOnConnectionFailure()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
okhttp3.internal.Util: okhttp3.Headers toHeaders(java.util.List)
ninh.luyen.dds.datas.cache.models.SearchCache: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: java.lang.String VERSION_1
okhttp3.internal.ws.RealWebSocket: void access$setExtensions$p(okhttp3.internal.ws.RealWebSocket,okhttp3.internal.ws.WebSocketExtensions)
okhttp3.internal.ws.WebSocketWriter: void close()
okhttp3.Response$Builder: void setBody$okhttp(okhttp3.ResponseBody)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
okhttp3.Request: java.util.Map getTags$okhttp()
okhttp3.internal.concurrent.TaskQueue: java.lang.String name
com.google.gson.stream.JsonWriter: int stackSize
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
okhttp3.internal.http2.Hpack: java.util.Map nameToFirstIndex()
okhttp3.HttpUrl$Companion: HttpUrl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.ReportFragment$LifecycleCallbacks
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
okhttp3.internal.platform.Platform$Companion: Platform$Companion()
okhttp3.EventListener$Factory
okhttp3.CacheControl: boolean onlyIfCached()
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.RealCall getCall$okhttp()
okhttp3.HttpUrl: boolean isHttps()
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
androidx.viewpager.widget.ViewPager$SavedState
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_FLAG_CONTROL
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1: okhttp3.internal.cache.DiskLruCache$Editor this$0
com.google.android.material.chip.Chip: void setIconEndPadding(float)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType
okhttp3.internal.connection.RealConnection: java.util.List getCalls()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
okhttp3.Response$Builder: void setHandshake$okhttp(okhttp3.Handshake)
ninh.luyen.dds.datas.remotes.responses.FeelLike: double day
okhttp3.Handshake: java.util.List -deprecated_peerCertificates()
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.Address: java.util.List connectionSpecs
okhttp3.internal.http.RealInterceptorChain: int index
okhttp3.ConnectionSpec: int hashCode()
okhttp3.internal.http2.Http2Stream$FramingSink: void emitFrame(boolean)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
okhttp3.internal.http1.HeadersReader: HeadersReader(okio.BufferedSource)
okhttp3.CacheControl: int maxAgeSeconds()
okhttp3.Headers: java.lang.String get(java.lang.String)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: long read(okio.Buffer,long)
kotlin.jvm.internal.CallableReference: java.lang.String signature
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.Exchange: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.internal.platform.android.ConscryptSocketAdapter: ConscryptSocketAdapter()
okhttp3.internal.http2.Hpack$Writer: void insertIntoDynamicTable(okhttp3.internal.http2.Header)
okhttp3.internal.platform.OpenJSSEPlatform$Companion: OpenJSSEPlatform$Companion()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1
okhttp3.OkHttpClient$Builder: void setSslSocketFactoryOrNull$okhttp(javax.net.ssl.SSLSocketFactory)
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Settings $settings$inlined
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
okhttp3.Cookie: boolean hostOnly
okhttp3.MediaType: java.util.regex.Pattern access$getTYPE_SUBTYPE$cp()
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: long runOnce()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
okhttp3.internal.platform.ConscryptPlatform: java.security.Provider provider
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
okhttp3.HttpUrl$Builder: void resolvePath(java.lang.String,int,int)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.google.gson.stream.JsonReader: void skipUnquotedValue()
okhttp3.Handshake: okhttp3.TlsVersion -deprecated_tlsVersion()
okhttp3.internal.connection.RealConnection: int MAX_TUNNEL_ATTEMPTS
com.google.gson.stream.JsonWriter: boolean htmlSafe
okhttp3.MultipartReader: okhttp3.MultipartReader$Companion Companion
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.ForwardingTimeout timeout
okhttp3.MultipartBody$Part
okhttp3.internal.cache.FaultHidingSink: void flush()
okhttp3.internal.http2.Http2: java.lang.String formattedType$okhttp(int)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec RESTRICTED_TLS
okhttp3.ResponseBody$BomAwareReader: void close()
okhttp3.internal.http2.Http2Connection: java.util.Set currentPushRequests
okhttp3.RequestBody$Companion$asRequestBody$1: java.io.File $this_asRequestBody
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
com.google.android.material.chip.ChipGroup
com.google.android.material.chip.Chip: void setMaxLines(int)
ninh.luyen.dds.datas.remotes.responses.Temp: double getMax()
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addInterceptor(kotlin.jvm.functions.Function1)
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level HEADERS
okhttp3.internal.http1.Http1ExchangeCodec: okio.Source newFixedLengthSource(long)
okhttp3.internal.ws.WebSocketReader: okio.Buffer controlFrameBuffer
okhttp3.Response$Builder: okhttp3.Protocol protocol
okhttp3.internal.platform.android.ConscryptSocketAdapter: okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion Companion
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $cancelable
okhttp3.logging.LoggingEventListener: void logWithTime(java.lang.String)
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
okhttp3.internal.HostnamesKt: java.lang.String toCanonicalHost(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.FeelLike: double component2()
okhttp3.Cookie: java.lang.String toString()
okhttp3.internal.http2.Http2Stream: void addBytesToWriteWindow(long)
okhttp3.OkHttpClient$Builder: long getMinWebSocketMessageToCompress$okhttp()
okhttp3.Request: okhttp3.CacheControl lazyCacheControl
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
okhttp3.internal.connection.RouteException: java.io.IOException lastConnectException
okio.ByteString: long serialVersionUID
okhttp3.internal.ws.WebSocketExtensions
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode$Companion Companion
okhttp3.internal.http.ExchangeCodec$Companion: okhttp3.internal.http.ExchangeCodec$Companion $$INSTANCE
okhttp3.Challenge: boolean equals(java.lang.Object)
okhttp3.RequestBody$Companion$toRequestBody$2: byte[] $this_toRequestBody
org.koin.core.logger.Level
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: boolean isSupported()
okhttp3.internal.cache.DiskLruCache: boolean access$getInitialized$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.MultipartReader$Part
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
kotlin.reflect.KVisibility: KVisibility(java.lang.String,int)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink getSink()
okhttp3.internal.http2.Header: int hpackSize
okhttp3.internal.ws.RealWebSocket$Close: long getCancelAfterCloseMillis()
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1
androidx.annotation.Keep
okio.ForwardingSink: void flush()
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
okhttp3.internal.ws.RealWebSocket$WriterTask: okhttp3.internal.ws.RealWebSocket this$0
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
okhttp3.internal.connection.ExchangeFinder: okhttp3.internal.connection.RealCall call
okhttp3.MultipartReader$PartSource: okio.Timeout timeout
okhttp3.EventListener: void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List)
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.OkHttpClient client
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP
okhttp3.Response: java.lang.String header(java.lang.String)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type UNKNOWN
okhttp3.Response: int code()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
okhttp3.HttpUrl: java.lang.String FORM_ENCODE_SET
okhttp3.internal.cache.DiskLruCache$Snapshot: java.util.List sources
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
okhttp3.internal.connection.ExchangeFinder: boolean retryAfterFailure()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
kotlin.collections.EmptyList: java.lang.Object readResolve()
okhttp3.Challenge: java.lang.String realm()
okhttp3.HttpUrl$Builder: void setPort$okhttp(int)
okhttp3.logging.HttpLoggingInterceptor$Level
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
okhttp3.Route: int hashCode()
okhttp3.internal.ws.WebSocketWriter: void writePong(okio.ByteString)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: Http2Connection$writeSynResetLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode)
okhttp3.TlsVersion: okhttp3.TlsVersion[] $VALUES
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToClose$inlined
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type RIGHT
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long runOnce()
okhttp3.Cache$Companion: Cache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.concurrent.TaskQueue cleanupQueue
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.HttpUrl: java.lang.String redact()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.HttpUrl: java.lang.String PASSWORD_ENCODE_SET
com.google.gson.FieldNamingPolicy$2
androidx.appcompat.widget.ContentFrameLayout
okhttp3.internal.cache2.Relay: void setComplete(boolean)
okhttp3.internal.cache2.Relay: Relay(java.io.RandomAccessFile,okio.Source,long,okio.ByteString,long,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
okhttp3.ResponseBody$BomAwareReader: java.nio.charset.Charset charset
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings: int[] $EnumSwitchMapping$0
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
okhttp3.internal.cache.DiskLruCache
okhttp3.internal.proxy.NullProxySelector: NullProxySelector()
com.google.android.material.chip.Chip
okhttp3.Address: okhttp3.HttpUrl -deprecated_url()
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: RouteSelector$resetNextProxy$1(okhttp3.internal.connection.RouteSelector,java.net.Proxy,okhttp3.HttpUrl)
okhttp3.OkHttpClient$Builder: okhttp3.Cache getCache$okhttp()
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
okhttp3.Cache: int networkCount()
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
okhttp3.Cache$Entry: long receivedResponseMillis
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
okhttp3.internal.Util: java.lang.String userAgent
okhttp3.internal.ws.RealWebSocket: boolean processNextFrame()
okhttp3.internal.http2.Http2Reader$Companion: Http2Reader$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2ExchangeCodec: Http2ExchangeCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection)
okhttp3.ConnectionSpec: java.util.List cipherSuites()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.MultipartBody: okhttp3.MediaType contentType
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
okhttp3.Cache: int hitCount()
okhttp3.internal.platform.android.AndroidLogHandler: void flush()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
okhttp3.Cache: void flush()
okhttp3.Handshake: java.security.Principal peerPrincipal()
okhttp3.internal.connection.RealCall: boolean canceled
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
okhttp3.internal.concurrent.Task: void setQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
okhttp3.internal.connection.RouteSelector$Companion
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue writerQueue
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor()
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion
okhttp3.HttpUrl$Companion: void toQueryString$okhttp(java.util.List,java.lang.StringBuilder)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.internal.http2.Http2Connection$Builder: void setClient$okhttp(boolean)
okhttp3.internal.http2.Http2Stream: long getReadBytesAcknowledged()
okhttp3.internal.concurrent.TaskQueue: boolean getCancelActiveTask$okhttp()
okhttp3.internal.platform.ConscryptPlatform$Companion
okhttp3.internal.http.ExchangeCodec: void cancel()
okhttp3.internal.http2.Http2Stream$StreamTimeout
okhttp3.internal.http2.Http2: java.lang.String formatFlags(int,int)
okhttp3.HttpUrl: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Credentials: okhttp3.Credentials INSTANCE
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
okhttp3.internal.http.RealInterceptorChain
okhttp3.internal.cache2.Relay: okio.ByteString metadata
okhttp3.internal.Util: java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS
okhttp3.CipherSuite: java.util.Comparator ORDER_BY_NAME
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: long runOnce()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
kotlinx.coroutines.android.AndroidExceptionPreHandler: kotlin.reflect.KProperty[] $$delegatedProperties
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE_LIMIT
okhttp3.internal.connection.RealCall: void exitNetworkInterceptorExchange$okhttp(boolean)
okhttp3.internal.http2.Settings: int get(int)
okhttp3.internal.http2.Http2: int FLAG_END_STREAM
okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner getCertificatePinner$okhttp()
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1
kotlin.UninitializedPropertyAccessException
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1: DiskLruCache$newJournalWriter$faultHidingSink$1(okhttp3.internal.cache.DiskLruCache)
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.Temp getTemp()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader reader
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
ninh.luyen.dds.datas.remotes.responses.Detail: java.util.List getWeather()
okhttp3.Cache$Entry$Companion: Cache$Entry$Companion()
okhttp3.internal.http2.Http2Reader: okhttp3.internal.http2.Http2Reader$Companion Companion
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
io.reactivex.exceptions.MissingBackpressureException
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
okhttp3.Cache$RealCacheRequest: okhttp3.Cache this$0
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean isSupported()
okhttp3.internal.http1.HeadersReader: int HEADER_LIMIT
okhttp3.Cache$Companion: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
okhttp3.ResponseBody$Companion
kotlin.coroutines.CombinedContext$Serialized: java.lang.Object readResolve()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
okhttp3.internal.cache.CacheRequest: void abort()
okhttp3.internal.connection.RealConnection: boolean getNoNewExchanges()
okhttp3.Cache$Entry: void writeTo(okhttp3.internal.cache.DiskLruCache$Editor)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
okhttp3.ConnectionPool: int idleConnectionCount()
org.koin.core.error.DefinitionParameterException
com.google.android.material.datepicker.CompositeDateValidator: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2Connection: void start(boolean,okhttp3.internal.concurrent.TaskRunner)
okhttp3.internal.cache.CacheStrategy: okhttp3.Response getCacheResponse()
okhttp3.internal.ws.MessageInflater
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink journalWriter
okhttp3.OkHttpClient$Builder: void setPingInterval$okhttp(int)
okhttp3.internal.platform.Jdk9Platform: okhttp3.internal.platform.Jdk9Platform$Companion Companion
okhttp3.internal.platform.android.AndroidLog: java.util.concurrent.CopyOnWriteArraySet configuredLoggers
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
ninh.luyen.dds.NewsApplication: NewsApplication()
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer hpackWriter
okhttp3.internal.ws.MessageDeflater: java.util.zip.Deflater deflater
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion()
com.google.gson.FieldNamingPolicy: java.lang.String translateName(java.lang.reflect.Field)
com.google.gson.stream.JsonWriter: int[] stack
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
okhttp3.internal.cache.DiskLruCache$newJournalWriter$faultHidingSink$1
ninh.luyen.dds.datas.remotes.responses.City: java.lang.String country
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.io.FileSystem fileSystem
okhttp3.Request: java.lang.String header(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
okhttp3.internal.http2.Header: java.lang.String TARGET_SCHEME_UTF8
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type VERTICAL_DIMENSION
okhttp3.internal.connection.RealConnectionPool: void put(okhttp3.internal.connection.RealConnection)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $streamsToNotify$inlined
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: boolean hasMoreChunks
okhttp3.internal.cache.DiskLruCache$Entry$newSource$1: DiskLruCache$Entry$newSource$1(okhttp3.internal.cache.DiskLruCache$Entry,okio.Source,okio.Source)
okhttp3.internal.http2.Http2: int TYPE_PUSH_PROMISE
okhttp3.internal.connection.RealCall: okhttp3.OkHttpClient client
okhttp3.Interceptor$Chain
okhttp3.internal.http.RealResponseBody: java.lang.String contentTypeString
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
okhttp3.internal.http2.Http2Reader$ContinuationSource: Http2Reader$ContinuationSource(okio.BufferedSource)
okhttp3.MultipartBody: byte[] CRLF
okhttp3.internal.http1.HeadersReader: okio.BufferedSource getSource()
okhttp3.internal.http2.Http2Connection: long access$getWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.android.material.timepicker.TimeModel
okhttp3.Cache$Entry: java.lang.String RECEIVED_MILLIS
okhttp3.internal.connection.RealConnection: int refusedStreamCount
okhttp3.OkHttpClient: int writeTimeoutMillis()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
androidx.appcompat.widget.AlertDialogLayout
okhttp3.internal.ws.RealWebSocket$WriterTask: RealWebSocket$WriterTask(okhttp3.internal.ws.RealWebSocket)
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Http2: int TYPE_PRIORITY
okhttp3.internal.connection.RealConnectionPool: int idleConnectionCount()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketExtensions $extensions$inlined
okhttp3.MediaType: boolean equals(java.lang.Object)
com.google.gson.stream.JsonWriter: void beforeValue()
okhttp3.internal.connection.ExchangeFinder: int otherFailureCount
okhttp3.OkHttpClient: int -deprecated_readTimeoutMillis()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,okhttp3.MediaType,byte[],int,int,int,java.lang.Object)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: boolean $cancelable
okhttp3.WebSocketListener: WebSocketListener()
okhttp3.internal.http2.Http2Writer: void applyAndAckSettings(okhttp3.internal.http2.Settings)
okhttp3.Response$Builder: okhttp3.Handshake getHandshake$okhttp()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Cache cache
okhttp3.internal.concurrent.TaskQueue: java.util.List futureTasks
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
okhttp3.internal.cache.DiskLruCache: void access$setCivilizedFileSystem$p(okhttp3.internal.cache.DiskLruCache,boolean)
okhttp3.Route: java.net.Proxy -deprecated_proxy()
okhttp3.internal.connection.RealCall$AsyncCall
okhttp3.internal.http.ExchangeCodec: okhttp3.Headers trailers()
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection$Companion Companion
okhttp3.RequestBody$Companion: okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,java.lang.String,okhttp3.MediaType,int,java.lang.Object)
okhttp3.CertificatePinner$check$1: java.lang.String $hostname
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List cleanFiles
okhttp3.CacheControl: okhttp3.CacheControl$Companion Companion
okhttp3.internal.http2.Settings: int MAX_FRAME_SIZE
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object getCallStackTrace()
okhttp3.internal.platform.OpenJSSEPlatform: OpenJSSEPlatform()
okhttp3.internal.ws.WebSocketReader: void readHeader()
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_TEXT
okhttp3.CertificatePinner$Pin: java.lang.String getPattern()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
okhttp3.internal.http1.Http1ExchangeCodec$Companion
okhttp3.CertificatePinner: okio.ByteString sha256Hash(java.security.cert.X509Certificate)
okhttp3.Dispatcher: java.lang.Runnable getIdleCallback()
okhttp3.internal.concurrent.TaskRunner$runnable$1: void run()
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object readResolve()
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String)
okhttp3.Handshake$Companion$get$1: java.lang.Object invoke()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class paramClass
okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
okhttp3.logging.LoggingEventListener: void cacheHit(okhttp3.Call,okhttp3.Response)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
okhttp3.Dispatcher: int runningCallsCount()
okhttp3.MediaType$Companion: MediaType$Companion()
okhttp3.CacheControl: int -deprecated_sMaxAgeSeconds()
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
okhttp3.internal.concurrent.TaskRunner: TaskRunner(okhttp3.internal.concurrent.TaskRunner$Backend)
androidx.fragment.app.Fragment$SavedState
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier: okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier INSTANCE
okhttp3.internal.ws.RealWebSocket: long queueSize()
okhttp3.internal.concurrent.TaskRunner: void afterRun(okhttp3.internal.concurrent.Task,long)
okhttp3.Protocol: java.lang.String protocol
okhttp3.internal.connection.RealCall: okhttp3.Response getResponseWithInterceptorChain$okhttp()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion: okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager)
okhttp3.MultipartBody$Builder
okhttp3.internal.ws.WebSocketExtensions: boolean equals(java.lang.Object)
okhttp3.Call$Factory
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okio.ByteString $pong$inlined
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque access$getMessageAndCloseQueue$p(okhttp3.internal.ws.RealWebSocket)
okhttp3.internal.http2.Http2Reader
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.google.android.material.internal.CheckableImageButton$SavedState
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: boolean $cancelable
okhttp3.internal.http2.Hpack$Writer: int maxDynamicTableByteCount
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.internal.http2.Http2Stream: long EMIT_BUFFER_SIZE
okhttp3.Cookie$Builder: boolean secure
okhttp3.Response$Builder: long getSentRequestAtMillis$okhttp()
ninh.luyen.dds.datas.remotes.responses.Temp: int hashCode()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
okhttp3.internal.concurrent.TaskQueue: boolean getShutdown$okhttp()
okhttp3.internal.ws.RealWebSocket: int receivedPongCount
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_OPEN_RESPONSE_BODY
okhttp3.internal.concurrent.Task: java.lang.String name
okhttp3.Response$Builder: long receivedResponseAtMillis
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
okhttp3.internal.cache2.Relay: okio.Source newSource()
okhttp3.internal.http2.Http2Connection$Companion: Http2Connection$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
ninh.luyen.dds.datas.remotes.responses.Temp: double component5()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.gson.stream.JsonReader: void push(int)
okhttp3.CacheControl: boolean noTransform()
com.google.gson.LongSerializationPolicy$1: LongSerializationPolicy$1(java.lang.String,int)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: Http1ExchangeCodec$ChunkedSink(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.MultipartReader: void access$setCurrentPart$p(okhttp3.MultipartReader,okhttp3.MultipartReader$PartSource)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
okhttp3.Cookie$Builder: okhttp3.Cookie build()
okhttp3.internal.ws.RealWebSocket: int receivedCloseCode
okhttp3.OkHttpClient: okhttp3.Dns dns()
okhttp3.OkHttpClient: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
okhttp3.EventListener: void canceled(okhttp3.Call)
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: boolean onData(int,okio.BufferedSource,int,boolean)
okhttp3.internal.concurrent.TaskQueue: void setShutdown$okhttp(boolean)
okhttp3.internal.cache2.FileOperator
okhttp3.internal.connection.Exchange$ResponseBodySource: long bytesReceived
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
okhttp3.internal.cache2.Relay$RelaySource: okhttp3.internal.cache2.Relay this$0
com.google.android.material.bottomappbar.BottomAppBar$SavedState
com.google.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED
okhttp3.internal.ws.RealWebSocket$Message: okio.ByteString getData()
okhttp3.MultipartReader$PartSource: MultipartReader$PartSource(okhttp3.MultipartReader)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int getStreamId()
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String component1()
okhttp3.internal.cache.FaultHidingSink: void write(okio.Buffer,long)
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
okhttp3.internal.http2.Header$Companion
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform get()
okhttp3.Address: java.net.Proxy proxy
okhttp3.internal.platform.OpenJSSEPlatform
okhttp3.internal.concurrent.TaskQueue: void schedule(okhttp3.internal.concurrent.Task,long)
com.google.android.material.button.MaterialButtonToggleGroup: java.lang.CharSequence getAccessibilityClassName()
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.ws.WebSocketExtensions: boolean unknownValues
okhttp3.internal.http2.Settings$Companion: Settings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings getPeerSettings()
okhttp3.Handshake$Companion: okhttp3.Handshake -deprecated_get(javax.net.ssl.SSLSession)
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1: okhttp3.internal.connection.RealConnectionPool this$0
okhttp3.Cookie: java.lang.String name()
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1()
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
okhttp3.Cookie$Builder: java.lang.String domain
com.google.android.material.chip.ChipGroup: ChipGroup(android.content.Context,android.util.AttributeSet)
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int,com.google.gson.FieldNamingPolicy$1)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
com.google.gson.stream.JsonReader: java.lang.String nextString()
okhttp3.internal.http2.Http2Connection$Builder: void setPushObserver$okhttp(okhttp3.internal.http2.PushObserver)
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory
okhttp3.Address: boolean equals(java.lang.Object)
io.reactivex.exceptions.MissingBackpressureException: MissingBackpressureException()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
okhttp3.internal.cache.DiskLruCache: okio.BufferedSink access$getJournalWriter$p(okhttp3.internal.cache.DiskLruCache)
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
okhttp3.internal.connection.RealCall: okhttp3.Request getOriginalRequest()
okhttp3.internal.cache.CacheStrategy$Factory: boolean hasConditions(okhttp3.Request)
okhttp3.Route: java.net.InetSocketAddress socketAddress
okhttp3.internal.connection.RealConnection: int routeFailureCount
okhttp3.Response$Builder: void setRequest$okhttp(okhttp3.Request)
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
okhttp3.internal.cache.DiskLruCache: long maxSize
okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
com.google.android.material.slider.BaseSlider$SliderState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1
okhttp3.internal.http2.Huffman$Node
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
okhttp3.internal.authenticator.JavaNetAuthenticator: java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns)
okhttp3.OkHttpClient: java.net.Proxy proxy
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
okhttp3.ResponseBody: okhttp3.MediaType contentType()
okhttp3.HttpUrl$Builder$Companion: int slashCount(java.lang.String,int,int)
androidx.savedstate.Recreator
io.reactivex.BackpressureStrategy: BackpressureStrategy(java.lang.String,int)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode SETTINGS_TIMEOUT
okhttp3.HttpUrl$Builder: void removeAllCanonicalQueryParameters(java.lang.String)
okhttp3.Call: okio.Timeout timeout()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route)
okhttp3.Request: okhttp3.Headers headers()
okhttp3.internal.concurrent.TaskRunner: void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue)
okhttp3.internal.connection.RealCall$CallReference
okhttp3.HttpUrl: java.lang.String toString()
okhttp3.internal.io.FileSystem
androidx.fragment.app.FragmentTabHost$SavedState
ninh.luyen.dds.datas.remotes.responses.Coordinator: java.lang.String toString()
okhttp3.internal.platform.android.Android10SocketAdapter$Companion: Android10SocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.concurrent.TaskQueue$execute$1: long runOnce()
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.ErrorCode $errorCode$inlined
okhttp3.MultipartBody$Part$Companion: MultipartBody$Part$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.WebSocket
com.google.gson.stream.JsonReader: int PEEKED_NONE
androidx.fragment.app.FragmentState
okhttp3.OkHttpClient: java.util.List DEFAULT_PROTOCOLS
okhttp3.HttpUrl$Builder$Companion: HttpUrl$Builder$Companion()
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
okhttp3.internal.platform.android.DeferredSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void priority(int,int,int,boolean)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
okhttp3.HttpUrl: java.lang.String host()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream removeStream$okhttp(int)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.ConnectionSpec$Builder: boolean supportsTlsExtensions
okhttp3.internal.platform.BouncyCastlePlatform: BouncyCastlePlatform()
okhttp3.FormBody: int size()
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode: androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode valueOf(java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource currentPart
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
okhttp3.internal.connection.RealConnectionPool: okhttp3.internal.concurrent.TaskQueue cleanupQueue
okhttp3.internal.http2.Hpack$Reader: okio.ByteString readByteString()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: long bytesRemainingInChunk
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
okhttp3.Headers$Builder: okhttp3.Headers$Builder addUnsafeNonAscii(java.lang.String,java.lang.String)
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
com.google.android.material.button.MaterialButton: int getIconSize()
okhttp3.OkHttpClient$Builder: okhttp3.CookieJar cookieJar
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: Http1ExchangeCodec$UnknownLengthSource(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.internal.ws.WebSocketProtocol: int B0_MASK_OPCODE
okhttp3.internal.cache.CacheStrategy: CacheStrategy(okhttp3.Request,okhttp3.Response)
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
com.google.android.material.chip.Chip: void setGravity(int)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object invoke()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: ninh.luyen.dds.datas.remotes.responses.City city
okhttp3.FormBody
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
okhttp3.Cookie: java.util.regex.Pattern MONTH_PATTERN
okhttp3.internal.platform.Jdk9Platform: boolean isAvailable
okio.Timeout: long deadlineNanoTime()
okhttp3.Cache$CacheResponseBody: okio.BufferedSource source()
okhttp3.Route: java.net.InetSocketAddress -deprecated_socketAddress()
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
okhttp3.Cookie$Companion: Cookie$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
okhttp3.internal.ws.WebSocketProtocol: WebSocketProtocol()
okhttp3.internal.cache.DiskLruCache: boolean initialized
okhttp3.MediaType: MediaType(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1: java.lang.String $packageName
okhttp3.internal.http2.Http2Stream$StreamTimeout: void exitAndThrowIfTimedOut()
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator getProxyAuthenticator$okhttp()
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
okhttp3.FormBody: long contentLength()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
okhttp3.Headers$Companion
okhttp3.Address: boolean equalsNonHost$okhttp(okhttp3.Address)
okhttp3.internal.cache.CacheStrategy$Factory: int ageSeconds
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings)
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: long read(okio.Buffer,long)
okhttp3.internal.platform.android.AndroidLogHandler
ninh.luyen.dds.datas.remotes.responses.Detail: int getHumidity()
okhttp3.internal.http2.Http2Stream$FramingSink: void setClosed(boolean)
okhttp3.Response$Builder: okhttp3.Response priorResponse
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String getDescription()
kotlin.TypeCastException
okhttp3.internal.cache2.FileOperator: FileOperator(java.nio.channels.FileChannel)
okhttp3.OkHttpClient: boolean followRedirects()
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy PREVENT_WHEN_EMPTY
okhttp3.internal.connection.RealConnection: void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener)
okhttp3.Dispatcher: void setMaxRequests(int)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
okhttp3.internal.platform.Android10Platform$Companion
okhttp3.internal.http2.Hpack: int SETTINGS_HEADER_TABLE_SIZE
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.internal.http2.Http2Stream this$0
androidx.activity.result.ActivityResult
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
okhttp3.OkHttpClient: okhttp3.Authenticator -deprecated_authenticator()
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource: okhttp3.internal.http1.Http1ExchangeCodec this$0
com.google.android.material.navigation.NavigationView$SavedState
okhttp3.internal.http.RealResponseBody
okhttp3.internal.http2.Http2ExchangeCodec: java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp()
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol
okhttp3.internal.concurrent.TaskRunner: long coordinatorWakeUpAt
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
okhttp3.internal.concurrent.TaskRunner$Companion: TaskRunner$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
okhttp3.CertificatePinner
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis
okhttp3.CipherSuite
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $inFinished$inlined
com.google.gson.stream.JsonScope: int EMPTY_ARRAY
okhttp3.internal.connection.Exchange$ResponseBodySource: long read(okio.Buffer,long)
okhttp3.internal.connection.Exchange: void flushRequest()
com.google.android.material.chip.ChipGroup: void setCheckedId(int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Editor$newSink$$inlined$synchronized$lambda$1
okhttp3.internal.ws.WebSocketExtensions: boolean perMessageDeflate
okhttp3.OkHttpClient: okhttp3.Dns -deprecated_dns()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
okhttp3.internal.http2.ErrorCode$Companion: okhttp3.internal.http2.ErrorCode fromHttp2(int)
okhttp3.internal.platform.Platform$Companion: okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
okhttp3.internal.http2.Http2Stream: void writeHeaders(java.util.List,boolean,boolean)
androidx.fragment.app.BackStackState
androidx.core.os.OperationCanceledException
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
okhttp3.MultipartBody: java.util.List parts
okhttp3.HttpUrl$Builder: int getPort$okhttp()
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay read(java.io.File)
okhttp3.internal.platform.Jdk9Platform: Jdk9Platform()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.concurrent.TaskRunner$RealBackend: java.util.concurrent.ThreadPoolExecutor executor
okhttp3.MediaType: java.lang.String toString()
com.google.android.material.chip.Chip: void setTextStartPadding(float)
okhttp3.CacheControl$Builder: boolean noStore
org.koin.core.logger.Level: org.koin.core.logger.Level NONE
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String etag
com.google.gson.stream.JsonReader: long peekedLong
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void write(okio.Buffer,long)
okhttp3.Cache$RealCacheRequest: Cache$RealCacheRequest(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor)
okhttp3.internal.connection.ExchangeFinder: int refusedStreamCount
okhttp3.internal.http2.Hpack: java.util.Map getNAME_TO_FIRST_INDEX()
okhttp3.internal.ws.RealWebSocket: void runWriter()
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
okhttp3.internal.cache.DiskLruCache: int redundantOpCount
okhttp3.internal.platform.AndroidPlatform: void logCloseableLeak(java.lang.String,java.lang.Object)
okhttp3.internal.concurrent.TaskLoggerKt: void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
okhttp3.internal.platform.android.AndroidSocketAdapter
okhttp3.internal.connection.RealCall: void cancel()
okhttp3.internal.cache2.Relay: java.io.RandomAccessFile getFile()
okhttp3.internal.cache.DiskLruCache: java.lang.String DIRTY
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: okio.Timeout timeout()
okhttp3.Request: Request(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
okhttp3.internal.cache2.Relay$RelaySource: long read(okio.Buffer,long)
okhttp3.internal.concurrent.TaskQueue: java.util.List getFutureTasks$okhttp()
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
okhttp3.HttpUrl$Companion: java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset)
okhttp3.internal.http2.Http2: int FLAG_NONE
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.internal.http2.Settings: okhttp3.internal.http2.Settings set(int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int)
okhttp3.internal.ws.WebSocketWriter
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.gson.JsonIOException: long serialVersionUID
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
okhttp3.internal.concurrent.TaskQueue: TaskQueue(okhttp3.internal.concurrent.TaskRunner,java.lang.String)
okhttp3.internal.connection.Exchange$ResponseBodySource: boolean completed
org.koin.core.error.KoinAppAlreadyStartedException
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: java.util.List invoke()
okhttp3.HttpUrl: java.util.List queryNamesAndValues
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: long runOnce()
okhttp3.internal.cache2.Relay: long getUpstreamPos()
okhttp3.internal.tls.CertificateChainCleaner
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealCall call
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header copy$default(okhttp3.internal.http2.Header,okio.ByteString,okio.ByteString,int,java.lang.Object)
com.google.android.material.chip.ChipGroup: int getChipCount()
okhttp3.OkHttpClient$Builder: void setReadTimeout$okhttp(int)
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Level level
okhttp3.Cookie: long expiresAt()
okhttp3.internal.cache.DiskLruCache$Entry: long sequenceNumber
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.Util: okhttp3.EventListener$Factory asFactory(okhttp3.EventListener)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
okhttp3.internal.cache.DiskLruCache$Snapshot
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform access$getPlatform$cp()
com.google.android.material.textfield.TextInputLayout: void setErrorIconVisible(boolean)
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.google.android.material.chip.Chip: float getTextEndPadding()
okhttp3.internal.http.ExchangeCodec: okio.Source openResponseBodySource(okhttp3.Response)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixExceptionListBytes
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
okhttp3.internal.http.RetryAndFollowUpInterceptor: int retryAfter(okhttp3.Response,int)
okhttp3.HttpUrl: java.lang.String encodedQuery()
androidx.core.widget.NestedScrollView
okhttp3.internal.cache2.Relay$Companion: Relay$Companion()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
okhttp3.Cookie: boolean equals(java.lang.Object)
okhttp3.internal.concurrent.TaskRunner$Backend: long nanoTime()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $readerToClose$inlined
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.Cookie$Companion: boolean access$domainMatch(okhttp3.Cookie$Companion,java.lang.String,java.lang.String)
okhttp3.Protocol: java.lang.String access$getProtocol$p(okhttp3.Protocol)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
okhttp3.Cache$RealCacheRequest$1: okhttp3.Cache$RealCacheRequest this$0
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
okhttp3.internal.cache.DiskLruCache: java.lang.String JOURNAL_FILE_TEMP
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: AndroidCertificateChainCleaner(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
kotlin.coroutines.intrinsics.CoroutineSingletons
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List findMatchingRule(java.util.List)
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileBackup
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Companion Companion
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion: StandardAndroidSocketAdapter$Companion()
okhttp3.internal.http2.Header: okio.ByteString component2()
okhttp3.HttpUrl: java.lang.String encodedFragment()
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis
ninh.luyen.dds.datas.remotes.responses.HttpErrorCode: ninh.luyen.dds.datas.remotes.responses.HttpErrorCode INSTANCE
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
com.google.gson.stream.JsonScope: int NONEMPTY_OBJECT
okhttp3.Headers$Companion: okhttp3.Headers of(java.util.Map)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
okhttp3.Handshake$Companion: java.util.List toImmutableList(java.security.cert.Certificate[])
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_BINARY
okhttp3.RequestBody$Companion$toRequestBody$1: okhttp3.MediaType $contentType
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.Exchange exchange
okhttp3.FormBody$Companion: FormBody$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
okhttp3.Handshake: kotlin.Lazy peerCertificates$delegate
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall)
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.TaskRunner$Companion Companion
okhttp3.internal.cache.CacheInterceptor: okhttp3.internal.cache.CacheInterceptor$Companion Companion
okhttp3.internal.connection.ExchangeFinder: okhttp3.Route nextRouteToTry
okhttp3.MultipartBody: okhttp3.MediaType -deprecated_type()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
okhttp3.logging.HttpLoggingInterceptor
okhttp3.internal.http2.Http2Connection: boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection)
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_CONNECTION_SPECS$okhttp()
com.google.android.material.datepicker.DateValidatorPointBackward: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.CacheInterceptor$Companion: okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers)
okhttp3.internal.http2.Settings: int MAX_CONCURRENT_STREAMS
okhttp3.internal.http2.Http2Stream$FramingSource: void setClosed$okhttp(boolean)
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: boolean equals(java.lang.Object)
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
com.google.android.material.internal.BaselineLayout: int getBaseline()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KCallable computeReflected()
okhttp3.internal.http2.Http2Reader$ContinuationSource: okio.Timeout timeout()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: boolean $clearPrevious$inlined
okhttp3.Cache$RealCacheRequest$1
ninh.luyen.dds.HomeActivity: HomeActivity()
okhttp3.CookieJar$Companion: okhttp3.CookieJar$Companion $$INSTANCE
okhttp3.internal.http2.Http2Stream: void enqueueTrailers(okhttp3.Headers)
okhttp3.Cookie: boolean httpOnly()
okhttp3.internal.http2.Http2Stream$FramingSink: void write(okio.Buffer,long)
okhttp3.OkHttpClient$Builder: int pingInterval
okhttp3.HttpUrl: java.lang.String fragment()
okhttp3.Response$Builder: void setPriorResponse$okhttp(okhttp3.Response)
okhttp3.internal.ws.WebSocketProtocol: int B0_FLAG_FIN
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
okhttp3.Cache: int getWriteAbortCount$okhttp()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Stream $stream$inlined
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Response$Builder: okhttp3.Headers$Builder getHeaders$okhttp()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
okhttp3.internal.connection.RealConnection$WhenMappings
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
com.google.android.material.chip.Chip: void setChipIconSize(float)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy STRING
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] $VALUES
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: okhttp3.internal.http2.Http2Connection this$0
okhttp3.internal.http2.Http2Connection$Companion: okhttp3.internal.http2.Settings getDEFAULT_SETTINGS()
okhttp3.internal.http.ExchangeCodec$Companion
org.koin.core.error.NoBeanDefFoundException
okhttp3.internal.tls.BasicCertificateChainCleaner: int MAX_SIGNERS
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
okhttp3.OkHttpClient: int callTimeoutMillis()
okhttp3.internal.http1.Http1ExchangeCodec: boolean isChunked(okhttp3.Request)
okhttp3.internal.ws.WebSocketReader
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
okhttp3.internal.Util$threadFactory$1: Util$threadFactory$1(java.lang.String,boolean)
okhttp3.MediaType: java.lang.String -deprecated_subtype()
okhttp3.HttpUrl: java.util.List pathSegments()
okhttp3.OkHttpClient: java.net.Proxy -deprecated_proxy()
okhttp3.internal.platform.ConscryptPlatform: ConscryptPlatform()
okhttp3.OkHttpClient: int connectTimeoutMillis()
okhttp3.internal.platform.android.Android10SocketAdapter: okhttp3.internal.platform.android.Android10SocketAdapter$Companion Companion
okhttp3.ConnectionSpec$Builder: void setTlsVersions$okhttp(java.lang.String[])
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: AndroidSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
okhttp3.internal.connection.RealCall$timeout$1: okhttp3.internal.connection.RealCall this$0
okhttp3.internal.ws.MessageInflater: okio.Buffer deflatedBytes
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
okhttp3.internal.http2.Http2Connection: long degradedPongDeadlineNs
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
okhttp3.Cache$Entry
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
okhttp3.internal.concurrent.Task: void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue)
okhttp3.CertificatePinner$Pin: java.lang.String hashAlgorithm
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List PREVAILING_RULE
com.google.android.material.chip.Chip: void setMaxWidth(int)
okhttp3.Interceptor$Companion: okhttp3.Interceptor$Companion $$INSTANCE
okhttp3.CipherSuite: CipherSuite(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.gson.stream.JsonReader: int NUMBER_CHAR_FRACTION_DIGIT
okhttp3.internal.connection.RouteException: java.io.IOException getFirstConnectException()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy ERROR
okhttp3.internal.connection.RealConnection$connectTls$2: java.lang.Object invoke()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
okhttp3.Cache$Companion: int readInt$okhttp(okio.BufferedSource)
okhttp3.internal.http2.Huffman$Node: int symbol
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: ConstraintWidget$DimensionBehaviour(java.lang.String,int)
okhttp3.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.Response: java.lang.String -deprecated_message()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion Companion
okhttp3.internal.http2.Http2Reader$ContinuationSource: int flags
okhttp3.Protocol: okhttp3.Protocol[] $VALUES
okhttp3.Request: java.util.Map tags
okhttp3.internal.platform.Android10Platform$Companion: boolean isSupported()
okhttp3.internal.http2.Http2Connection: int lastGoodStreamId
okhttp3.internal.platform.android.DeferredSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory socketAdapterFactory
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String CONNECTION
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.http1.HeadersReader
org.koin.core.logger.Level: org.koin.core.logger.Level[] $VALUES
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
okhttp3.HttpUrl: java.net.URL -deprecated_url()
okhttp3.OkHttpClient: OkHttpClient()
okhttp3.Response: boolean isSuccessful()
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
okhttp3.internal.http1.Http1ExchangeCodec: void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers)
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
okhttp3.internal.cache2.Relay: boolean complete
ninh.luyen.dds.datas.cache.models.SearchCache: SearchCache(java.lang.String,ninh.luyen.dds.datas.remotes.responses.SearchResponseModel)
okhttp3.Response$Builder: okhttp3.internal.connection.Exchange exchange
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform platform
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String getIcon()
okhttp3.internal.tls.BasicCertificateChainCleaner: okhttp3.internal.tls.TrustRootIndex trustRootIndex
okhttp3.internal.http2.Http2Stream: int id
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
okhttp3.Dispatcher: int maxRequests
com.google.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED_NAME
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: okhttp3.internal.http2.Http2Connection$ReaderRunnable this$0
okhttp3.internal.http2.Hpack$Writer: Hpack$Writer(okio.Buffer)
okhttp3.internal.http2.Header: okhttp3.internal.http2.Header$Companion Companion
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[])
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] $VALUES
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
okhttp3.internal.cache.DiskLruCache: boolean removeOldestEntry()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPassword()
okhttp3.MultipartBody: MultipartBody(okio.ByteString,okhttp3.MediaType,java.util.List)
org.koin.androidx.scope.ScopeHandlerViewModel
okhttp3.internal.http2.Http2Stream: void checkOutNotClosed$okhttp()
okhttp3.FormBody$Builder: okhttp3.FormBody build()
okio.Timeout: boolean hasDeadline
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] $VALUES
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
okhttp3.Headers$Builder: okhttp3.Headers build()
okhttp3.internal.connection.RealCall: void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection)
okhttp3.WebSocketListener
okhttp3.internal.http.HttpHeaders: boolean startsWith(okio.Buffer,byte)
okhttp3.Cache$RealCacheRequest: boolean done
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
com.google.gson.stream.JsonReader: java.lang.String peekedString
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
okhttp3.WebSocket: boolean send(java.lang.String)
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: ninh.luyen.dds.datas.remotes.responses.City component1()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
okhttp3.internal.http1.Http1ExchangeCodec: long NO_CHUNK_YET
okhttp3.internal.cache.CacheInterceptor$Companion
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
okhttp3.Response
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
ninh.luyen.dds.datas.remotes.responses.Temp: double getNight()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
okhttp3.internal.http.StatusLine
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.OkHttpClient: okhttp3.CookieJar -deprecated_cookieJar()
okhttp3.internal.http2.Hpack$Writer: int smallestHeaderTableSizeSetting
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.CacheControl: boolean onlyIfCached
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: BouncyCastleSocketAdapter$Companion$factory$1()
okhttp3.CertificatePinner: okio.ByteString sha1Hash(java.security.cert.X509Certificate)
okhttp3.Headers$Companion: void checkName(java.lang.String)
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion()
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.HeadersReader headersReader
okhttp3.Cache: void evictAll()
okhttp3.HttpUrl
okhttp3.internal.http2.Http2Writer
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.Util: java.util.Map toImmutableMap(java.util.Map)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okhttp3.internal.cache.DiskLruCache$Companion
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
okhttp3.Cookie$Companion: int dateCharacterOffset(java.lang.String,int,int,boolean)
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType $contentType
okhttp3.Interceptor$Companion: Interceptor$Companion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
okhttp3.internal.http2.Hpack$Reader: okio.ByteString getName(int)
com.google.gson.stream.JsonWriter: void close()
okhttp3.internal.ws.RealWebSocket$Close: int getCode()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.logging.LoggingEventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
okhttp3.internal.http2.Http2Writer: okio.Buffer hpackBuffer
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
androidx.multidex.MultiDexApplication: MultiDexApplication()
okhttp3.Response$Builder: int getCode$okhttp()
okhttp3.internal.http2.Http2Connection: void setPeerSettings(okhttp3.internal.http2.Settings)
okhttp3.Connection
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
okhttp3.internal.cache.DiskLruCache$Snapshot: long[] lengths
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
okhttp3.Handshake$Companion$handshake$1: java.util.List $peerCertificatesCopy
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnectionToCancel()
okhttp3.Handshake: java.lang.String toString()
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
okhttp3.Cache$RealCacheRequest$1: void close()
okhttp3.internal.ws.WebSocketWriter: long minimumDeflateSize
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
okhttp3.internal.Util: java.util.List immutableListOf(java.lang.Object[])
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256
okhttp3.Handshake$Companion$handshake$1
okhttp3.internal.http2.Settings: void clear()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
okhttp3.internal.ws.RealWebSocket: okhttp3.WebSocketListener listener
okhttp3.internal.tls.OkHostnameVerifier: OkHostnameVerifier()
okhttp3.OkHttpClient: long minWebSocketMessageToCompress()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
okhttp3.internal.platform.BouncyCastlePlatform
okhttp3.Cache$Entry: Cache$Entry(okio.Source)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec$Companion Companion
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection)
com.google.gson.stream.JsonToken
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
okhttp3.OkHttpClient: int connectTimeoutMillis
okhttp3.HttpUrl: int pathSize()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
okhttp3.HttpUrl: int port
androidx.appcompat.widget.ActionBarOverlayLayout
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
okhttp3.logging.LoggingEventListener: void responseFailed(okhttp3.Call,java.io.IOException)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
ninh.luyen.dds.datas.remotes.responses.Temp: java.lang.String toString()
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.internal.http1.HeadersReader$Companion
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: boolean closed
kotlin.jvm.internal.CallableReference$NoReceiver: java.lang.Object readResolve()
okhttp3.Cache$urls$1: java.lang.String next()
okhttp3.internal.cache.CacheStrategy$Factory: long cacheResponseAge()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
okhttp3.internal.http2.Http2Connection: void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
okhttp3.internal.http2.Http2Stream$FramingSource: okhttp3.Headers trailers
okhttp3.internal.connection.RealConnection: int getRouteFailureCount$okhttp()
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)
com.google.gson.JsonSyntaxException: long serialVersionUID
okhttp3.internal.cache.DiskLruCache: java.io.File journalFileTmp
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: boolean $cancelable
okhttp3.CertificatePinner$Pin
okhttp3.logging.HttpLoggingInterceptor$Level: okhttp3.logging.HttpLoggingInterceptor$Level NONE
okhttp3.internal.platform.android.ConscryptSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
okhttp3.internal.cache.DiskLruCache: boolean civilizedFileSystem
okhttp3.internal.cache.DiskLruCache: java.util.LinkedHashMap lruEntries
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: void deleteContents(java.io.File)
ninh.luyen.dds.datas.remotes.responses.Detail: int component1()
okhttp3.internal.connection.RouteSelector$Selection: RouteSelector$Selection(java.util.List)
okhttp3.MediaType: java.nio.charset.Charset charset$default(okhttp3.MediaType,java.nio.charset.Charset,int,java.lang.Object)
okhttp3.Request$Builder: void setHeaders$okhttp(okhttp3.Headers$Builder)
okhttp3.HttpUrl$Builder: boolean isDot(java.lang.String)
okhttp3.internal.http2.Hpack$Writer: okhttp3.internal.http2.Header[] dynamicTable
okhttp3.internal.http2.Http2Connection: void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException)
okhttp3.internal.connection.RealCall: boolean getForWebSocket()
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
okhttp3.internal.connection.RealConnection: okhttp3.Route route
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
okhttp3.internal.Util: boolean isCivilized(okhttp3.internal.io.FileSystem,java.io.File)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
kotlin.LazyThreadSafetyMode
okhttp3.Address: java.net.ProxySelector -deprecated_proxySelector()
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.connection.RouteSelector: java.util.List postponedRoutes
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.material.textfield.TextInputLayout
okhttp3.internal.platform.AndroidPlatform: AndroidPlatform()
okhttp3.internal.connection.RouteSelector: boolean hasNextProxy()
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.concurrent.CountDownLatch readCompleteLatch
okhttp3.internal.tls.BasicCertificateChainCleaner
okhttp3.internal.platform.Android10Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.Cache: void remove$okhttp(okhttp3.Request)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS
okhttp3.internal.connection.ExchangeFinder
okhttp3.internal.http2.Hpack$Reader: void clearDynamicTable()
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
okhttp3.Headers$Companion: Headers$Companion()
okhttp3.logging.LoggingEventListener: void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List)
com.google.gson.FieldNamingPolicy: java.lang.String separateCamelCase(java.lang.String,java.lang.String)
com.google.gson.stream.JsonReader: int peekedNumberLength
okhttp3.internal.Util: void threadName(java.lang.String,kotlin.jvm.functions.Function0)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: java.lang.String $name$inlined
okhttp3.logging.LoggingEventListener: void responseBodyStart(okhttp3.Call)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean)
okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,okio.BufferedSource,int)
okhttp3.HttpUrl: java.lang.String -deprecated_encodedPath()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp()
okhttp3.internal.http2.Http2Connection: long degradedPongsReceived
okhttp3.internal.ws.WebSocketExtensions: java.lang.Integer serverMaxWindowBits
okhttp3.ResponseBody: long contentLength()
androidx.constraintlayout.widget.Barrier: int getType()
okhttp3.internal.cache.CacheInterceptor$cacheWritingResponse$cacheWritingSource$1: okio.Timeout timeout()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
okhttp3.CertificatePinner$Companion
okhttp3.Response: okhttp3.Response -deprecated_networkResponse()
okhttp3.Cache$Entry: Cache$Entry(okhttp3.Response)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion: okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: int appVersion
okhttp3.internal.Util: int delimiterOffset(java.lang.String,java.lang.String,int,int)
okhttp3.Handshake: java.security.Principal localPrincipal()
androidx.lifecycle.SingleGeneratedAdapterObserver
okio.AsyncTimeout: boolean exit()
okhttp3.internal.connection.ExchangeFinder: void trackFailure(java.io.IOException)
okhttp3.Cache$urls$1: okhttp3.Cache this$0
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket getSocket$okhttp()
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
okhttp3.ConnectionSpec$Companion: ConnectionSpec$Companion()
okhttp3.Address: okhttp3.HttpUrl url
okhttp3.internal.ws.WebSocketReader: boolean closed
okhttp3.internal.platform.android.ConscryptSocketAdapter
kotlin.io.FileSystemException
okhttp3.internal.http2.Hpack$Writer: int headerTableSizeSetting
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.RealCall: void enterNetworkInterceptorExchange(okhttp3.Request,boolean)
okhttp3.Interceptor$Companion
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String main
com.google.gson.stream.JsonReader: int PEEKED_END_OBJECT
okhttp3.ConnectionSpec: java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec)
okhttp3.RequestBody$Companion$toRequestBody$1: long contentLength()
ninh.luyen.dds.datas.remotes.responses.City: java.lang.String getCountry()
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel searchResponseModel
okhttp3.Challenge: java.lang.String toString()
okhttp3.internal.ws.WebSocketExtensions: boolean component5()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealCall$timeout$1 timeout
okhttp3.internal.http2.ErrorCode$Companion: ErrorCode$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_CLOSED
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: int hashCode()
okhttp3.MediaType: java.lang.String TOKEN
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
okhttp3.internal.http2.Http2Reader: java.util.logging.Logger logger
ninh.luyen.dds.datas.remotes.responses.FeelLike: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType DIMENSION_TYPE
okhttp3.RequestBody$Companion$toRequestBody$2: RequestBody$Companion$toRequestBody$2(byte[],okhttp3.MediaType,int,int)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
okhttp3.Cookie: boolean persistent()
okhttp3.internal.platform.Jdk9Platform$Companion
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: boolean exists(java.io.File)
okhttp3.internal.HostnamesKt: boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: okhttp3.internal.ws.RealWebSocket$Streams $streams$inlined
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(byte[])
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
okhttp3.internal.cache2.FileOperator: java.nio.channels.FileChannel fileChannel
okhttp3.internal.connection.Exchange: boolean isCoalescedConnection$okhttp()
okhttp3.Cache: int requestCount
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketWriter writer
okhttp3.Response: java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void write(okio.Buffer,long)
okhttp3.internal.ws.MessageInflater: okio.InflaterSource inflaterSource
ninh.luyen.dds.commons.BaseViewModel: BaseViewModel()
okhttp3.internal.http2.Http2Reader$ContinuationSource: long read(okio.Buffer,long)
ninh.luyen.dds.datas.remotes.responses.Detail: int sunrise
okhttp3.OkHttpClient$Builder: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.ResponseBody$BomAwareReader
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
okhttp3.internal.cache.DiskLruCache$cleanupTask$1: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.Util: int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http.RealInterceptorChain chain
okhttp3.internal.cache2.Relay$Companion
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
okhttp3.internal.cache.DiskLruCache: void initialize()
okhttp3.internal.http2.Http2Connection: void writePingAndAwaitPong()
okhttp3.internal.http.ExchangeCodec: void flushRequest()
okhttp3.OkHttpClient$Builder: void setCookieJar$okhttp(okhttp3.CookieJar)
okhttp3.internal.http2.Hpack$Reader: okhttp3.internal.http2.Header[] dynamicTable
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(int,java.lang.String)
okhttp3.internal.ws.RealWebSocket: java.util.ArrayDeque pongQueue
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier
okhttp3.internal.platform.Platform$Companion: boolean isAndroid()
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy computeCandidate()
okhttp3.MediaType: java.lang.String subtype
okhttp3.internal.cache.FaultHidingSink: boolean hasErrors
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
okhttp3.Request$Builder: void setTags$okhttp(java.util.Map)
okhttp3.FormBody: okhttp3.FormBody$Companion Companion
okhttp3.CertificatePinner$check$1: okhttp3.CertificatePinner this$0
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
okhttp3.internal.ws.WebSocketReader: okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response)
okhttp3.internal.connection.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.concurrent.Task writerTask
okhttp3.internal.connection.RealConnection: java.lang.String toString()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.Class sslSocketClass
com.google.android.material.chip.Chip: float getChipMinHeight()
okhttp3.internal.http2.Huffman: void encode(okio.ByteString,okio.BufferedSink)
okhttp3.Protocol$Companion: Protocol$Companion()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
com.google.gson.stream.JsonWriter: void beforeName()
okhttp3.internal.ws.WebSocketWriter: boolean isClient
okhttp3.internal.http2.Http2Reader: boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
okhttp3.Dns: okhttp3.Dns SYSTEM
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(boolean)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp()
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
okio.Timeout: void intersectWith(okio.Timeout,kotlin.jvm.functions.Function0)
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String lastModifiedString
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
okhttp3.internal.http2.Hpack$Reader: int nextHeaderIndex
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.http2.Header: java.lang.String RESPONSE_STATUS_UTF8
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
okhttp3.internal.http2.Http2Stream: int getId()
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
okhttp3.internal.http2.Http2: java.lang.String[] FRAME_NAMES
okhttp3.internal.http2.PushObserver$Companion
okhttp3.HttpUrl: java.lang.String FRAGMENT_ENCODE_SET_URI
okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
okhttp3.Cache$CacheResponseBody: long contentLength()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem: java.lang.String toString()
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl$Builder: void setEncodedUsername$okhttp(java.lang.String)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
okhttp3.MultipartBody: int size()
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1: long $unacknowledgedBytesRead$inlined
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
okhttp3.OkHttpClient$Builder: void setConnectionPool$okhttp(okhttp3.ConnectionPool)
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
okhttp3.EventListener$Companion: EventListener$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1: int $streamId$inlined
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1: long runOnce()
com.google.android.material.internal.ParcelableSparseArray
com.google.gson.stream.JsonScope: int CLOSED
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
retrofit2.adapter.rxjava2.HttpException
okhttp3.internal.http2.Http2Connection$Builder: void setPingIntervalMillis$okhttp(int)
okhttp3.OkHttpClient: java.net.Proxy proxy()
okhttp3.internal.connection.RealCall: okhttp3.Request request()
okhttp3.OkHttpClient$Companion: OkHttpClient$Companion()
kotlin.SafePublicationLazyImpl: java.lang.Object writeReplace()
okhttp3.internal.connection.RealConnectionPool: int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.lifecycle.FullLifecycleObserverAdapter
okhttp3.internal.http.RetryAndFollowUpInterceptor
okhttp3.logging.LoggingEventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
okhttp3.internal.cache.DiskLruCache$Entry: long getSequenceNumber$okhttp()
okhttp3.internal.http2.Hpack$Writer: int nextHeaderIndex
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
okhttp3.CacheControl: boolean -deprecated_immutable()
okhttp3.Dispatcher: java.lang.Runnable idleCallback
okhttp3.internal.connection.RealConnection: void access$setSocket$p(okhttp3.internal.connection.RealConnection,java.net.Socket)
okhttp3.internal.connection.Exchange$RequestBodySink: okhttp3.internal.connection.Exchange this$0
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
okhttp3.internal.platform.AndroidPlatform$Companion: okhttp3.internal.platform.Platform buildIfSupported()
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
okhttp3.internal.concurrent.TaskQueue$execute$1: TaskQueue$execute$1(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean)
okhttp3.Cache: int networkCount
okhttp3.internal.connection.Exchange: void webSocketUpgradeFailed()
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
org.koin.androidx.scope.ScopeHandlerViewModel: ScopeHandlerViewModel()
okhttp3.MultipartReader: MultipartReader(okhttp3.ResponseBody)
okhttp3.OkHttpClient$Builder: void setFollowRedirects$okhttp(boolean)
okhttp3.internal.concurrent.TaskRunner$RealBackend: long nanoTime()
com.google.android.material.transformation.ExpandableBehavior
okhttp3.Cache: int VERSION
ninh.luyen.dds.datas.remotes.responses.Detail: ninh.luyen.dds.datas.remotes.responses.Detail copy$default(ninh.luyen.dds.datas.remotes.responses.Detail,int,int,int,ninh.luyen.dds.datas.remotes.responses.Temp,ninh.luyen.dds.datas.remotes.responses.FeelLike,java.util.List,int,int,int,java.lang.Object)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
okhttp3.internal.http2.Http2Connection: java.net.Socket socket
okhttp3.CertificatePinner$Pin: CertificatePinner$Pin(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Reader$ContinuationSource
okhttp3.Dns$Companion
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.google.gson.stream.JsonReader: int doPeek()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.google.gson.FieldNamingPolicy$3
okhttp3.Cookie: java.lang.String domain()
okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
kotlin.jvm.internal.Lambda: int arity
okhttp3.internal.http2.Settings: boolean getEnablePush(boolean)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()
okhttp3.MultipartBody: okhttp3.MultipartBody$Companion Companion
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: long runOnce()
okhttp3.internal.ws.RealWebSocket$Streams
okhttp3.OkHttpClient$Builder$addInterceptor$2: kotlin.jvm.functions.Function1 $block
okhttp3.internal.ws.MessageInflaterKt: int OCTETS_TO_ADD_BEFORE_INFLATION
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String description
okhttp3.Cookie: Cookie(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Stream: void waitForIo$okhttp()
kotlin.jvm.internal.CallableReference: boolean isOpen()
okhttp3.HttpUrl$Companion: java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object)
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator
com.google.android.material.button.MaterialButton: int getInsetBottom()
kotlinx.coroutines.CancellableContinuationImpl: int _decision
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
okhttp3.FormBody: java.lang.String name(int)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
okhttp3.CertificatePinner$check$1: java.util.List $peerCertificates
okhttp3.internal.platform.OpenJSSEPlatform: boolean isSupported
com.google.gson.stream.JsonReader: long MIN_INCOMPLETE_INTEGER
okhttp3.ConnectionSpec$Builder
okhttp3.Handshake$Companion$handshake$1: java.util.List invoke()
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
okhttp3.Handshake: java.lang.String getName(java.security.cert.Certificate)
org.koin.core.logger.Level: org.koin.core.logger.Level ERROR
okhttp3.Handshake$Companion: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
okhttp3.internal.cache.DiskLruCache$Entry: java.util.List dirtyFiles
com.google.gson.stream.JsonReader: char readEscapeCharacter()
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
okhttp3.Dispatcher: void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall)
okhttp3.HttpUrl$Builder: void push(java.lang.String,int,int,boolean,boolean)
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
okhttp3.OkHttpClient$Builder: okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner
okhttp3.MultipartBody: byte[] COLONSPACE
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
okhttp3.CipherSuite$Companion: CipherSuite$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.CertificatePinner: int hashCode()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout
okhttp3.internal.concurrent.TaskRunner: okhttp3.internal.concurrent.Task awaitTaskToRun()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
okhttp3.internal.ws.WebSocketProtocol: void toggleMask(okio.Buffer$UnsafeCursor,byte[])
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Connection$Listener listener
okhttp3.Cache$CacheResponseBody: java.lang.String contentType
okhttp3.internal.connection.RealConnectionPool: long cleanup(long)
okhttp3.internal.http2.Huffman: byte[] CODE_BIT_COUNTS
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(java.time.Duration)
kotlin.text.Regex$Serialized: java.lang.Object readResolve()
com.google.gson.stream.JsonWriter: JsonWriter(java.io.Writer)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
okhttp3.internal.cache.DiskLruCache: void validateKey(java.lang.String)
okhttp3.internal.concurrent.TaskQueue$schedule$2: java.lang.String $name
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
okhttp3.internal.connection.ConnectInterceptor
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
okhttp3.RequestBody$Companion$asRequestBody$1: okhttp3.MediaType contentType()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
okhttp3.Connection: okhttp3.Route route()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
okhttp3.Headers$Companion: okhttp3.Headers -deprecated_of(java.lang.String[])
okhttp3.RequestBody: boolean isDuplex()
com.google.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
okio.Timeout: okio.Timeout NONE
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
okhttp3.logging.HttpLoggingInterceptor$Logger: void log(java.lang.String)
okhttp3.internal.connection.RouteDatabase: java.util.Set failedRoutes
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: okio.ForwardingTimeout timeout
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
okhttp3.OkHttpClient: java.util.List -deprecated_interceptors()
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
okhttp3.internal.platform.android.SocketAdapter: boolean isSupported()
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
okhttp3.internal.http2.PushObserver
okhttp3.internal.ws.RealWebSocket$WriterTask
com.google.gson.stream.JsonToken: JsonToken(java.lang.String,int)
ninh.luyen.dds.datas.remotes.responses.Coordinator: ninh.luyen.dds.datas.remotes.responses.Coordinator copy$default(ninh.luyen.dds.datas.remotes.responses.Coordinator,double,double,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES
okhttp3.internal.http2.Http2ExchangeCodec: long reportedContentLength(okhttp3.Response)
okhttp3.internal.http.RequestLine: RequestLine()
okhttp3.ResponseBody: ResponseBody()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.Cache$urls$1: java.lang.String nextUrl
okhttp3.internal.ws.WebSocketReader: okio.Buffer$UnsafeCursor maskCursor
okhttp3.ResponseBody: okhttp3.ResponseBody$Companion Companion
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
okhttp3.internal.http2.Http2Connection: Http2Connection(okhttp3.internal.http2.Http2Connection$Builder)
okhttp3.internal.connection.Exchange: void detachWithViolence()
kotlin.collections.EmptyMap: java.lang.Object readResolve()
okhttp3.internal.connection.RealCall$AsyncCall: java.lang.String getHost()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void flush()
okhttp3.HttpUrl: okhttp3.HttpUrl$Companion Companion
okhttp3.internal.platform.Jdk9Platform$Companion: Jdk9Platform$Companion()
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: int compare(java.lang.Object,java.lang.Object)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setPadding(int)
ninh.luyen.dds.datas.remotes.responses.Temp: boolean equals(java.lang.Object)
okhttp3.internal.http2.Http2Reader$Companion
okhttp3.MultipartReader$PartSource: void close()
okhttp3.internal.http2.Hpack$Reader: int evictToRecoverBytes(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
okhttp3.internal.platform.ConscryptPlatform$Companion: boolean isSupported()
okhttp3.internal.http2.Http2Connection: int DEGRADED_PONG_TIMEOUT_NS
okhttp3.Cache$Entry: okhttp3.Handshake handshake
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: okhttp3.internal.ws.WebSocketWriter $writer$inlined
okhttp3.internal.http2.Http2Writer: int maxFrameSize
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
okhttp3.internal.cache.DiskLruCache: boolean access$getHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache)
okhttp3.internal.concurrent.Task: long nextExecuteNanoTime
okhttp3.internal.connection.Exchange$RequestBodySink: void write(okio.Buffer,long)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
okhttp3.internal.ws.RealWebSocket: java.lang.String receivedCloseReason
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
okhttp3.internal.http2.Http2Reader$ContinuationSource: void setLeft(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
okhttp3.Address
okhttp3.RequestBody: okhttp3.RequestBody create(java.io.File,okhttp3.MediaType)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method getPreHandler()
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1
okhttp3.internal.connection.RealCall: void enqueue(okhttp3.Callback)
com.google.gson.stream.JsonReader: int lineStart
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $cancelable
okhttp3.CacheControl: int sMaxAgeSeconds
okhttp3.internal.http2.Http2Connection: long writeBytesMaximum
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
okhttp3.internal.connection.RealCall: java.io.IOException timeoutExit(java.io.IOException)
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange)
okhttp3.internal.http2.Http2Stream$FramingSink: okio.Timeout timeout()
okhttp3.internal.http2.Http2Reader: void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
androidx.lifecycle.Lifecycle$Event
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
okhttp3.CookieJar$Companion$NoCookies: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
okhttp3.logging.LoggingEventListener$Factory: okhttp3.logging.HttpLoggingInterceptor$Logger logger
okhttp3.internal.connection.RouteSelector: int nextProxyIndex
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: ConscryptSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
okhttp3.internal.connection.RealConnection: okhttp3.Request createTunnelRequest()
okhttp3.internal.connection.RealConnection: okio.BufferedSink sink
com.google.android.material.textfield.TextInputEditText
okhttp3.Handshake$Companion: Handshake$Companion()
okhttp3.Response: okhttp3.internal.connection.Exchange exchange()
okhttp3.internal.connection.RouteSelector
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] $VALUES
okhttp3.internal.http1.Http1ExchangeCodec: okhttp3.internal.http1.Http1ExchangeCodec$Companion Companion
okhttp3.internal.cache.DiskLruCache: void delete()
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: Http2Connection$sendDegradedPingLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection connection
okhttp3.internal.platform.android.AndroidSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp()
okhttp3.internal.http2.Http2Connection: long degradedPingsSent
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: java.util.List protocols
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] WILDCARD_LABEL
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type CONSTANT
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
ninh.luyen.dds.datas.cache.models.SearchCache: int hashCode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.Call: okhttp3.Call clone()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
okhttp3.OkHttp: java.lang.String VERSION
okhttp3.HttpUrl$Builder: java.lang.String toString()
okhttp3.logging.LoggingEventListener: void cacheConditionalHit(okhttp3.Call,okhttp3.Response)
okhttp3.ResponseBody$Companion: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.ws.RealWebSocket$connect$1: okhttp3.internal.ws.RealWebSocket this$0
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1: boolean $clearPrevious$inlined
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType END
okhttp3.internal.http2.Http2Stream: Http2Stream(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers)
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
okhttp3.Cookie: boolean httpOnly
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
okhttp3.internal.http2.Header: okio.ByteString value
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor currentEditor
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
okhttp3.OkHttpClient$Builder: int getConnectTimeout$okhttp()
com.google.gson.JsonIOException
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver pushObserver
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
kotlin.jvm.internal.PropertyReference: boolean isConst()
okhttp3.HttpUrl$Builder: int effectivePort()
okhttp3.internal.ws.RealWebSocket$Companion: RealWebSocket$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.connection.RealCall: boolean timeoutEarlyExit
okhttp3.ResponseBody$Companion$asResponseBody$1: okhttp3.MediaType $contentType
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
okhttp3.Response$Builder: void setExchange$okhttp(okhttp3.internal.connection.Exchange)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: void close()
okhttp3.logging.LoggingEventListener: void requestBodyEnd(okhttp3.Call,long)
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method getAlpnSelectedProtocol
okhttp3.internal.cache.DiskLruCache$Entry: void setZombie$okhttp(boolean)
okhttp3.Cache: okhttp3.Cache$Companion Companion
okhttp3.CacheControl$Builder
com.google.android.material.chip.Chip: void setRippleColorResource(int)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
okhttp3.CipherSuite: java.lang.String toString()
okhttp3.Cache$urls$1: Cache$urls$1(okhttp3.Cache)
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.util.Date)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl -deprecated_get(java.net.URL)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.android.material.button.MaterialButton: void setChecked(boolean)
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.lang.Object initialValue()
okhttp3.Route: okhttp3.Address -deprecated_address()
ninh.luyen.dds.datas.remotes.responses.Temp: double getEve()
okhttp3.internal.cache.DiskLruCache: void flush()
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: javax.net.ssl.X509TrustManager component1()
okhttp3.internal.concurrent.TaskQueue
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)
okhttp3.internal.connection.RealCall$timeout$1: RealCall$timeout$1(okhttp3.internal.connection.RealCall)
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
okhttp3.internal.http2.Http2Stream: boolean isOpen()
okhttp3.internal.concurrent.Task: void setNextExecuteNanoTime$okhttp(long)
ninh.luyen.dds.datas.remotes.responses.City: int component5()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
okhttp3.internal.ws.RealWebSocket$initReaderAndWriter$$inlined$synchronized$lambda$1: long $pingIntervalNanos$inlined
okhttp3.logging.LoggingEventListener: void requestBodyStart(okhttp3.Call)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
okhttp3.internal.connection.Exchange: void cancel()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService -deprecated_executorService()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()
okhttp3.Protocol: Protocol(java.lang.String,int,java.lang.String)
okhttp3.MediaType$Companion: okhttp3.MediaType -deprecated_parse(java.lang.String)
okhttp3.internal.concurrent.TaskRunner$RealBackend: TaskRunner$RealBackend(java.util.concurrent.ThreadFactory)
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
ninh.luyen.dds.datas.remotes.responses.Detail: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1: boolean $cancelable
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
okhttp3.Dns$Companion$DnsSystem: Dns$Companion$DnsSystem()
okhttp3.internal.ws.WebSocketExtensions: WebSocketExtensions(boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean)
okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater$okhttp(int,long)
okhttp3.Call: void cancel()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
okhttp3.MultipartBody: java.util.List -deprecated_parts()
okhttp3.internal.http2.Http2Connection: void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.google.android.material.button.MaterialButtonToggleGroup: void setCheckedId(int)
okhttp3.internal.http2.Http2Stream$FramingSink: boolean finished
okhttp3.internal.connection.Exchange: boolean isDuplex$okhttp()
ninh.luyen.dds.datas.remotes.responses.Weather: ninh.luyen.dds.datas.remotes.responses.Weather copy(java.lang.String,java.lang.String,int,java.lang.String)
com.google.gson.LongSerializationPolicy$2: com.google.gson.JsonElement serialize(java.lang.Long)
okhttp3.internal.http2.Settings: int DEFAULT_INITIAL_WINDOW_SIZE
okhttp3.Cache$Entry: java.lang.String SENT_MILLIS
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: long read(okio.Buffer,long)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
okhttp3.TlsVersion
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher getDispatcher$okhttp()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
okhttp3.CacheControl: java.lang.String headerValue
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1: java.lang.String $name
okhttp3.OkHttpClient: java.util.List -deprecated_connectionSpecs()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion: BouncyCastleSocketAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Stream: long writeBytesTotal
okhttp3.internal.http2.Hpack$Reader: Hpack$Reader(okio.Source,int)
okhttp3.internal.platform.OpenJSSEPlatform: java.security.Provider provider
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
okhttp3.internal.http1.Http1ExchangeCodec$Companion: Http1ExchangeCodec$Companion()
okhttp3.internal.http2.Http2Connection$Builder: void setSocket$okhttp(java.net.Socket)
com.google.android.material.internal.ParcelableSparseIntArray
okhttp3.internal.http2.Http2: int INITIAL_MAX_FRAME_SIZE
okhttp3.internal.connection.RealConnection$connectTls$2: okhttp3.internal.connection.RealConnection this$0
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType FLOAT_TYPE
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
ninh.luyen.dds.datas.remotes.responses.City: java.lang.String component2()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
okhttp3.Cache$CacheResponseBody$1: Cache$CacheResponseBody$1(okhttp3.Cache$CacheResponseBody,okio.Source,okio.Source)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: java.lang.Class sslSocketFactoryClass
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
okhttp3.internal.http2.Http2Connection$Builder: java.net.Socket socket
okhttp3.internal.http2.Http2Stream$FramingSource: void updateConnectionFlowControl(long)
okhttp3.internal.concurrent.TaskRunner: java.util.List readyQueues
okhttp3.internal.http2.Http2Reader$ContinuationSource: int streamId
okhttp3.internal.publicsuffix.PublicSuffixDatabase: byte[] publicSuffixListBytes
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
okhttp3.CookieJar
okhttp3.internal.http2.Http2Stream$FramingSink: boolean getClosed()
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
okhttp3.internal.concurrent.TaskQueue: void setActiveTask$okhttp(okhttp3.internal.concurrent.Task)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: double component4()
okhttp3.RequestBody: okhttp3.RequestBody$Companion Companion
okhttp3.internal.cache2.Relay: okio.Source upstream
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
okhttp3.Request$Builder: okhttp3.RequestBody body
okhttp3.internal.Util: int readMedium(okio.BufferedSource)
okhttp3.HttpUrl: java.lang.String query()
okhttp3.HttpUrl: java.lang.String scheme()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
okhttp3.Cache: Cache(java.io.File,long)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: int hashCode()
okhttp3.internal.http2.Http2Writer: okhttp3.internal.http2.Hpack$Writer getHpackWriter()
okhttp3.internal.Util: void ignoreIoExceptions(kotlin.jvm.functions.Function0)
androidx.core.app.NotificationCompatSideChannelService: NotificationCompatSideChannelService()
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.connection.RealCall: void timeoutEarlyExit()
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.connection.RealConnection: boolean isMultiplexed$okhttp()
okhttp3.Cache$CacheResponseBody: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2Stream: void receiveRstStream(okhttp3.internal.http2.ErrorCode)
okhttp3.Request$Builder: void setMethod$okhttp(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
okhttp3.internal.concurrent.TaskRunner$runnable$1: okhttp3.internal.concurrent.TaskRunner this$0
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
okhttp3.internal.http2.Header
ninh.luyen.dds.datas.remotes.responses.FeelLike: double morn
okhttp3.internal.ws.MessageInflater: java.util.zip.Inflater inflater
okhttp3.internal.http2.Http2Connection: void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
okhttp3.internal.ws.RealWebSocket: long minimumDeflateSize
okhttp3.WebSocket: okhttp3.Request request()
okhttp3.internal.http1.Http1ExchangeCodec
okhttp3.internal.http.DatesKt: okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 STANDARD_DATE_FORMAT
okhttp3.internal.cache2.Relay: long upstreamPos
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] $VALUES
okhttp3.Route
okhttp3.Route: java.net.InetSocketAddress socketAddress()
okhttp3.CertificatePinner$Pin: boolean matchesCertificate(java.security.cert.X509Certificate)
okhttp3.ResponseBody$BomAwareReader: int read(char[],int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
okhttp3.internal.connection.ConnectionSpecSelector: java.util.List connectionSpecs
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1: boolean $inFinished$inlined
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
org.koin.core.error.ScopeAlreadyCreatedException
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion: RetryAndFollowUpInterceptor$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.ConnectionSpec: java.util.List -deprecated_cipherSuites()
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.internal.http2.Http2Connection: void close()
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy valueOf(java.lang.String)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel copy$default(ninh.luyen.dds.datas.remotes.responses.SearchResponseModel,ninh.luyen.dds.datas.remotes.responses.City,int,java.lang.String,double,java.util.List,int,java.lang.Object)
okhttp3.MultipartBody: long writeOrCountBytes(okio.BufferedSink,boolean)
kotlin.SafePublicationLazyImpl: java.lang.Object _value
okhttp3.internal.concurrent.TaskRunner: void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task)
okhttp3.HttpUrl$Companion: int defaultPort(java.lang.String)
okhttp3.internal.ws.RealWebSocket: void writePingFrame$okhttp()
okhttp3.internal.http2.Http2Stream
okhttp3.OkHttpClient$Builder: int getPingInterval$okhttp()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
ninh.luyen.dds.HomeActivity
okhttp3.internal.concurrent.TaskRunner: java.util.List activeQueues()
okhttp3.internal.http2.Http2Stream: void receiveData(okio.BufferedSource,int)
okhttp3.internal.ws.RealWebSocket$Message: RealWebSocket$Message(int,okio.ByteString)
okhttp3.Response$Builder: okhttp3.ResponseBody body
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
okhttp3.internal.http2.Http2Writer: void ping(boolean,int,int)
okhttp3.internal.cache.DiskLruCache: void access$setHasJournalErrors$p(okhttp3.internal.cache.DiskLruCache,boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT
okhttp3.Cookie: java.util.regex.Pattern YEAR_PATTERN
okhttp3.internal.ws.RealWebSocket: boolean isValid(okhttp3.internal.ws.WebSocketExtensions)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
okhttp3.internal.platform.android.SocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask
okhttp3.internal.http2.Http2ExchangeCodec: okhttp3.internal.http2.Http2Connection http2Connection
com.google.android.material.textview.MaterialTextView: MaterialTextView(android.content.Context,android.util.AttributeSet)
okhttp3.Response: okhttp3.Headers headers
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
okhttp3.ResponseBody$Companion$asResponseBody$1: long $contentLength
okhttp3.OkHttpClient: int writeTimeoutMillis
okhttp3.CacheControl$Companion: int indexOfElement$default(okhttp3.CacheControl$Companion,java.lang.String,java.lang.String,int,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
okhttp3.internal.connection.RealConnectionPool$Companion: okhttp3.internal.connection.RealConnectionPool get(okhttp3.ConnectionPool)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.activity.ComponentActivity$3
okhttp3.internal.http.RealInterceptorChain: java.util.List interceptors
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
okhttp3.HttpUrl: java.net.URI uri()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
okhttp3.HttpUrl: java.lang.String encodedUsername()
okhttp3.Response: long sentRequestAtMillis()
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory
okhttp3.internal.http.HttpHeaders: boolean promisesBody(okhttp3.Response)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: Http1ExchangeCodec$ChunkedSource(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl)
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: javax.net.ssl.X509TrustManager trustManager
okhttp3.internal.http.RequestLine: okhttp3.internal.http.RequestLine INSTANCE
okhttp3.internal.cache.CacheStrategy$Factory: java.lang.String servedDateString
okhttp3.internal.ws.RealWebSocket: void loopReader()
okhttp3.internal.platform.android.DeferredSocketAdapter: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
okhttp3.internal.http2.Http2Writer$Companion: Http2Writer$Companion()
okhttp3.logging.LoggingEventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
com.google.android.material.internal.FlowLayout: int getRowCount()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
okhttp3.logging.LoggingEventListener$Factory: LoggingEventListener$Factory(okhttp3.logging.HttpLoggingInterceptor$Logger)
okhttp3.internal.cache.DiskLruCache$Editor: okhttp3.internal.cache.DiskLruCache this$0
okhttp3.internal.http2.Http2Stream$Companion
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.google.android.material.bottomsheet.BottomSheetBehavior
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
okhttp3.OkHttpClient: boolean -deprecated_followRedirects()
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1
okhttp3.Cache$urls$1: boolean hasNext()
okhttp3.CacheControl: boolean isPrivate
okio.ForwardingSink: okio.Sink delegate
okhttp3.internal.concurrent.Task: long runOnce()
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory()
okhttp3.Request: java.lang.Object tag()
okhttp3.internal.io.FileSystem$Companion$SystemFileSystem
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
okhttp3.internal.http2.Header$Companion: Header$Companion()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.util.List splitDomain(java.lang.String)
okhttp3.internal.http2.Http2: int TYPE_DATA
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
okhttp3.ConnectionSpec: okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES
okhttp3.internal.platform.Jdk9Platform$Companion: okhttp3.internal.platform.Jdk9Platform buildIfSupported()
okhttp3.logging.LoggingEventListener: long startNs
okhttp3.internal.http2.Http2Connection: void pushRequestLater$okhttp(int,java.util.List)
okhttp3.CertificatePinner$Pin: java.lang.String getHashAlgorithm()
okhttp3.MultipartBody$Part: MultipartBody$Part(okhttp3.Headers,okhttp3.RequestBody)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
okhttp3.Dispatcher: int getMaxRequestsPerHost()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.google.android.material.snackbar.SnackbarContentLayout
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void flush()
okhttp3.Request$Builder: okhttp3.Request$Builder delete$default(okhttp3.Request$Builder,okhttp3.RequestBody,int,java.lang.Object)
okhttp3.internal.connection.ExchangeFinder: ExchangeFinder(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy DEFAULT
okhttp3.EventListener: EventListener()
okhttp3.internal.http2.Http2Writer: boolean closed
okhttp3.Dispatcher: int maxRequestsPerHost
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
okhttp3.MediaType: okhttp3.MediaType$Companion Companion
okhttp3.internal.proxy.NullProxySelector: java.util.List select(java.net.URI)
okhttp3.internal.authenticator.JavaNetAuthenticator: JavaNetAuthenticator()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
okhttp3.OkHttpClient$Builder: void setDns$okhttp(okhttp3.Dns)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.android.material.button.MaterialButton: int getStrokeWidth()
okhttp3.internal.http2.Hpack$Reader: java.util.List getAndResetHeaderList()
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
okhttp3.FormBody: void writeTo(okio.BufferedSink)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType)
okhttp3.Cache: int writeSuccessCount
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: Jdk8WithJettyBootPlatform(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
okhttp3.internal.io.FileSystem$Companion: okhttp3.internal.io.FileSystem$Companion $$INSTANCE
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type NONE
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.Cache: int ENTRY_COUNT
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
okhttp3.internal.connection.RealConnectionPool
okhttp3.HttpUrl$Builder$Companion: int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
okhttp3.internal.proxy.NullProxySelector: okhttp3.internal.proxy.NullProxySelector INSTANCE
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: ninh.luyen.dds.datas.remotes.responses.SearchResponseModel getSearchResponseModel()
okhttp3.internal.connection.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)
okhttp3.RequestBody: okhttp3.RequestBody create(byte[],okhttp3.MediaType,int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
okhttp3.internal.http1.HeadersReader: okio.BufferedSource source
okhttp3.HttpUrl: HttpUrl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String)
okhttp3.internal.Util: java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator)
okhttp3.internal.http2.Settings$Companion: Settings$Companion()
okhttp3.internal.concurrent.TaskRunner$RealBackend: void execute(java.lang.Runnable)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain)
okhttp3.MultipartReader: okhttp3.MultipartReader$Part nextPart()
okhttp3.internal.cache.DiskLruCache: java.lang.String CLEAN
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1: long runOnce()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
okhttp3.internal.http.StatusLine$Companion
okhttp3.Protocol: okhttp3.Protocol$Companion Companion
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
okhttp3.internal.connection.RealConnection: int allocationLimit
okhttp3.internal.Util: int delimiterOffset(java.lang.String,char,int,int)
okhttp3.internal.platform.android.AndroidLogHandler: void publish(java.util.logging.LogRecord)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
okhttp3.MultipartReader$PartSource
kotlinx.coroutines.flow.internal.ChildCancelledException
okhttp3.internal.http2.Hpack: int PREFIX_7_BITS
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel: PushObserver$Companion$PushObserverCancel()
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
okhttp3.Handshake$Companion$get$1: java.util.List invoke()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
okhttp3.CacheControl$Builder: int clampToInt(long)
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
okhttp3.internal.concurrent.TaskRunner$RealBackend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
okhttp3.internal.http.StatusLine$Companion: okhttp3.internal.http.StatusLine parse(java.lang.String)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.Throwable)
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
okhttp3.Response: okhttp3.CacheControl lazyCacheControl
okhttp3.internal.connection.RealCall: okhttp3.internal.connection.RealConnection getConnection()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
okhttp3.internal.connection.RealConnection: boolean isEligible$okhttp(okhttp3.Address,java.util.List)
okhttp3.internal.ws.RealWebSocket: okhttp3.internal.ws.WebSocketExtensions access$getExtensions$p(okhttp3.internal.ws.RealWebSocket)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
okhttp3.OkHttpClient: okhttp3.EventListener$Factory -deprecated_eventListenerFactory()
okhttp3.internal.platform.BouncyCastlePlatform$Companion: okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported()
okhttp3.internal.concurrent.TaskLoggerKt: void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String component2()
okhttp3.internal.cache.DiskLruCache$Companion: DiskLruCache$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.ws.WebSocketProtocol
com.google.gson.LongSerializationPolicy: com.google.gson.JsonElement serialize(java.lang.Long)
org.koin.androidx.scope.ScopeActivity: ScopeActivity()
kotlinx.coroutines.JobSupport: java.lang.Object _state
okhttp3.internal.http.DatesKt: java.util.Date toHttpDateOrNull(java.lang.String)
okhttp3.internal.http2.Http2Connection: void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean)
okhttp3.internal.Util: java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List)
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel: java.lang.String toString()
org.koin.core.error.ScopeNotCreatedException
okhttp3.internal.http.RealInterceptorChain: int getWriteTimeoutMillis$okhttp()
okhttp3.Response$Builder: long getReceivedResponseAtMillis$okhttp()
okhttp3.TlsVersion: java.lang.String -deprecated_javaName()
okhttp3.OkHttpClient$Builder: void setCertificatePinner$okhttp(okhttp3.CertificatePinner)
okhttp3.internal.http2.Http2Reader$ContinuationSource: void close()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
okhttp3.internal.concurrent.TaskRunner$Backend: void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy LATEST
okhttp3.HttpUrl$Builder$Companion: int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
com.google.gson.FieldNamingPolicy: FieldNamingPolicy(java.lang.String,int)
okhttp3.logging.HttpLoggingInterceptor$Level: HttpLoggingInterceptor$Level(java.lang.String,int)
okhttp3.HttpUrl: java.util.Set -deprecated_queryParameterNames()
okhttp3.internal.http.ExchangeCodec: okhttp3.internal.connection.RealConnection getConnection()
com.google.gson.stream.JsonReader: int pos
okhttp3.logging.HttpLoggingInterceptor: HttpLoggingInterceptor(okhttp3.logging.HttpLoggingInterceptor$Logger)
okhttp3.internal.platform.android.AndroidLogKt
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
okhttp3.internal.concurrent.TaskRunner: java.util.logging.Logger access$getLogger$cp()
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink: void close()
okhttp3.internal.http2.Settings: int HEADER_TABLE_SIZE
okhttp3.Request: okhttp3.Request$Builder newBuilder()
okhttp3.internal.http.HttpHeaders
okhttp3.internal.http2.Http2Connection: void start(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
okhttp3.Response: long -deprecated_receivedResponseAtMillis()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type HORIZONTAL_DIMENSION
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
okhttp3.MultipartBody: long contentLength()
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()
okhttp3.Cookie: boolean -deprecated_persistent()
okhttp3.OkHttpClient: java.net.ProxySelector -deprecated_proxySelector()
okhttp3.CacheControl: int minFreshSeconds
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
okhttp3.Address: okhttp3.Dns dns
okhttp3.internal.connection.RealConnection$Companion
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE
okhttp3.internal.cache2.Relay: long getBufferMaxSize()
okhttp3.internal.http2.Http2Stream$FramingSource: long maxByteCount
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
okhttp3.ResponseBody: java.nio.charset.Charset charset()
okhttp3.internal.cache.CacheStrategy$Companion: boolean isCacheable(okhttp3.Response,okhttp3.Request)
okhttp3.internal.concurrent.TaskRunner$Backend: void beforeTask(okhttp3.internal.concurrent.TaskRunner)
okhttp3.Request$Builder: java.lang.String getMethod$okhttp()
okhttp3.internal.http2.Http2Stream$StreamTimeout: Http2Stream$StreamTimeout(okhttp3.internal.http2.Http2Stream)
okhttp3.internal.cache2.Relay$RelaySource: okio.Timeout timeout()
com.google.gson.stream.JsonReader: int[] pathIndices
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
okhttp3.internal.platform.Jdk8WithJettyBootPlatform: void afterHandshake(javax.net.ssl.SSLSocket)
okhttp3.CipherSuite$Companion: java.util.Comparator getORDER_BY_NAME$okhttp()
okhttp3.Response: okhttp3.Headers headers()
okhttp3.internal.http.StatusLine: int code
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
okhttp3.Request: okhttp3.RequestBody body()
okhttp3.CookieJar$Companion$NoCookies
okhttp3.internal.http2.Http2Stream: void setWriteBytesMaximum$okhttp(long)
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.viewpager2.widget.ViewPager2$SavedState
com.google.gson.internal.$Gson$Types$WildcardTypeImpl: long serialVersionUID
okhttp3.Authenticator$Companion: Authenticator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit)
okhttp3.CertificatePinner: java.util.Set getPins()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink newKnownLengthSink()
okhttp3.internal.cache.DiskLruCache$Snapshot: DiskLruCache$Snapshot(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,java.util.List,long[])
okhttp3.internal.concurrent.TaskQueue: boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean)
okhttp3.MultipartBody$Part: okhttp3.Headers -deprecated_headers()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout
okhttp3.internal.ws.WebSocketExtensions: boolean component6()
com.google.android.material.appbar.AppBarLayout$BaseBehavior
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.core.app.NotificationCompatSideChannelService
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
okhttp3.internal.publicsuffix.PublicSuffixDatabase$findMatchingRule$1: java.lang.Object get()
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.Authenticator: okhttp3.Authenticator NONE
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion Companion
okhttp3.internal.http2.Http2Connection: java.util.Map getStreams$okhttp()
okhttp3.internal.cache.DiskLruCache$Entry: boolean getZombie$okhttp()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder -addNetworkInterceptor(kotlin.jvm.functions.Function1)
okhttp3.internal.http.ExchangeCodec
okhttp3.internal.http2.Hpack$Reader: void adjustDynamicTableByteCount()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
okhttp3.ConnectionPool: ConnectionPool()
org.koin.core.definition.Kind: Kind(java.lang.String,int)
okhttp3.Interceptor$Companion: okhttp3.Interceptor invoke(kotlin.jvm.functions.Function1)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
okhttp3.Address: javax.net.ssl.HostnameVerifier -deprecated_hostnameVerifier()
okhttp3.internal.cache.DiskLruCache: int getValueCount$okhttp()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()
okhttp3.internal.concurrent.TaskQueue: java.util.List getScheduledTasks()
ninh.luyen.dds.datas.remotes.responses.Coordinator: int hashCode()
okhttp3.HttpUrl$Builder: void setScheme$okhttp(java.lang.String)
org.koin.core.logger.Level: org.koin.core.logger.Level INFO
okhttp3.internal.http2.Http2Reader: void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Entry: int lockingSourceCount
okhttp3.Protocol$Companion: Protocol$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.android.AndroidLog: java.util.Map knownLoggers
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Level -deprecated_level()
okhttp3.internal.platform.BouncyCastlePlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ackSettings()
okhttp3.CacheControl: int minFreshSeconds()
okhttp3.OkHttpClient: okhttp3.internal.connection.RouteDatabase routeDatabase
okhttp3.internal.ws.WebSocketProtocol: int OPCODE_CONTINUATION
okhttp3.internal.connection.RealCall: okhttp3.Address createAddress(okhttp3.HttpUrl)
ninh.luyen.dds.datas.remotes.responses.Detail: java.util.List weather
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)
okhttp3.internal.connection.RouteSelector$Selection: int nextRouteIndex
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase instance
okhttp3.HttpUrl: java.net.URL url()
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.ConnectionSpec$Companion
okhttp3.FormBody: long writeOrCountBytes(okio.BufferedSink,boolean)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
okhttp3.Cookie: java.util.regex.Pattern TIME_PATTERN
okhttp3.internal.http2.Http2Connection$Listener$Companion
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions copy$default(okhttp3.internal.ws.WebSocketExtensions,boolean,java.lang.Integer,boolean,java.lang.Integer,boolean,boolean,int,java.lang.Object)
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: Http2Connection$ReaderRunnable$ping$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,int,int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okhttp3.internal.platform.android.AndroidCertificateChainCleaner: android.net.http.X509TrustManagerExtensions x509TrustManagerExtensions
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
okhttp3.internal.http2.Http2Writer: void writeContinuationFrames(int,long)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
okhttp3.MultipartReader: okio.Options access$getAfterBoundaryOptions$cp()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
okhttp3.logging.LoggingEventListener$Factory: LoggingEventListener$Factory(okhttp3.logging.HttpLoggingInterceptor$Logger,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.gson.stream.JsonReader: void checkLenient()
okhttp3.internal.concurrent.TaskRunner$Companion: java.util.logging.Logger getLogger()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
okhttp3.OkHttpClient$Builder: void setFollowSslRedirects$okhttp(boolean)
okhttp3.internal.http2.Http2Reader: void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int)
okhttp3.Cache: int ENTRY_METADATA
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: void close()
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
okhttp3.HttpUrl$Builder: java.lang.String getHost$okhttp()
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1: CipherSuite$Companion$ORDER_BY_NAME$1()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
okhttp3.OkHttpClient$Builder: void setProxySelector$okhttp(java.net.ProxySelector)
okhttp3.internal.connection.RealCall$CallReference: java.lang.Object callStackTrace
okhttp3.CacheControl: int maxStaleSeconds
okhttp3.OkHttpClient: java.util.List -deprecated_protocols()
ninh.luyen.dds.datas.remotes.responses.Detail
okhttp3.CacheControl$Builder: int maxAgeSeconds
okhttp3.internal.cache.CacheStrategy$Companion: CacheStrategy$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.platform.android.AndroidLog: okhttp3.internal.platform.android.AndroidLog INSTANCE
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean isSupported()
okhttp3.internal.ws.RealWebSocket$writeOneFrame$$inlined$synchronized$lambda$1: kotlin.jvm.internal.Ref$ObjectRef $writerToClose$inlined
okhttp3.internal.platform.android.StandardAndroidSocketAdapter: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
okhttp3.internal.http2.Settings: int COUNT
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
okhttp3.internal.cache.CacheStrategy$Factory: java.util.Date servedDate
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
okhttp3.internal.http2.Http2Connection: void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
okhttp3.internal.connection.RouteSelector: okhttp3.Address address
okhttp3.internal.http2.Huffman$Node: int getTerminalBitCount()
okhttp3.ResponseBody: okhttp3.ResponseBody create(java.lang.String,okhttp3.MediaType)
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource: okhttp3.HttpUrl url
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
okhttp3.internal.http2.Http2Connection: void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.cache.DiskLruCache: void completeEdit$okhttp(okhttp3.internal.cache.DiskLruCache$Editor,boolean)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
okhttp3.internal.connection.Exchange: void noRequestBody()
okhttp3.internal.connection.RealConnection: void connectTls(okhttp3.internal.connection.ConnectionSpecSelector)
okhttp3.internal.http2.Http2Writer: int maxDataLength()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: char EXCEPTION_MARKER
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.MultipartReader: int partCount
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink: okio.Timeout timeout()
com.google.android.material.chip.Chip: void setCheckable(boolean)
okhttp3.internal.platform.android.AndroidSocketAdapter: java.lang.reflect.Method setHostname
okhttp3.internal.http2.Http2Connection: int AWAIT_PING
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex copy$default(okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex,javax.net.ssl.X509TrustManager,java.lang.reflect.Method,int,java.lang.Object)
com.google.gson.stream.JsonReader: boolean fillBuffer(int)
okhttp3.internal.connection.RealConnection: boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake)
okhttp3.MediaType$Companion: okhttp3.MediaType get(java.lang.String)
com.google.android.material.badge.BadgeDrawable$SavedState: android.os.Parcelable$Creator CREATOR
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
com.google.gson.stream.JsonWriter: void string(java.lang.String)
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
okhttp3.OkHttpClient$Builder: int callTimeout
okhttp3.internal.http2.Hpack$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.gson.stream.JsonReader: long nextLong()
ninh.luyen.dds.datas.remotes.responses.Detail: int dt
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
okhttp3.Cache: int writeSuccessCount()
okhttp3.Request: boolean isHttps()
com.google.gson.stream.JsonReader
okhttp3.internal.connection.RouteSelector$resetNextProxy$1: okhttp3.HttpUrl $url
okhttp3.internal.cache2.Relay$Companion: okhttp3.internal.cache2.Relay edit(java.io.File,okio.Source,okio.ByteString,long)
okhttp3.TlsVersion: java.lang.String javaName()
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
ninh.luyen.dds.datas.remotes.responses.Weather: java.lang.String toString()
okhttp3.internal.http2.Http2Stream$FramingSource: void setFinished$okhttp(boolean)
okhttp3.HttpUrl: int defaultPort(java.lang.String)
kotlin.LazyThreadSafetyMode: LazyThreadSafetyMode(java.lang.String,int)
okhttp3.internal.cache.DiskLruCache$Entry: java.lang.String getKey$okhttp()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
okhttp3.internal.Util: void assertThreadDoesntHoldLock(java.lang.Object)
okhttp3.internal.http2.Huffman: void decode(okio.BufferedSource,long,okio.BufferedSink)
okhttp3.Authenticator$Companion$AuthenticatorNone: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
okhttp3.internal.connection.Exchange$ResponseBodySource: okhttp3.internal.connection.Exchange this$0
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okhttp3.internal.http2.Http2Reader$ContinuationSource: int length
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
ninh.luyen.dds.datas.remotes.responses.City: ninh.luyen.dds.datas.remotes.responses.Coordinator getCoord()
okhttp3.OkHttpClient: java.util.List networkInterceptors
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
okhttp3.internal.connection.RealConnection: java.net.Socket socket
okhttp3.internal.Util: java.lang.String toHexString(long)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
ninh.luyen.dds.NewsApplication
okhttp3.OkHttpClient$Builder: int readTimeout
okhttp3.MultipartReader
okhttp3.internal.http2.Http2Connection: int nextStreamId
okhttp3.internal.ws.RealWebSocket: boolean writeOneFrame$okhttp()
kotlin.jvm.internal.MutablePropertyReference0: kotlin.reflect.KMutableProperty$Setter getSetter()
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http2.Http2ExchangeCodec$Companion: Http2ExchangeCodec$Companion()
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
okhttp3.ConnectionPool: ConnectionPool(okhttp3.internal.connection.RealConnectionPool)
okhttp3.Route: java.net.Proxy proxy()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection)
androidx.appcompat.widget.Toolbar
okhttp3.internal.http2.Http2Writer: java.util.logging.Logger logger
okhttp3.internal.http1.Http1ExchangeCodec: okio.Sink createRequestBody(okhttp3.Request,long)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
okhttp3.OkHttpClient: java.util.List interceptors()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
okhttp3.internal.ws.WebSocketExtensions: okhttp3.internal.ws.WebSocketExtensions$Companion Companion
okhttp3.internal.http2.Http2Connection: void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String UPGRADE
okhttp3.RequestBody: okhttp3.MediaType contentType()
okhttp3.internal.http2.Http2Stream$FramingSink: Http2Stream$FramingSink(okhttp3.internal.http2.Http2Stream,boolean)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
okio.Timeout: okio.Timeout clearDeadline()
okhttp3.internal.ws.WebSocketProtocol: okhttp3.internal.ws.WebSocketProtocol INSTANCE
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
okhttp3.internal.io.FileSystem$Companion: FileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http2.Http2Connection$ReaderRunnable: okhttp3.internal.http2.Http2Reader getReader$okhttp()
com.google.gson.stream.JsonReader: void beginObject()
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1: java.text.DateFormat initialValue()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
ninh.luyen.dds.datas.remotes.responses.City: int getPopulation()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
okhttp3.CacheControl: int -deprecated_minFreshSeconds()
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
com.google.android.material.slider.RangeSlider$RangeSliderState: android.os.Parcelable$Creator CREATOR
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
okhttp3.internal.concurrent.TaskQueue: void execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object)
okhttp3.MultipartReader$Part: MultipartReader$Part(okhttp3.Headers,okio.BufferedSource)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
okhttp3.internal.platform.android.AndroidLogKt: int getAndroidLevel(java.util.logging.LogRecord)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
okhttp3.Cookie: java.lang.String domain
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
okhttp3.Request: okhttp3.CacheControl cacheControl()
okhttp3.OkHttpClient: okhttp3.Cache cache
okhttp3.internal.http2.Hpack$Writer: void clearDynamicTable()
okhttp3.HttpUrl: java.lang.String -deprecated_encodedFragment()
okhttp3.internal.concurrent.TaskQueue: java.util.concurrent.CountDownLatch idleLatch()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode: androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode SHARED_STABLE_IDS
okhttp3.CertificatePinner: CertificatePinner(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner)
okhttp3.Dispatcher: java.util.ArrayDeque runningAsyncCalls
okhttp3.internal.connection.RealConnection$connectTls$1: okhttp3.CertificatePinner $certificatePinner
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] $VALUES
okhttp3.internal.platform.android.AndroidSocketAdapter: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
okhttp3.internal.Util$threadFactory$1: java.lang.Thread newThread(java.lang.Runnable)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
okhttp3.internal.connection.RealConnection: int successCount
okhttp3.OkHttp
okhttp3.logging.LoggingEventListener: void dnsStart(okhttp3.Call,java.lang.String)
okhttp3.HttpUrl$Companion: okhttp3.HttpUrl parse(java.lang.String)
okhttp3.Response$Builder: void setNetworkResponse$okhttp(okhttp3.Response)
okhttp3.Protocol$Companion: okhttp3.Protocol get(java.lang.String)
okhttp3.internal.connection.Exchange: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource source
okhttp3.internal.HostnamesKt: java.net.InetAddress decodeIpv6(java.lang.String,int,int)
okhttp3.internal.ws.WebSocketExtensions: java.lang.String HEADER_WEB_SOCKET_EXTENSION
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.google.gson.stream.JsonReader: boolean hasNext()
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnectionPool getConnectionPool()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
okhttp3.Response$Builder: okhttp3.Handshake handshake
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
okhttp3.internal.platform.Platform: int INFO
androidx.lifecycle.CompositeGeneratedAdaptersObserver
okhttp3.Protocol: okhttp3.Protocol HTTP_2
okhttp3.internal.http2.Http2Stream$FramingSource: okio.Buffer readBuffer
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
androidx.appcompat.widget.ActivityChooserView$InnerLayout
okhttp3.logging.LoggingEventListener: void responseHeadersStart(okhttp3.Call)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
kotlin.collections.EmptySet: java.lang.Object readResolve()
okhttp3.Headers: int -deprecated_size()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
okhttp3.internal.Util: int delimiterOffset$default(java.lang.String,java.lang.String,int,int,int,java.lang.Object)
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
okhttp3.Cache
ninh.luyen.dds.datas.remotes.responses.Temp: double component2()
okhttp3.Headers: java.util.List values(java.lang.String)
okhttp3.internal.http2.Huffman: Huffman()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Settings peerSettings
okhttp3.internal.cache2.Relay$RelaySource: Relay$RelaySource(okhttp3.internal.cache2.Relay)
okhttp3.internal.platform.android.DeferredSocketAdapter: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
okhttp3.CacheControl: boolean -deprecated_mustRevalidate()
androidx.appcompat.widget.SearchView: int getInputType()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
ninh.luyen.dds.datas.remotes.responses.SearchResponseModel: java.lang.String getCod()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
okhttp3.internal.http1.Http1ExchangeCodec: okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
okhttp3.internal.platform.android.BouncyCastleSocketAdapter: okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
okhttp3.internal.http2.Http2: okio.ByteString CONNECTION_PREFACE
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
okhttp3.internal.http2.Http2Connection: void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long)
kotlin.jvm.internal.MutablePropertyReference0: java.lang.Object getDelegate()
okhttp3.internal.http2.Http2Connection: long getWriteBytesMaximum()
com.google.gson.stream.JsonReader: void skipValue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
okio.Timeout: okio.Timeout$Companion Companion
okhttp3.CipherSuite$Companion: okhttp3.CipherSuite forJavaName(java.lang.String)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
okhttp3.internal.platform.android.CloseGuard$Companion
okhttp3.internal.tls.CertificateChainCleaner$Companion
okhttp3.internal.cache.DiskLruCache$Editor: boolean[] getWritten$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource: void close()
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okio.ByteString,okhttp3.MediaType)
okhttp3.Interceptor$Companion$invoke$1: kotlin.jvm.functions.Function1 $block
com.google.gson.stream.JsonScope: int NONEMPTY_ARRAY
okhttp3.Cache$Entry: boolean matches(okhttp3.Request,okhttp3.Response)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
okhttp3.internal.connection.RealCall: boolean forWebSocket
okhttp3.internal.connection.RealConnection$connectTls$2: RealConnection$connectTls$2(okhttp3.internal.connection.RealConnection)
okhttp3.internal.http2.ErrorCode: int getHttpCode()
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp()
okhttp3.internal.ws.WebSocketWriter: okio.BufferedSink getSink()
com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE
okhttp3.internal.connection.RouteException
okhttp3.internal.concurrent.TaskQueue$AwaitIdleTask: java.util.concurrent.CountDownLatch getLatch()
okhttp3.internal.concurrent.Task
okhttp3.internal.connection.Exchange$ResponseBodySource: long contentLength
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
com.google.android.material.chip.Chip: void setSingleLine(boolean)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
okhttp3.Request$Builder: okhttp3.Request$Builder get()
androidx.fragment.app.Fragment$2
okhttp3.internal.connection.RealConnection: void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener)
okhttp3.HttpUrl$Builder$Companion: int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int)
okhttp3.internal.platform.Platform$Companion: byte[] concatLengthPrefixed(java.util.List)
okhttp3.internal.platform.Platform: void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object)
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
kotlin.jvm.internal.Lambda: java.lang.String toString()
okhttp3.internal.cache2.Relay: void writeMetadata(long)
okhttp3.CookieJar: okhttp3.CookieJar$Companion Companion
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.android.material.button.MaterialButtonToggleGroup
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
com.google.gson.internal.LazilyParsedNumber: java.lang.Object writeReplace()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
okhttp3.internal.Util: int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
okhttp3.Cache$Entry: java.lang.String url
androidx.recyclerview.widget.RecyclerView$SavedState
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
okhttp3.internal.Internal: void applyConnectionSpec(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
okhttp3.HttpUrl$Builder$Companion: int schemeDelimiterOffset(java.lang.String,int,int)
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider: void setUnsupported(boolean)
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.gson.stream.JsonWriter: java.lang.String deferredName
okhttp3.MultipartReader: long access$currentPartBytesRemaining(okhttp3.MultipartReader,long)
okhttp3.internal.http2.Http2Connection: void writePing(boolean,int,int)
com.google.gson.stream.JsonReader: int PEEKED_UNQUOTED_NAME
okhttp3.internal.cache.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode: androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode[] values()
okhttp3.internal.connection.RouteSelector: java.util.List inetSocketAddresses
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: Http1ExchangeCodec$AbstractSource(okhttp3.internal.http1.Http1ExchangeCodec)
okhttp3.internal.connection.Exchange: void writeRequestHeaders(okhttp3.Request)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem
okhttp3.OkHttpClient: int readTimeoutMillis
okhttp3.internal.http2.Http2ExchangeCodec: java.lang.String HOST
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
okhttp3.OkHttpClient$Builder: okhttp3.Authenticator proxyAuthenticator
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
okhttp3.internal.connection.RealConnectionPool$Companion: RealConnectionPool$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource: boolean closed
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key
okhttp3.internal.http1.Http1ExchangeCodec: void writeRequest(okhttp3.Headers,java.lang.String)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
okhttp3.internal.http.BridgeInterceptor: java.lang.String cookieHeader(java.util.List)
okhttp3.internal.http2.Http2Connection: int OKHTTP_CLIENT_WINDOW_SIZE
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1: int $payload1$inlined
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
okhttp3.internal.platform.android.Android10SocketAdapter: Android10SocketAdapter()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
ninh.luyen.dds.datas.remotes.responses.Weather: Weather(java.lang.String,java.lang.String,int,java.lang.String)
okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager x509TrustManager()
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
okhttp3.MultipartBody: okhttp3.MediaType FORM
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
okhttp3.internal.http2.Http2Connection: boolean isShutdown
okhttp3.FormBody: java.lang.String encodedValue(int)
okhttp3.internal.connection.RealConnection$connectTls$2: java.util.List invoke()
kotlinx.coroutines.CoroutineStart
okhttp3.internal.concurrent.TaskRunner: boolean coordinatorWaiting
com.google.gson.stream.JsonWriter: void setIndent(java.lang.String)
com.google.gson.stream.JsonReader: java.io.Reader in
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode: androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode ISOLATED_STABLE_IDS
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor setLevel(okhttp3.logging.HttpLoggingInterceptor$Level)
okhttp3.Cache: void close()
okhttp3.internal.http2.Http2Connection: void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long)
com.google.android.material.datepicker.CalendarConstraints$DateValidator
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1: boolean matchesSocket(javax.net.ssl.SSLSocket)
okhttp3.Response$Builder: okhttp3.Request getRequest$okhttp()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
okhttp3.ConnectionSpec: boolean isTls()
okhttp3.Response$Builder: okhttp3.Protocol getProtocol$okhttp()
okhttp3.internal.http1.Http1ExchangeCodec: int STATE_READ_RESPONSE_HEADERS
okhttp3.Interceptor$Chain: okhttp3.Call call()
okhttp3.Cache: java.io.File -deprecated_directory()
okhttp3.internal.connection.RealConnection$connectTls$1: java.lang.Object invoke()
okhttp3.internal.platform.OpenJSSEPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
okhttp3.internal.cache.CacheRequest: okio.Sink body()
okhttp3.internal.http.ExchangeCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: boolean $cancelable
okhttp3.internal.http.RealInterceptorChain: int calls
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
okhttp3.internal.ws.WebSocketReader: boolean readingCompressedMessage
com.google.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED_NAME
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
com.google.android.material.button.MaterialButton: int getIconPadding()
okhttp3.internal.ws.MessageDeflater: okio.DeflaterSink deflaterSink
okhttp3.internal.http2.Http2: int TYPE_WINDOW_UPDATE
okhttp3.HttpUrl$Companion: java.util.List toQueryNamesAndValues$okhttp(java.lang.String)
okhttp3.ResponseBody: java.io.InputStream byteStream()
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
okhttp3.MediaType$Companion: MediaType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.material.chip.Chip: float getChipEndPadding()
okhttp3.Handshake$peerCertificates$2: Handshake$peerCertificates$2(kotlin.jvm.functions.Function0)
ninh.luyen.dds.datas.cache.models.SearchCache
okhttp3.internal.cache.DiskLruCache$Entry: okhttp3.internal.cache.DiskLruCache$Editor getCurrentEditor$okhttp()
io.reactivex.BackpressureStrategy: io.reactivex.BackpressureStrategy MISSING
okhttp3.internal.platform.android.CloseGuard: java.lang.reflect.Method warnIfOpenMethod
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
okhttp3.Request: okhttp3.RequestBody body
okhttp3.internal.platform.Android10Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
okhttp3.HttpUrl$Companion
com.google.gson.stream.JsonReader$1: void promoteNameToValue(com.google.gson.stream.JsonReader)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
ninh.luyen.dds.datas.remotes.responses.SearchCacheModel
okhttp3.internal.platform.ConscryptPlatform: boolean access$isSupported$cp()
okhttp3.internal.http2.Http2Connection$Builder: int getPingIntervalMillis$okhttp()
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
okhttp3.internal.connection.RealConnectionPool: int maxIdleConnections
okhttp3.HttpUrl: java.lang.String -deprecated_password()
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1: long runOnce()
ninh.luyen.dds.datas.remotes.responses.Detail: java.util.List component6()
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
kotlinx.coroutines.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
okhttp3.OkHttpClient: void verifyClientState()
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1: java.util.List $requestHeaders$inlined
okhttp3.RequestBody$Companion: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okhttp3.internal.connection.RealConnection: void access$setHandshake$p(okhttp3.internal.connection.RealConnection,okhttp3.Handshake)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder(okhttp3.OkHttpClient)
okhttp3.logging.HttpLoggingInterceptor: okhttp3.logging.HttpLoggingInterceptor$Logger logger
okhttp3.internal.http.ExchangeCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
okhttp3.internal.Internal
okhttp3.internal.Util$threadFactory$1: java.lang.String $name
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
okhttp3.internal.cache.CacheStrategy
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
okhttp3.CacheControl: int maxAgeSeconds
okhttp3.OkHttpClient$Companion: java.util.List getDEFAULT_PROTOCOLS$okhttp()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
org.koin.core.definition.Kind: org.koin.core.definition.Kind[] $VALUES
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
androidx.lifecycle.SavedStateHandleController$1
okhttp3.internal.platform.Platform: void log(java.lang.String,int,java.lang.Throwable)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
com.google.android.material.button.MaterialButton: int getCornerRadius()
androidx.recyclerview.widget.GridLayoutManager
okhttp3.Protocol: okhttp3.Protocol H2_PRIOR_KNOWLEDGE
okhttp3.logging.HttpLoggingInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
okhttp3.OkHttpClient: java.util.List access$getDEFAULT_PROTOCOLS$cp()
com.google.android.material.timepicker.ClockHandView
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
okhttp3.internal.http2.Http2Stream$FramingSource: boolean getFinished$okhttp()
okhttp3.ResponseBody$Companion$asResponseBody$1: long contentLength()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode NONE
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
com.google.android.material.transformation.FabTransformationScrimBehavior
okhttp3.internal.Util$asFactory$1: okhttp3.EventListener create(okhttp3.Call)
okhttp3.internal.cache.DiskLruCache$Entry: void setLengths$okhttp(java.util.List)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
io.reactivex.internal.util.ExceptionHelper$1: long serialVersionUID
okhttp3.MultipartReader: okhttp3.MultipartReader$PartSource access$getCurrentPart$p(okhttp3.MultipartReader)
com.google.gson.stream.JsonReader: int NUMBER_CHAR_DIGIT
okhttp3.internal.Internal: okhttp3.Response cacheGet(okhttp3.Cache,okhttp3.Request)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
okhttp3.CipherSuite$Companion: java.lang.String secondaryName(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.google.android.material.button.MaterialButton: int getTextWidth()
ninh.luyen.dds.datas.remotes.responses.Coordinator: ninh.luyen.dds.datas.remotes.responses.Coordinator copy(double,double)
okhttp3.internal.platform.AndroidPlatform$Companion: AndroidPlatform$Companion()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
androidx.lifecycle.ReflectiveGenericLifecycleObserver
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex: AndroidPlatform$CustomTrustRootIndex(javax.net.ssl.X509TrustManager,java.lang.reflect.Method)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
okhttp3.internal.cache2.Relay: java.lang.Thread getUpstreamReader()
okhttp3.ConnectionSpec: java.lang.String[] cipherSuitesAsString
okhttp3.internal.ws.RealWebSocket$Close: long cancelAfterCloseMillis
okhttp3.internal.connection.Exchange: okhttp3.internal.connection.RealConnection connection
com.google.android.material.datepicker.SingleDateSelector
okhttp3.internal.connection.RealConnection$connectTls$1
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1: Http2Connection$pushDataLater$$inlined$execute$1(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean)
